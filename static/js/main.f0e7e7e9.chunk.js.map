{"version":3,"sources":["utils/analytics.ts","utils/constants.ts","styles/common.ts","styles/index.ts","components/Header.tsx","components/Sidebar.tsx","utils/buildDate.ts","features/rollGame/rollGameUtils.ts","components/Footer.tsx","features/platforms/Platform.tsx","features/options/optionsUtils.ts","features/options/optionsSlice.ts","features/rollGame/rollGameSlice.ts","features/platforms/Platforms.tsx","components/PrettoSlider.tsx","features/options/options.mock.ts","features/options/Options.tsx","features/rollGame/GameLinks.tsx","utils/timingFunction.ts","features/circle/getTextWidth.ts","features/circle/sliceTextByMaxWidth.ts","features/circle/drawCircle.ts","features/circle/useSoundsList.ts","features/circle/useDrawCircle.ts","icons/arrow-right.svg","features/circle/CircleCanvas.tsx","utils/replaceSpacesWithNbsp.ts","features/rollGame/SelectedPlatformsMessage.tsx","features/rollGame/Result.tsx","features/rollGame/RollGame.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CATEGORIES","sendEvent","eventArgs","ReactGA","event","initialize","page","pageview","rollGame","start","category","action","complete","searchLink","serviceId","label","platforms","selectAll","selectNone","platformNameClick","platformId","platformCheckboxClick","ui","isVisible","options","changeOption","name","value","link","url","GLOBAL_FONT","css","colors","createGlobalStyle","common","HeaderRoot","styled","header","Header","className","Typography","variant","LinksRoot","aside","buildDate","gamesCount","R","games","FooterRoot","footer","FooterInner","FooterLink","Link","attrs","rel","target","color","buildDateString","format","Date","React","memo","href","onClick","analytics","id","checked","onNameClick","onCheckboxClick","ListItem","key","button","selected","style","padding","alignItems","Checkbox","edge","onChange","ListItemText","primary","primaryTypographyProps","fontWeight","margin","display","secondary","secondaryTypographyProps","marginLeft","writeOptionsToLocalStorage","localStorage","setItem","JSON","stringify","initialState","selectedPlatformIds","secondsToSpin","speed","numberOfGames","getItem","parse","e","readOptionsFromLocalStorage","createSlice","reducers","updateOption","state","payload","selectPlatform","togglePlatform","index","indexOf","splice","push","actions","secondsToSpinSelector","speedSelector","numberOfGamesSelector","selectedPlatformIdsSelector","isRolling","gameIndex","rolledGames","updateRolledGamesThunk","rollGameStart","rollGameComplete","isRollingSelector","rolledGamesSelector","rolledGameSelector","updateRolledGames","dispatch","getState","count","gamesBySelectedPlatforms","length","items","shuffle","map","rest","platform","find","getRandomGames","PlatformsRoot","div","PlatformsList","p","isDisabled","Platforms","useDispatch","useState","setIsVisible","useSelector","windowSize","useWindowSize","handleNameClick","useCallback","handleCheckboxClick","handleSelectAll","handleSelectNone","Box","justifyContent","mb","Button","size","component","startIcon","width","height","flexGrow","native","List","dense","disablePadding","releaseDate","includes","filter","marginBottom","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","title","type","step","min","max","marks","Array","_","i","n","OptionsRoot","OptionsList","Options","values","renderOption","Fragment","gutterBottom","defaultValue","valueLabelDisplay","renderSlider","debounce","handleOptionChange","GameLinksRoot","ServiceLink","Links","GameLinks","rolledGame","links","searchQuery","encodeURI","text","icon","getLinks","f1","easeExpOut","f2","easeExpInOut","f3","easeCircleInOut","timingFunction","canvas","getTextWidth","font","document","createElement","context","getContext","measureText","sliceTextByMaxWidth","maxWidth","beginCursor","endCursor","cursor","Math","floor","textSlice","slice","drawCircle","segments","radius","textFont","rotateAngle","coeff","PI","textOffset","clearRect","translate","rotate","arc","fillStyle","fill","forEach","segment","from","to","beginPath","LINE_WIDTH","lineTo","strokeStyle","lineWidth","stroke","meanAngle","angle1","angle2","atan2","sin","cos","meanAngleDeg","textAngleRotation","textAngle","textX","offset","angle","getX","textY","getY","save","fillText","restore","useSoundsList","elems","soundsRef","useRef","isActiveRef","current","initializeIsActive","sounds","isActive","useEffect","clearFunctions","audio","handleEnded","addEventListener","removeEventListener","func","play","wheelSoundTicks","getElementById","wheelSoundComplete","getGameIndexByAngle","segmentAngle","normalizedAngle","abs","getSegmentAngle","segmentsCount","requestId","prevTime","fullTime","fullAngle","currentIndex","scale","useDrawCircle","canvasRef","onRollComplete","stateRef","playTick","maxTextWidth","normalizeSegments","drawFunc","useMemo","setSegmentAngle","handleResize","dpr","window","devicePixelRatio","rect","getBoundingClientRect","stop","cancelAnimationFrame","animate","time","deltaTime","timeI","speedI","requestAnimationFrame","resetTransform","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","strokeWidth","d","SvgArrowRight","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","CircleCanvasRoot","Canvas","RollButton","ArrowRightIcon","ArrowRightSvg","CircleCanvas","setRadius","isRollButtonDisabled","disabled","replaceSpacesWithNbsp","replace","SelectedPlatformsMessage","selectedPlatforms","dangerouslySetInnerHTML","__html","ResultRoot","Result","textAlign","renderRolledGame","RollGameRoot","main","RollGame","theme","createMuiTheme","palette","AppRoot","StyledHeader","StyledSidebarLeft","Sidebar","StyledSidebarRight","StyledRollGame","StyledFooter","Footer","App","ThemeProvider","rootReducer","combineReducers","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","pathname","search","hash","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f0e7e7e9.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\nconst CATEGORIES = {\n  rollGame: 'Roll Game',\n  searchLinks: 'Search Links',\n  platforms: 'Platforms',\n  userInterface: 'User Interface',\n};\n\nconst initialize = () => ReactGA.initialize('UA-139550930-4');\n\nconst pageview = (page: string) => ReactGA.pageview(page);\n\nconst sendEvent = (eventArgs: ReactGA.EventArgs) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(eventArgs);\n  } else {\n    ReactGA.event(eventArgs);\n  }\n};\n\nconst event = {\n  rollGame: {\n    start: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Start',\n      }),\n    complete: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Complete',\n      }),\n  },\n\n  // search links\n  searchLink: (serviceId: string) =>\n    sendEvent({\n      category: CATEGORIES.searchLinks,\n      action: 'Search Link Click',\n      label: serviceId,\n    }),\n\n  // platforms\n  platforms: {\n    selectAll: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select All Click',\n      }),\n    selectNone: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select None Click',\n      }),\n    platformNameClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Name Click',\n        label: platformId,\n      }),\n    platformCheckboxClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Checkbox Click',\n        label: platformId,\n      }),\n  },\n\n  // user interface\n  ui: {\n    platforms: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Platforms',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    options: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Options',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    changeOption: (name: string, value: number) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Change Option',\n        label: name,\n        value,\n      }),\n    link: (url: string) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Link',\n        label: url,\n      }),\n  },\n};\n\nexport default {\n  initialize,\n  pageview,\n  event,\n};\n","export const GLOBAL_FONT = \"Roboto, Helvetica, Arial, sans-serif\";\n\nexport const LS_OPTIONS = \"rggOptions\";\n","import { css } from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\n\nimport { GLOBAL_FONT } from 'utils/constants';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${GLOBAL_FONT};\n    margin: 0;\n    background-color: ${colors.grey[900]};\n    color: #fff;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\n\nexport default createGlobalStyle`\n  ${common}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\nimport { Typography } from '@material-ui/core';\n\nconst HeaderRoot = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${colors.grey[800]};\n  color: #fff;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst Header = ({ className }: Props) => {\n  return (\n    <HeaderRoot className={className}>\n      <Typography variant=\"h4\">Retro Game Gauntlet</Typography>\n    </HeaderRoot>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst LinksRoot = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  & > :not(:last-child) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport default LinksRoot;\n","import preval from \"preval.macro\";\n\nconst buildDate = preval`module.exports = Date.now()` as number;\n\nexport default buildDate;\n","import * as R from 'ramda';\nimport { shuffle } from 'd3-array';\n\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\nimport games from 'data/games.json';\nimport platforms from 'data/platforms.json';\n\nexport const getRandomGames = (\n  selectedPlatformIds: string[],\n  count: number,\n): RolledGame[] => {\n  const gamesBySelectedPlatforms = selectedPlatformIds.length\n    ? R.pick(selectedPlatformIds, games)\n    : games;\n\n  const rolledGames = R.pipe<any, any, any, any, any, any>(\n    R.toPairs,\n    R.map<any, any>(([platformId, items]) =>\n      R.map((name) => ({ platformId, name }), items),\n    ),\n    R.flatten,\n    shuffle,\n    R.slice(0, count),\n  )(gamesBySelectedPlatforms);\n\n  return rolledGames.map(({ platformId, ...rest }: any) => {\n    const platform = platforms.find(R.propEq('id', platformId));\n\n    return {\n      platform: platform?.name || '',\n      ...rest,\n    };\n  });\n};\n\nexport const gamesCount = R.pipe<any, any, any, any>(\n  R.values,\n  R.flatten,\n  R.propOr(0, 'length'),\n)(games) as number;\n\n// longest game names\n// console.log(\n//   R.pipe<any, any, any, any, any>(\n//     R.values,\n//     R.flatten,\n//     R.sortWith([R.descend(R.prop(\"length\"))]),\n//     R.slice(0, 10)\n//   )(games)\n// );\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\nimport { Typography, Link } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nimport analytics from 'utils/analytics';\nimport buildDate from 'utils/buildDate';\nimport { gamesCount } from 'features/rollGame/rollGameUtils';\n\nconst FooterRoot = styled.footer`\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid ${colors.grey[800]};\n  border-bottom: 1px solid ${colors.grey[800]};\n`;\nconst FooterInner = styled(Typography)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  flex-grow: 1;\n  max-width: 1280px;\n  height: 100%;\n  font-size: 0.8rem !important;\n  text-align: center;\n  opacity: 0.6;\n\n  @media (min-width: 720px) {\n    flex-direction: row;\n    text-align: left;\n  }\n`;\nconst FooterLink = styled(Link).attrs({\n  rel: 'noreferrer noopener',\n  target: '_blank',\n  color: 'inherit',\n})``;\n\ntype Props = {\n  className?: string;\n};\n\n// TODO: add FAQ\n\nconst gamesListSourceUrl = '//nukecritic.com/rgg/';\nconst authorUrl = '//github.com/DmitryScaletta';\nconst reportBugUrl = '//github.com/honeykingdom/rgg/issues';\n\nconst buildDateString = format(new Date(buildDate), 'P p');\n\nconst Footer = ({ className }: Props) => {\n  return (\n    <FooterRoot className={className}>\n      <FooterInner>\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Games in database:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {gamesCount}\n          </Typography>\n          <br />\n          Games list from:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={gamesListSourceUrl}\n              onClick={() => analytics.event.ui.link(gamesListSourceUrl)}\n            >\n              nukecritic.com/rgg/\n            </FooterLink>\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Author:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={authorUrl}\n              onClick={() => analytics.event.ui.link(authorUrl)}\n            >\n              DmitryScaletta\n            </FooterLink>\n          </Typography>\n          <br />\n          Last update:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {buildDateString}\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={reportBugUrl}\n              onClick={() => analytics.event.ui.link(reportBugUrl)}\n            >\n              Report a bug\n            </FooterLink>\n          </Typography>\n        </Typography>\n      </FooterInner>\n    </FooterRoot>\n  );\n};\n\nexport default React.memo(Footer);\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as colors from '@material-ui/core/colors';\n\ntype Props = {\n  id: string;\n  name: string;\n  releaseDate: string;\n  gamesCount: number;\n  checked: boolean;\n  onNameClick: (id: string) => void;\n  onCheckboxClick: (id: string) => void;\n};\n\nconst Platform = ({\n  id,\n  name,\n  gamesCount,\n  checked,\n  onNameClick,\n  onCheckboxClick,\n}: Props) => (\n  <ListItem\n    key={id}\n    button\n    selected={checked}\n    style={{ padding: '0 12px', alignItems: 'stretch' }}\n  >\n    <Checkbox\n      edge=\"start\"\n      color=\"default\"\n      checked={checked}\n      style={{ padding: 4 }}\n      onChange={() => onCheckboxClick(id)}\n    />\n    <ListItemText\n      id={id}\n      primary={name}\n      primaryTypographyProps={{ style: { fontWeight: 'bold' } }}\n      style={{ margin: 0, display: 'flex', alignItems: 'center' }}\n      secondary={`(${gamesCount} games)`}\n      secondaryTypographyProps={{\n        style: { display: 'inline', marginLeft: 4, color: colors.grey[500] },\n      }}\n      onClick={() => onNameClick(id)}\n    />\n  </ListItem>\n);\n\nexport default React.memo(Platform);\n","import { LS_OPTIONS } from 'utils/constants';\n\nexport const writeOptionsToLocalStorage = (options: object) => {\n  localStorage.setItem(LS_OPTIONS, JSON.stringify(options));\n};\n\nexport const readOptionsFromLocalStorage = () => {\n  const options = localStorage.getItem(LS_OPTIONS);\n\n  try {\n    return JSON.parse(options || '{}');\n  } catch (e) {\n    return {};\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport {\n  writeOptionsToLocalStorage,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\n\ntype OptionsState = {\n  selectedPlatformIds: string[];\n  secondsToSpin: number;\n  speed: number;\n  numberOfGames: number;\n};\n\nexport type OptionName =\n  | 'secondsToSpin'\n  | 'speed'\n  | 'numberOfGames'\n  | 'selectedPlatformIds';\ntype UpdateOptionAction = {\n  name: OptionName;\n  value: any;\n};\n\nconst initialState: OptionsState = {\n  selectedPlatformIds: ['playstation', 'playstation-2'],\n  secondsToSpin: 30,\n  speed: 3,\n  numberOfGames: 16,\n  ...readOptionsFromLocalStorage(),\n};\n\n// TODO: remove side effect from reducers\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    updateOption: (state, { payload }: PayloadAction<UpdateOptionAction>) => {\n      const { name, value } = payload;\n      state[name] = value;\n\n      writeOptionsToLocalStorage(state);\n    },\n    selectPlatform: (state, { payload }: PayloadAction<string>) => {\n      state.selectedPlatformIds = [payload];\n\n      writeOptionsToLocalStorage(state);\n    },\n    togglePlatform: (state, { payload }: PayloadAction<string>) => {\n      const index = state.selectedPlatformIds.indexOf(payload);\n\n      if (index > -1) {\n        state.selectedPlatformIds.splice(index, 1);\n      } else {\n        state.selectedPlatformIds.push(payload);\n      }\n\n      writeOptionsToLocalStorage(state);\n    },\n  },\n});\n\nexport const { updateOption, selectPlatform, togglePlatform } = options.actions;\n\nexport default options.reducer;\n\n// selectors\nexport const secondsToSpinSelector = (state: RootState) =>\n  state.options.secondsToSpin;\n\nexport const speedSelector = (state: RootState) => state.options.speed;\n\nexport const numberOfGamesSelector = (state: RootState) =>\n  state.options.numberOfGames;\n\nexport const selectedPlatformIdsSelector = (state: RootState) =>\n  state.options.selectedPlatformIds;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport { AppDispatch } from 'app/store';\nimport {\n  numberOfGamesSelector,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { getRandomGames } from 'features/rollGame/rollGameUtils';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\ninterface RollGameState {\n  isRolling: boolean;\n  gameIndex: number | null;\n  rolledGames: RolledGame[];\n}\n\nconst initialState: RollGameState = {\n  isRolling: false,\n  gameIndex: null,\n  rolledGames: [],\n};\n\nconst rollGame = createSlice({\n  name: 'rollGame',\n  initialState,\n  reducers: {\n    updateRolledGamesThunk: (\n      state,\n      { payload }: PayloadAction<RolledGame[]>,\n    ) => {\n      state.rolledGames = payload;\n    },\n    rollGameStart: (state) => {\n      state.isRolling = true;\n      state.gameIndex = null;\n    },\n    rollGameComplete: (state, { payload }: PayloadAction<number>) => {\n      state.isRolling = false;\n      state.gameIndex = payload;\n    },\n  },\n});\n\nexport const { rollGameStart, rollGameComplete } = rollGame.actions;\n\nconst { updateRolledGamesThunk } = rollGame.actions;\n\nexport default rollGame.reducer;\n\n// selectors\nexport const isRollingSelector = (state: RootState) => state.rollGame.isRolling;\n\nexport const rolledGamesSelector = (state: RootState) =>\n  state.rollGame.rolledGames;\n\nexport const rolledGameIndexSelector = (state: RootState) =>\n  state.rollGame.gameIndex;\n\nexport const rolledGameSelector = (state: RootState) => {\n  if (state.rollGame.gameIndex === null) return null;\n\n  return state.rollGame.rolledGames[state.rollGame.gameIndex];\n};\n\n// actions\nexport const updateRolledGames = () => (\n  dispatch: AppDispatch,\n  getState: () => RootState,\n) => {\n  const state = getState();\n\n  const numberOfGames = numberOfGamesSelector(state);\n  const selectedPlatformIds = selectedPlatformIdsSelector(state);\n\n  const rolledGames = getRandomGames(selectedPlatformIds, numberOfGames);\n\n  dispatch(updateRolledGamesThunk(rolledGames));\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Scrollbar from 'react-scrollbars-custom';\nimport { useWindowSize } from 'react-use';\nimport { Typography, List, Button, Box, ListItem } from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n\nimport analytics from 'utils/analytics';\nimport Platform from 'features/platforms/Platform';\nimport {\n  selectPlatform,\n  togglePlatform,\n  updateOption,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst PlatformsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\nconst PlatformsList = styled.div<{ isDisabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\nconst Platforms = () => {\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(true);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  const windowSize = useWindowSize();\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.platforms(!isVisible);\n  };\n\n  const handleNameClick = useCallback(\n    (id: string) => {\n      dispatch(selectPlatform(id));\n      analytics.event.platforms.platformNameClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleCheckboxClick = useCallback(\n    (id: string) => {\n      dispatch(togglePlatform(id));\n      analytics.event.platforms.platformCheckboxClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleSelectAll = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: platforms.map(({ id }) => id),\n      }),\n    );\n    analytics.event.platforms.selectAll();\n  };\n\n  const handleSelectNone = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: [],\n      }),\n    );\n    analytics.event.platforms.selectNone();\n  };\n\n  const renderPlatformsList = () => (\n    <PlatformsList isDisabled={isRolling}>\n      <Box component=\"span\" mb={1} style={{ marginLeft: 1 }}>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxIcon style={{ width: 24, height: 24 }} color=\"inherit\" />\n          }\n          onClick={handleSelectAll}\n        >\n          Select All\n        </Button>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxOutlineBlankIcon\n              style={{ width: 24, height: 24 }}\n              color=\"inherit\"\n            />\n          }\n          onClick={handleSelectNone}\n        >\n          Select None\n        </Button>\n      </Box>\n      <Scrollbar style={{ flexGrow: 1 }} native={windowSize.width < 1200}>\n        <List dense disablePadding>\n          {platforms.map(({ id, name, releaseDate, gamesCount }) => (\n            <Platform\n              key={id}\n              id={id}\n              name={name}\n              releaseDate={releaseDate}\n              gamesCount={gamesCount}\n              checked={selectedPlatformIds.includes(id)}\n              onNameClick={handleNameClick}\n              onCheckboxClick={handleCheckboxClick}\n            />\n          ))}\n        </List>\n      </Scrollbar>\n    </PlatformsList>\n  );\n\n  const renderCompactPlatformsList = () => (\n    <Scrollbar native={windowSize.width < 1200}>\n      <List>\n        {platforms\n          .filter(({ id }) => selectedPlatformIds.includes(id))\n          .map(({ id, name }) => (\n            <ListItem key={id} style={{ padding: 0, marginBottom: 8 }}>\n              {name}\n            </ListItem>\n          ))}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <PlatformsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Platforms</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Change'}\n        </Button>\n      </Box>\n\n      {isVisible ? renderPlatformsList() : renderCompactPlatformsList()}\n    </PlatformsRoot>\n  );\n};\n\nexport default Platforms;\n","import { Slider, withStyles } from '@material-ui/core';\nimport * as colors from '@material-ui/core/colors';\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: colors.grey[500],\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default PrettoSlider;\n","const secondsToSpinMarks = [...Array(6)].map((_, i) => ({\n  value: (i + 1) * 10,\n  label: (i + 1) * 10,\n}));\n\nconst speedMarks = [...Array(5)].map((_, i) => ({\n  value: i + 1,\n  label: i + 1,\n}));\n\nconst numberOfGamesMarks = [2, 4, 6, 8, 10, 12, 14, 16].map((n) => ({\n  value: n,\n  label: n,\n}));\n\nconst options = [\n  {\n    id: 'secondsToSpin',\n    title: 'Seconds to Spin',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 10,\n      max: 60,\n      marks: secondsToSpinMarks,\n    },\n  },\n  {\n    id: 'speed',\n    title: 'Speed',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 1,\n      max: 5,\n      marks: speedMarks,\n    },\n  },\n  {\n    id: 'numberOfGames',\n    title: 'Number of Games',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 2,\n      max: 16,\n      marks: numberOfGamesMarks,\n    },\n  },\n];\n\nexport default options;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport debounce from 'debounce';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box, Mark } from '@material-ui/core';\n\nimport analytics from 'utils/analytics';\nimport PrettoSlider from 'components/PrettoSlider';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n  numberOfGamesSelector,\n  updateOption,\n  OptionName,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/options.mock';\n\nconst OptionsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst OptionsList = styled.div<{ isDisabled: boolean }>`\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\ntype OptionSlider = {\n  type: 'slider';\n  step: number;\n  min: number;\n  max: number;\n  marks: Mark[];\n};\ntype Option = {\n  id: OptionName;\n  title: string;\n  component: OptionSlider; // and maybe something else in the future\n};\n\nconst Options = () => {\n  const dispatch = useDispatch();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const isRolling = useSelector(isRollingSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const speed = useSelector(speedSelector);\n  const numberOfGames = useSelector(numberOfGamesSelector);\n\n  const values: Record<string, number> = {\n    secondsToSpin,\n    speed,\n    numberOfGames,\n  };\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.options(!isVisible);\n  };\n\n  const handleOptionChange = (name: OptionName) =>\n    debounce((event: any, value: number | number[]) => {\n      dispatch(updateOption({ name, value }));\n      analytics.event.ui.changeOption(name, (value as unknown) as number);\n    }, 500);\n\n  const renderSlider = (\n    { step, min, max, marks }: OptionSlider,\n    value: number,\n    onChange: (event: any, value: number | number[]) => void,\n  ) => (\n    <PrettoSlider\n      defaultValue={value}\n      step={step}\n      min={min}\n      max={max}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      onChange={onChange}\n    />\n  );\n\n  const renderOption = ({ id, title, component }: Option) => (\n    <React.Fragment key={id}>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n      {renderSlider(component, values[id], handleOptionChange(id))}\n    </React.Fragment>\n  );\n\n  const renderOptions = () => (\n    <OptionsList isDisabled={isRolling}>\n      {(options as Option[]).map(renderOption)}\n    </OptionsList>\n  );\n\n  return (\n    <OptionsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Options</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Show'}\n        </Button>\n      </Box>\n\n      {isVisible && renderOptions()}\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nimport analytics from 'utils/analytics';\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\n\nconst GameLinksRoot = styled.div``;\nconst ServiceLink = styled(Button)<{ target?: string; rel?: string }>`\n  width: 100%;\n  text-transform: none !important;\n\n  .MuiButton-label {\n    justify-content: flex-start;\n  }\n`;\nconst Links = styled.div`\n  display: grid;\n  grid-gap: 16px 16px;\n`;\n\nconst getLinks = (name: string) => {\n  const searchQuery = encodeURI(name);\n\n  return [\n    {\n      id: 'youtube',\n      text: 'YouTube',\n      href: `//www.youtube.com/results?search_query=${searchQuery}`,\n      icon: <YouTubeIcon />,\n    },\n    {\n      id: 'gamefaqs',\n      text: 'GameFAQs',\n      href: `//gamefaqs.gamespot.com/search?game=${searchQuery}`,\n    },\n    {\n      id: 'metacritic',\n      text: 'Metacritic',\n      href: `//www.metacritic.com/search/all/${searchQuery}/results`,\n    },\n    {\n      id: 'hltb',\n      text: 'How Long To Beat',\n      href: `https://www.google.com/search?q=${searchQuery}%20site%3Ahowlongtobeat.com`,\n    },\n    {\n      id: 'gamerankings',\n      text: 'GameRankings',\n      href: `https://www.gamerankings.com/search.html?search=${searchQuery}&site=`,\n    },\n    {\n      id: 'emuparadise',\n      text: 'EmuParadise',\n      href: `//www.emuparadise.me/roms/search.php?query=${searchQuery}&section=all`,\n    },\n    {\n      id: 'coolrom',\n      text: 'CoolROM',\n      href: `//coolrom.com.au/search?q=${searchQuery}`,\n    },\n    {\n      id: 'romhustler',\n      text: 'RomHustler',\n      href: `//romhustler.org/roms/search/?q=${searchQuery}`,\n    },\n  ];\n};\n\nconst GameLinks = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  if (isRolling || !rolledGame) return null;\n\n  const links = getLinks(rolledGame.name);\n\n  return (\n    <GameLinksRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Links</Typography>\n      </Box>\n\n      <Links>\n        {links.map(({ id, text, href, icon }) => (\n          <ServiceLink\n            key={id}\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={icon || <SearchIcon />}\n            size=\"medium\"\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            onClick={() => analytics.event.searchLink(id)}\n          >\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n              Search on{' '}\n              <Typography variant=\"inherit\" color=\"textPrimary\">\n                {text}\n              </Typography>\n            </Typography>\n          </ServiceLink>\n        ))}\n      </Links>\n    </GameLinksRoot>\n  );\n};\n\nexport default GameLinks;\n","import { easeExpOut, easeExpInOut, easeCircleInOut } from 'd3-ease';\n\nconst f1 = easeExpOut;\nconst f2 = easeExpInOut;\nconst f3 = easeCircleInOut;\n\nconst breakpointX1 = 0.2;\nconst breakpointX2 = 0.4;\nconst breakpointY1 = 0.2;\n\nconst timingFunction = (n: number) => {\n  // f1: (x: [0, bx1)) => y: [0, 1);\n  if (n < breakpointX1) {\n    const x = n * (1 / breakpointX1);\n    return f1(x);\n  }\n\n  // f2: (x: [bx1, bx2)) => y: [1, by1);\n  if (n < breakpointX2) {\n    const x = (n - breakpointX1) * (1 / (breakpointX2 - breakpointX1));\n    const y = f2(1 - x) * (1 - breakpointY1) + breakpointY1;\n\n    return y;\n  }\n\n  // f3: (x: [bx2, 1)) => y: [by1, 0);\n  const x = (n - breakpointX2) * (1 / (1 - breakpointX2));\n  const y = f3(1 - x) * breakpointY1;\n\n  return y;\n};\n\nexport default timingFunction;\n","let canvas: HTMLCanvasElement | null = null;\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nconst getTextWidth = (text: string, font: string) => {\n  if (!canvas) canvas = document.createElement(\"canvas\");\n\n  const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  context.font = font;\n\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n};\n\nexport default getTextWidth;\n","import getTextWidth from 'features/circle/getTextWidth';\n\nconst sliceTextByMaxWidth = (text: string, font: string, maxWidth: number) => {\n  const width = getTextWidth(text, font);\n\n  if (width < maxWidth) return text;\n\n  let beginCursor = 0;\n  let endCursor = text.length;\n  let cursor = Math.floor(text.length / 2);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const textSlice = `${text.slice(0, cursor)}...`;\n\n    const w = getTextWidth(textSlice, font);\n\n    if (w > maxWidth) {\n      endCursor = cursor;\n    } else {\n      beginCursor = cursor;\n    }\n\n    // middle between the beginCursor and the endCursor\n    cursor = beginCursor + Math.floor((endCursor - beginCursor) / 2);\n\n    if (beginCursor === cursor) return textSlice;\n  }\n};\n\nexport default sliceTextByMaxWidth;\n","import { RolledGame } from 'features/rollGame/rollGameTypes';\n\nconst LINE_WIDTH = 4;\n\nconst meanAngleDeg = (angle1: number, angle2: number) => {\n  return Math.atan2(\n    (Math.sin(angle1) + Math.sin(angle2)) / 2,\n    (Math.cos(angle1) + Math.cos(angle2)) / 2,\n  );\n};\n\nconst getX = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.sin(angle);\n\nconst getY = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.cos(angle);\n\n/* eslint-disable no-param-reassign */\nconst drawCircle = (\n  segments: RolledGame[],\n  radius: number,\n  textFont: string,\n) => (context: CanvasRenderingContext2D, rotateAngle: number) => {\n  const size = radius * 2;\n  const coeff = (2 * Math.PI) / segments.length;\n  const textOffset = (20 / 200) * radius;\n\n  context.clearRect(0, 0, size, size);\n\n  context.translate(radius, radius);\n  context.rotate(rotateAngle);\n  context.translate(-radius, -radius);\n\n  context.arc(radius, radius, radius, 0, 2 * Math.PI);\n  context.fillStyle = '#121212';\n  context.fill();\n\n  segments.forEach((segment, i) => {\n    const from = i * coeff;\n    const to = (i + 1) * coeff;\n\n    context.beginPath();\n    context.arc(radius, radius, radius - LINE_WIDTH / 2, from, to);\n    context.lineTo(radius, radius);\n    context.strokeStyle = '#fff';\n    context.lineWidth = LINE_WIDTH;\n    context.stroke();\n\n    const meanAngle = meanAngleDeg(from, to);\n    const textAngleRotation = meanAngle + Math.PI;\n    const textAngle = -(meanAngle + 1.5 * Math.PI);\n    const textX = getX(radius, radius - textOffset, textAngle);\n    const textY = getY(radius, radius - textOffset, textAngle);\n\n    context.save();\n    context.translate(textX, textY);\n    context.rotate(textAngleRotation);\n    context.beginPath();\n    context.font = textFont;\n    context.fillStyle = '#fff';\n    context.fillText(segment.name, 0, 4);\n    context.restore();\n  });\n};\n/* eslint-disable no-param-reassign */\n\nexport default drawCircle;\n","import { useEffect, useRef, useCallback } from 'react';\n\nconst initializeIsActive = (count: number) =>\n  Array.from({ length: count }, () => false);\n\nconst useSoundsList = (elems: HTMLAudioElement[]) => {\n  const soundsRef = useRef(elems);\n  const isActiveRef = useRef<boolean[]>();\n\n  if (!isActiveRef.current) {\n    isActiveRef.current = initializeIsActive(elems.length);\n  }\n\n  const sounds = soundsRef.current;\n  const isActive = isActiveRef.current;\n\n  useEffect(() => {\n    const clearFunctions = sounds.map((audio, index) => {\n      const handleEnded = () => {\n        isActive[index] = false;\n      };\n\n      audio.addEventListener('ended', handleEnded);\n\n      return () => audio.removeEventListener('ended', handleEnded);\n    });\n\n    return () => clearFunctions.forEach((func) => func());\n  }, [sounds, isActive]);\n\n  const play = useCallback(() => {\n    for (let i = 0; i < sounds.length; i += 1) {\n      if (!isActive[i]) {\n        sounds[i].play();\n        isActive[i] = true;\n\n        return;\n      }\n    }\n  }, [sounds, isActive]);\n\n  return play;\n};\n\nexport default useSoundsList;\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport timingFunction from 'utils/timingFunction';\nimport { GLOBAL_FONT } from 'utils/constants';\nimport sliceTextByMaxWidth from 'features/circle/sliceTextByMaxWidth';\nimport drawCircle from 'features/circle/drawCircle';\nimport {\n  isRollingSelector,\n  rolledGamesSelector,\n} from 'features/rollGame/rollGameSlice';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n} from 'features/options/optionsSlice';\nimport useSoundsList from 'features/circle/useSoundsList';\n\nconst wheelSoundTicks = [\n  document.getElementById('wheel-sound-tick-1'),\n  document.getElementById('wheel-sound-tick-2'),\n  document.getElementById('wheel-sound-tick-3'),\n] as HTMLAudioElement[];\n\nconst wheelSoundComplete = document.getElementById(\n  'wheel-sound-complete',\n) as HTMLAudioElement;\n\nconst getGameIndexByAngle = (angle: number, segmentAngle: number) => {\n  const normalizedAngle =\n    Math.abs((angle % (Math.PI * 2)) - Math.PI * 2) + Math.PI;\n\n  return Math.floor((normalizedAngle % (Math.PI * 2)) / segmentAngle);\n};\n\nconst normalizeSegments = (\n  segments: RolledGame[],\n  textFont: string,\n  maxTextWidth: number,\n): RolledGame[] =>\n  segments.map(({ name, ...rest }) => ({\n    name: sliceTextByMaxWidth(name, textFont, maxTextWidth),\n    ...rest,\n  }));\n\nconst getSegmentAngle = (segmentsCount: number) =>\n  (2 * Math.PI) / segmentsCount;\n\ntype Options = {\n  radius: number;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  onRollComplete: (id: number) => void;\n};\n\ntype State = {\n  // requestAnimationFrame id\n  requestId: number | null;\n  // previous time in the animate function\n  prevTime: number | null;\n  // time from the start of the animation\n  fullTime: number;\n  // full canvas rotation angle\n  fullAngle: number;\n  currentIndex: number;\n  scale: number;\n};\n\nconst initialState = {\n  requestId: null,\n  prevTime: null,\n  fullTime: 0,\n  fullAngle: 0,\n  currentIndex: 0,\n  scale: -1,\n};\n\n// NOTE: in \"variableI\" letter \"I\" means UnitInterval - [0, 1)\n\nconst useDrawCircle = ({ radius, canvasRef, onRollComplete }: Options) => {\n  const stateRef = useRef<State>(initialState);\n\n  const isRolling = useSelector(isRollingSelector);\n  const speed = useSelector(speedSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const rolledGames = useSelector(rolledGamesSelector);\n\n  const playTick = useSoundsList(wheelSoundTicks);\n\n  const textFont = `${(12 / 200) * radius}px ${GLOBAL_FONT}`;\n  const textMaxWidth = (135 / 200) * radius;\n\n  const segments = normalizeSegments(rolledGames, textFont, textMaxWidth);\n  const drawFunc = useMemo(() => drawCircle(segments, radius, textFont), [\n    segments,\n    radius,\n    textFont,\n  ]);\n\n  const [segmentAngle, setSegmentAngle] = useState(() =>\n    getSegmentAngle(segments.length),\n  );\n\n  useEffect(() => setSegmentAngle(getSegmentAngle(segments.length)), [\n    segments.length,\n  ]);\n\n  // TODO: fix circle blinking on resize\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (!canvasRef.current) return;\n\n      const dpr = window.devicePixelRatio || 1;\n\n      const rect = canvasRef.current.getBoundingClientRect();\n      const context = canvasRef.current.getContext('2d');\n\n      if (!context) return;\n\n      // if animation not playing update scale and redraw\n      if (!stateRef.current.requestId) {\n        // eslint-disable-next-line no-param-reassign\n        canvasRef.current.width = rect.width * dpr;\n        // eslint-disable-next-line no-param-reassign\n        canvasRef.current.height = rect.height * dpr;\n        context.scale(dpr, dpr);\n\n        drawFunc(context, 0);\n      }\n\n      stateRef.current.scale = dpr;\n    };\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [canvasRef, stateRef, drawFunc]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const context = canvasRef.current.getContext('2d');\n    const state = stateRef.current;\n\n    if (!context) return;\n\n    // first initial draw\n    drawFunc(context, 0);\n\n    const stop = () => {\n      if (!state.requestId) return;\n\n      window.cancelAnimationFrame(state.requestId);\n\n      state.fullAngle = 0;\n      state.currentIndex = 0;\n      state.prevTime = null;\n      state.fullTime = 0;\n    };\n\n    const animate = (time: number) => {\n      if (state.prevTime === null) {\n        state.prevTime = time;\n      }\n\n      const deltaTime = time - state.prevTime;\n      state.prevTime = time;\n\n      state.fullTime += deltaTime;\n\n      if (state.fullTime > secondsToSpin * 1000) {\n        onRollComplete(state.currentIndex);\n        wheelSoundComplete.play();\n        stop();\n\n        return;\n      }\n\n      const currentIndex = getGameIndexByAngle(state.fullAngle, segmentAngle);\n\n      if (state.currentIndex !== currentIndex) {\n        playTick();\n        state.currentIndex = currentIndex;\n      }\n\n      const timeI = state.fullTime / (secondsToSpin * 1000);\n      const speedI = timingFunction(timeI);\n      const angle = ((2 * Math.PI) / 360) * speedI * speed;\n\n      drawFunc(context, angle);\n\n      state.fullAngle += angle;\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      const { scale } = stateRef.current;\n\n      state.currentIndex = getGameIndexByAngle(state.fullAngle, segmentAngle);\n\n      context.resetTransform();\n      context.scale(scale, scale);\n\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    if (isRolling) {\n      start();\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => stop();\n  }, [\n    canvasRef,\n    stateRef,\n    drawFunc,\n    secondsToSpin,\n    isRolling,\n    speed,\n    segmentAngle,\n    playTick,\n    onRollComplete,\n  ]);\n};\n\nexport default useDrawCircle;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#121212\",\n  stroke: \"#fff\",\n  strokeWidth: 4,\n  d: \"M2 3v26l26-13z\"\n});\n\nconst SvgArrowRight = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgArrowRight, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/arrow-right.94c9ce06.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWindowSize } from 'react-use';\nimport * as colors from '@material-ui/core/colors';\n\nimport analytics from 'utils/analytics';\nimport {\n  rollGameComplete,\n  rollGameStart,\n  updateRolledGames,\n  isRollingSelector,\n} from 'features/rollGame/rollGameSlice';\nimport useDrawCircle from 'features/circle/useDrawCircle';\nimport { selectedPlatformIdsSelector } from 'features/options/optionsSlice';\n\nimport { ReactComponent as ArrowRightSvg } from 'icons/arrow-right.svg';\n\ntype CircleCanvasRootProps = {\n  width: number;\n  height: number;\n};\nconst CircleCanvasRoot = styled.div<CircleCanvasRootProps>`\n  position: relative;\n  align-self: center;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\nconst Canvas = styled.canvas`\n  display: block;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\nconst RollButton = styled.button<{ radius: number }>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0;\n  padding: 0;\n  width: ${(p) => (60 / 200) * p.radius}px;\n  height: ${(p) => (60 / 200) * p.radius}px;\n  color: #fff;\n  background-color: ${colors.grey[800]};\n  border: 4px solid #fff;\n  border-radius: 50%;\n  font-size: ${(p) => (14 / 200) * p.radius}px;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  transform: translate(-50%, -50%);\n  transition-property: color;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  &[disabled] {\n    color: ${colors.grey[800]};\n    pointer-events: none;\n  }\n`;\nconst ArrowRightIcon = styled(ArrowRightSvg)`\n  position: absolute;\n  top: 50%;\n  left: 1px;\n  width: 32px;\n  height: 32px;\n  transform: translateY(-50%);\n`;\n\nconst CircleCanvas = () => {\n  const dispatch = useDispatch();\n  const [radius, setRadius] = useState(300);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n  const windowSize = useWindowSize();\n\n  const size = radius * 2;\n\n  const isRollButtonDisabled = isRolling || !selectedPlatformIds.length;\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (windowSize.width < 450) {\n        setRadius(140);\n      } else if (windowSize.width < 1840) {\n        setRadius(200);\n      } else {\n        setRadius(300);\n      }\n    };\n\n    handleResize();\n  }, [setRadius, windowSize.width]);\n\n  const handleRollStart = () => {\n    dispatch(updateRolledGames());\n    dispatch(rollGameStart());\n    analytics.event.rollGame.start();\n  };\n\n  const handleRollComplete = (id: number) => {\n    dispatch(rollGameComplete(id));\n    analytics.event.rollGame.complete();\n  };\n\n  useDrawCircle({\n    canvasRef,\n    radius,\n    onRollComplete: handleRollComplete,\n  });\n\n  return (\n    <CircleCanvasRoot width={size} height={size}>\n      <Canvas width={size} height={size} ref={canvasRef} />\n      <RollButton\n        disabled={isRollButtonDisabled}\n        radius={radius}\n        onClick={handleRollStart}\n      >\n        Roll\n      </RollButton>\n      <ArrowRightIcon />\n    </CircleCanvasRoot>\n  );\n};\n\nexport default CircleCanvas;\n","const replaceSpacesWithNbsp = (text: string) => text.replace(/ /g, '&nbsp;');\n\nexport default replaceSpacesWithNbsp;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport { Typography } from '@material-ui/core';\n\nimport replaceSpacesWithNbsp from 'utils/replaceSpacesWithNbsp';\nimport { selectedPlatformIdsSelector } from 'features/options/optionsSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst SelectedPlatformsMessage = () => {\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  if (!selectedPlatformIds.length) {\n    return (\n      <Typography variant=\"h6\">Please choose one or more platfotms</Typography>\n    );\n  }\n\n  if (selectedPlatformIds.length === platforms.length) {\n    return (\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Selected&nbsp;platforms:{' '}\n        <Typography variant=\"inherit\" color=\"textPrimary\">\n          All\n        </Typography>\n      </Typography>\n    );\n  }\n\n  const selectedPlatforms = selectedPlatformIds\n    .slice(0, 3)\n    .map((id) => platforms.find(R.propEq('id', id)));\n\n  if (selectedPlatformIds.length === 1) {\n    return (\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Selected&nbsp;platform:{' '}\n        <Typography\n          variant=\"inherit\"\n          color=\"textPrimary\"\n          dangerouslySetInnerHTML={{\n            __html: replaceSpacesWithNbsp(selectedPlatforms[0]?.name || ''),\n          }}\n        />\n      </Typography>\n    );\n  }\n\n  return (\n    <Typography variant=\"h6\" color=\"textSecondary\">\n      Selected&nbsp;platforms:{' '}\n      {selectedPlatforms.map((platform, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <React.Fragment key={index}>\n          <Typography\n            variant=\"inherit\"\n            color=\"textPrimary\"\n            key={platform?.id}\n            dangerouslySetInnerHTML={{\n              __html: replaceSpacesWithNbsp(platform?.name || ''),\n            }}\n          />\n          {selectedPlatforms.length - 1 !== index && ', '}\n        </React.Fragment>\n      ))}\n      {selectedPlatformIds.length > 3 && (\n        <>\n          {' and'}&nbsp;\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {selectedPlatformIds.length - 3}\n          </Typography>\n          &nbsp;more\n        </>\n      )}\n    </Typography>\n  );\n};\n\nexport default SelectedPlatformsMessage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { Typography } from '@material-ui/core';\n\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\nimport SelectedPlatformsMessage from 'features/rollGame/SelectedPlatformsMessage';\n\nconst ResultRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n  text-align: center;\n`;\n\nconst Result = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  const renderRolledGame = () => {\n    if (!rolledGame) return null;\n\n    const { name, platform } = rolledGame;\n\n    return (\n      <>\n        <Typography\n          variant=\"h4\"\n          style={{ marginBottom: 8, textAlign: 'center' }}\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Platform:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {platform}\n          </Typography>\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <ResultRoot>\n      {isRolling || !rolledGame ? (\n        <SelectedPlatformsMessage />\n      ) : (\n        renderRolledGame()\n      )}\n    </ResultRoot>\n  );\n};\n\nexport default Result;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\nimport CircleCanvas from 'features/circle/CircleCanvas';\nimport Result from 'features/rollGame/Result';\nimport { updateRolledGames } from 'features/rollGame/rollGameSlice';\n\nconst RollGameRoot = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst RollGame = ({ className }: Props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateRolledGames());\n  }, [dispatch]);\n\n  return (\n    <RollGameRoot className={className}>\n      <CircleCanvas />\n      <Result />\n    </RollGameRoot>\n  );\n};\n\nexport default RollGame;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport GlobalStyles from 'styles';\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport Footer from 'components/Footer';\nimport Platforms from 'features/platforms/Platforms';\nimport Options from 'features/options/Options';\nimport GameLinks from 'features/rollGame/GameLinks';\nimport RollGame from 'features/rollGame/RollGame';\n\nconst theme = createMuiTheme({ palette: { type: 'dark' } });\n\nconst AppRoot = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-columns: 16px auto 16px;\n  grid-template-rows: 48px 24px auto 24px auto 24px auto 24px 200px;\n  grid-template-areas:\n    'header header     header'\n    '.      .          .     '\n    '.      roll-game  .     '\n    '.      .          .     '\n    '.      side-right .     '\n    '.      .          .     '\n    '.      side-left  .     '\n    '.      .          .     '\n    'footer footer     footer';\n\n  @media (min-width: 720px) {\n    grid-template-rows: 48px 24px auto 24px auto 24px 48px;\n    grid-template-columns: 32px 1fr 24px 1fr 32px;\n    grid-template-areas:\n      'header header     header    header     header'\n      '.      .          .         .          .     '\n      '.      roll-game  roll-game roll-game  .     '\n      '.      .          .         .          .     '\n      '.      side-left  .         side-right .     '\n      '.      .          .         .          .     '\n      'footer footer     footer    footer     footer';\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: auto 340px 40px 400px 40px 340px auto;\n    grid-template-rows: 48px 40px auto 40px 48px;\n    grid-template-areas:\n      'header header    header header    header header     header'\n      '.      .         .      .         .      .          .     '\n      '.      side-left .      roll-game .      side-right .     '\n      '.      .         .      .         .      .          .     '\n      'footer footer    footer footer    footer footer     footer';\n  }\n\n  @media (min-width: 1840px) {\n    grid-template-columns: auto 360px 40px 840px 40px 360px auto;\n    grid-template-rows: 64px 40px auto 40px 64px;\n  }\n`;\nconst StyledHeader = styled(Header)`\n  grid-area: header;\n`;\nconst StyledSidebarLeft = styled(Sidebar)`\n  grid-area: side-left;\n`;\nconst StyledSidebarRight = styled(Sidebar)`\n  grid-area: side-right;\n`;\nconst StyledRollGame = styled(RollGame)`\n  grid-area: roll-game;\n`;\nconst StyledFooter = styled(Footer)`\n  grid-area: footer;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppRoot>\n        <StyledHeader />\n        <StyledSidebarLeft>\n          <Platforms />\n        </StyledSidebarLeft>\n        <StyledSidebarRight>\n          <Options />\n          <GameLinks />\n        </StyledSidebarRight>\n        <StyledRollGame />\n        <StyledFooter />\n      </AppRoot>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport rollGame from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  rollGame,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport analytics from 'utils/analytics';\nimport App from 'app/App';\nimport store from 'app/store';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  analytics.initialize();\n\n  const page =\n    window.location.pathname + window.location.search + window.location.hash;\n\n  analytics.pageview(page);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}