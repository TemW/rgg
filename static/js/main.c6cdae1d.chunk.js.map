{"version":3,"sources":["utils/analytics.ts","utils/constants.ts","styles/common.ts","styles/index.ts","components/Header.tsx","components/Sidebar.tsx","features/rollGame/rollGameUtils.ts","components/Footer.tsx","utils/buildDate.ts","features/platforms/Platform.tsx","features/options/optionsUtils.ts","features/options/optionsSlice.ts","features/rollGame/rollGameSlice.ts","features/platforms/Platforms.tsx","components/PrettoSlider.tsx","features/options/options.mock.ts","features/options/Options.tsx","features/rollGame/GameLinks.tsx","utils/timingFunction.ts","features/circle/getTextWidth.ts","features/circle/sliceTextByMaxWidth.ts","features/circle/drawCircle.ts","features/circle/useSoundsList.ts","features/circle/useDrawCircle.ts","icons/arrow-right.svg","features/circle/CircleCanvas.tsx","utils/replaceSpacesWithNbsp.ts","features/rollGame/SelectedPlatformsMessage.tsx","features/rollGame/Result.tsx","features/rollGame/RollGame.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CATEGORIES","sendEvent","eventArgs","ReactGA","event","initialize","page","pageview","rollGame","start","category","action","complete","searchLink","serviceId","label","platforms","selectAll","selectNone","platformNameClick","platformId","platformCheckboxClick","ui","isVisible","options","changeOption","name","value","link","url","GLOBAL_FONT","css","colors","createGlobalStyle","common","HeaderRoot","styled","header","Header","className","Typography","variant","LinksRoot","aside","shuffleArray","arr","map","a","Math","random","sort","b","gamesCount","R","games","FooterRoot","footer","FooterInner","FooterLink","Link","attrs","rel","target","color","buildDateString","format","Date","React","memo","href","onClick","analytics","id","checked","onNameClick","onCheckboxClick","ListItem","key","button","selected","style","padding","alignItems","Checkbox","edge","onChange","ListItemText","primary","primaryTypographyProps","fontWeight","margin","display","secondary","secondaryTypographyProps","marginLeft","writeOptionsToLocalStorage","localStorage","setItem","JSON","stringify","initialState","selectedPlatformIds","secondsToSpin","speed","numberOfGames","getItem","parse","e","readOptionsFromLocalStorage","createSlice","reducers","updateOption","state","payload","selectPlatform","togglePlatform","index","indexOf","splice","push","actions","secondsToSpinSelector","speedSelector","numberOfGamesSelector","selectedPlatformIdsSelector","isRolling","gameIndex","rolledGames","updateRolledGamesThunk","rollGameStart","rollGameComplete","isRollingSelector","rolledGamesSelector","rolledGameSelector","updateRolledGames","dispatch","getState","count","gamesBySelectedPlatforms","length","items","rest","platform","find","getRandomGames","PlatformsRoot","div","PlatformsList","p","isDisabled","Platforms","useDispatch","useState","setIsVisible","useSelector","windowSize","useWindowSize","handleNameClick","useCallback","handleCheckboxClick","handleSelectAll","handleSelectNone","Box","justifyContent","mb","Button","size","component","startIcon","width","height","flexGrow","native","List","dense","disablePadding","releaseDate","includes","filter","marginBottom","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","title","type","step","min","max","marks","Array","_","i","n","OptionsRoot","OptionsList","Options","values","renderOption","Fragment","gutterBottom","defaultValue","valueLabelDisplay","renderSlider","debounce","GameLinksRoot","ServiceLink","Links","GameLinks","rolledGame","links","searchQuery","encodeURI","text","icon","getLinks","f1","easeExpOut","f2","easeExpInOut","f3","easeCircleInOut","timingFunction","canvas","getTextWidth","font","document","createElement","context","getContext","measureText","sliceTextByMaxWidth","maxWidth","beginCursor","endCursor","cursor","floor","textSlice","slice","drawCircle","segments","radius","textFont","rotateAngle","coeff","PI","textOffset","clearRect","translate","rotate","arc","fillStyle","fill","forEach","segment","from","to","beginPath","LINE_WIDTH","lineTo","strokeStyle","lineWidth","stroke","angle1","angle2","meanAngle","atan2","sin","cos","textAngleRotation","textAngle","textX","offset","angle","getX","textY","getY","save","fillText","restore","useSoundsList","elems","soundsRef","useRef","isActiveRef","current","sounds","isActive","useEffect","clearFunctions","audio","handleEnded","addEventListener","removeEventListener","func","play","wheelSoundTicks","getElementById","wheelSoundComplete","getGameIndexByAngle","segmentAngle","normalizedAngle","abs","getSegmentAngle","segmentsCount","requestId","prevTime","fullTime","fullAngle","currentIndex","scale","useDrawCircle","canvasRef","onRollComplete","stateRef","playTick","maxTextWidth","normalizeSegments","drawFunc","useMemo","setSegmentAngle","handleResize","dpr","window","devicePixelRatio","rect","getBoundingClientRect","stop","cancelAnimationFrame","animate","time","deltaTime","timeI","speedI","requestAnimationFrame","resetTransform","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","strokeWidth","d","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","CircleCanvasRoot","Canvas","RollButton","ArrowRightIcon","ArrowRightSvg","CircleCanvas","setRadius","isRollButtonDisabled","disabled","replaceSpacesWithNbsp","replace","SelectedPlatformsMessage","selectedPlatforms","dangerouslySetInnerHTML","__html","ResultRoot","Result","textAlign","renderRolledGame","RollGameRoot","main","RollGame","theme","createMuiTheme","palette","AppRoot","StyledHeader","StyledSidebarLeft","Sidebar","StyledSidebarRight","StyledRollGame","StyledFooter","Footer","App","ThemeProvider","rootReducer","combineReducers","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","pathname","search","hash","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c6cdae1d.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\nconst CATEGORIES = {\n  rollGame: 'Roll Game',\n  searchLinks: 'Search Links',\n  platforms: 'Platforms',\n  userInterface: 'User Interface',\n};\n\nconst initialize = () => ReactGA.initialize('UA-139550930-4');\n\nconst pageview = (page: string) => ReactGA.pageview(page);\n\nconst sendEvent = (eventArgs: ReactGA.EventArgs) => {\n  if (process.env.NODE_ENV !== 'production') {\n    console.log(eventArgs);\n  } else {\n    ReactGA.event(eventArgs);\n  }\n};\n\nconst event = {\n  rollGame: {\n    start: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Start',\n      }),\n    complete: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Complete',\n      }),\n  },\n\n  // search links\n  searchLink: (serviceId: string) =>\n    sendEvent({\n      category: CATEGORIES.searchLinks,\n      action: 'Search Link Click',\n      label: serviceId,\n    }),\n\n  // platforms\n  platforms: {\n    selectAll: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select All Click',\n      }),\n    selectNone: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select None Click',\n      }),\n    platformNameClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Name Click',\n        label: platformId,\n      }),\n    platformCheckboxClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Checkbox Click',\n        label: platformId,\n      }),\n  },\n\n  // user interface\n  ui: {\n    platforms: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Platforms',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    options: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Options',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    changeOption: (name: string, value: number) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Change Option',\n        label: name,\n        value,\n      }),\n    link: (url: string) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Link',\n        label: url,\n      }),\n  },\n};\n\nexport default {\n  initialize,\n  pageview,\n  event,\n};\n","export const GLOBAL_FONT = \"Roboto, Helvetica, Arial, sans-serif\";\n\nexport const LS_OPTIONS = \"rggOptions\";\n","import { css } from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\n\nimport { GLOBAL_FONT } from 'utils/constants';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${GLOBAL_FONT};\n    margin: 0;\n    background-color: ${colors.grey[900]};\n    color: #fff;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\n\nexport default createGlobalStyle`\n  ${common}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\nimport { Typography } from '@material-ui/core';\n\nconst HeaderRoot = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${colors.grey[800]};\n  color: #fff;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst Header = ({ className }: Props) => {\n  return (\n    <HeaderRoot className={className}>\n      <Typography variant=\"h4\">Retro Game Gauntlet</Typography>\n    </HeaderRoot>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst LinksRoot = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  & > :not(:last-child) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport default LinksRoot;\n","import * as R from 'ramda';\n\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\nimport games from 'data/games.json';\nimport platforms from 'data/platforms.json';\n\nconst shuffleArray = (arr: any[]) =>\n  arr\n    .map((a) => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map((a) => a[1]);\n\nexport const getRandomGames = (\n  selectedPlatformIds: string[],\n  count: number,\n): RolledGame[] => {\n  const gamesBySelectedPlatforms = selectedPlatformIds.length\n    ? R.pick(selectedPlatformIds, games)\n    : games;\n\n  const rolledGames = R.pipe<any, any, any, any, any, any>(\n    R.toPairs,\n    R.map<any, any>(([platformId, items]) =>\n      R.map((name) => ({ platformId, name }), items),\n    ),\n    R.flatten,\n    shuffleArray,\n    R.slice(0, count),\n  )(gamesBySelectedPlatforms);\n\n  return rolledGames.map(({ platformId, ...rest }: any) => {\n    const platform = platforms.find(R.propEq('id', platformId));\n\n    return {\n      platform: platform?.name || '',\n      ...rest,\n    };\n  });\n};\n\nexport const gamesCount = R.pipe<any, any, any, any>(\n  R.values,\n  R.flatten,\n  R.propOr(0, 'length'),\n)(games) as number;\n\n// longest game names\n// console.log(\n//   R.pipe<any, any, any, any, any>(\n//     R.values,\n//     R.flatten,\n//     R.sortWith([R.descend(R.prop(\"length\"))]),\n//     R.slice(0, 10)\n//   )(games)\n// );\n","import React from 'react';\nimport styled from 'styled-components';\nimport * as colors from '@material-ui/core/colors';\nimport { Typography, Link } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nimport analytics from 'utils/analytics';\nimport buildDate from 'utils/buildDate';\nimport { gamesCount } from 'features/rollGame/rollGameUtils';\n\nconst FooterRoot = styled.footer`\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid ${colors.grey[800]};\n  border-bottom: 1px solid ${colors.grey[800]};\n`;\nconst FooterInner = styled(Typography)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  flex-grow: 1;\n  max-width: 1280px;\n  height: 100%;\n  font-size: 0.8rem !important;\n  opacity: 0.6;\n\n  @media (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\nconst FooterLink = styled(Link).attrs({\n  rel: 'noreferrer noopener',\n  target: '_blank',\n  color: 'inherit',\n})``;\n\ntype Props = {\n  className?: string;\n};\n\n// TODO: add FAQ\n\nconst gamesListSourceUrl = '//nukecritic.com/rgg/';\nconst authorUrl = '//github.com/DmitryScaletta';\nconst reportBugUrl = '//github.com/honeykingdom/rgg/issues';\n\nconst buildDateString = format(new Date(buildDate), 'P p');\n\nconst Footer = ({ className }: Props) => {\n  return (\n    <FooterRoot className={className}>\n      <FooterInner>\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Games in database:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {gamesCount}\n          </Typography>\n          <br />\n          Games list from:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={gamesListSourceUrl}\n              onClick={() => analytics.event.ui.link(gamesListSourceUrl)}\n            >\n              nukecritic.com/rgg/\n            </FooterLink>\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Author:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={authorUrl}\n              onClick={() => analytics.event.ui.link(authorUrl)}\n            >\n              DmitryScaletta\n            </FooterLink>\n          </Typography>\n          <br />\n          Last update:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {buildDateString}\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={reportBugUrl}\n              onClick={() => analytics.event.ui.link(reportBugUrl)}\n            >\n              Report a bug\n            </FooterLink>\n          </Typography>\n        </Typography>\n      </FooterInner>\n    </FooterRoot>\n  );\n};\n\nexport default React.memo(Footer);\n","import preval from \"preval.macro\";\n\nconst buildDate = preval`module.exports = Date.now()` as number;\n\nexport default buildDate;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as colors from '@material-ui/core/colors';\n\ntype Props = {\n  id: string;\n  name: string;\n  releaseDate: string;\n  gamesCount: number;\n  checked: boolean;\n  onNameClick: (id: string) => void;\n  onCheckboxClick: (id: string) => void;\n};\n\nconst Platform = ({\n  id,\n  name,\n  gamesCount,\n  checked,\n  onNameClick,\n  onCheckboxClick,\n}: Props) => (\n  <ListItem\n    key={id}\n    button\n    selected={checked}\n    style={{ padding: '0 12px', alignItems: 'stretch' }}\n  >\n    <Checkbox\n      edge=\"start\"\n      color=\"default\"\n      checked={checked}\n      style={{ padding: 4 }}\n      onChange={() => onCheckboxClick(id)}\n    />\n    <ListItemText\n      id={id}\n      primary={name}\n      primaryTypographyProps={{ style: { fontWeight: 'bold' } }}\n      style={{ margin: 0, display: 'flex', alignItems: 'center' }}\n      secondary={`(${gamesCount} games)`}\n      secondaryTypographyProps={{\n        style: { display: 'inline', marginLeft: 4, color: colors.grey[500] },\n      }}\n      onClick={() => onNameClick(id)}\n    />\n  </ListItem>\n);\n\nexport default React.memo(Platform);\n","import { LS_OPTIONS } from 'utils/constants';\n\nexport const writeOptionsToLocalStorage = (options: object) => {\n  localStorage.setItem(LS_OPTIONS, JSON.stringify(options));\n};\n\nexport const readOptionsFromLocalStorage = () => {\n  const options = localStorage.getItem(LS_OPTIONS);\n\n  try {\n    return JSON.parse(options || '{}');\n  } catch (e) {\n    return {};\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport {\n  writeOptionsToLocalStorage,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\n\ntype OptionsState = {\n  selectedPlatformIds: string[];\n  secondsToSpin: number;\n  speed: number;\n  numberOfGames: number;\n};\n\nexport type OptionName =\n  | 'secondsToSpin'\n  | 'speed'\n  | 'numberOfGames'\n  | 'selectedPlatformIds';\ntype UpdateOptionAction = {\n  name: OptionName;\n  value: any;\n};\n\nconst initialState: OptionsState = {\n  selectedPlatformIds: ['playstation', 'playstation-2'],\n  secondsToSpin: 30,\n  speed: 3,\n  numberOfGames: 16,\n  ...readOptionsFromLocalStorage(),\n};\n\n// TODO: remove side effect from reducers\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    updateOption: (state, { payload }: PayloadAction<UpdateOptionAction>) => {\n      const { name, value } = payload;\n      state[name] = value;\n\n      writeOptionsToLocalStorage(state);\n    },\n    selectPlatform: (state, { payload }: PayloadAction<string>) => {\n      state.selectedPlatformIds = [payload];\n\n      writeOptionsToLocalStorage(state);\n    },\n    togglePlatform: (state, { payload }: PayloadAction<string>) => {\n      const index = state.selectedPlatformIds.indexOf(payload);\n\n      if (index > -1) {\n        state.selectedPlatformIds.splice(index, 1);\n      } else {\n        state.selectedPlatformIds.push(payload);\n      }\n\n      writeOptionsToLocalStorage(state);\n    },\n  },\n});\n\nexport const { updateOption, selectPlatform, togglePlatform } = options.actions;\n\nexport default options.reducer;\n\n// selectors\nexport const secondsToSpinSelector = (state: RootState) =>\n  state.options.secondsToSpin;\n\nexport const speedSelector = (state: RootState) => state.options.speed;\n\nexport const numberOfGamesSelector = (state: RootState) =>\n  state.options.numberOfGames;\n\nexport const selectedPlatformIdsSelector = (state: RootState) =>\n  state.options.selectedPlatformIds;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport { AppDispatch } from 'app/store';\nimport {\n  numberOfGamesSelector,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { getRandomGames } from 'features/rollGame/rollGameUtils';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\ninterface RollGameState {\n  isRolling: boolean;\n  gameIndex: number | null;\n  rolledGames: RolledGame[];\n}\n\nconst initialState: RollGameState = {\n  isRolling: false,\n  gameIndex: null,\n  rolledGames: [],\n};\n\nconst rollGame = createSlice({\n  name: 'rollGame',\n  initialState,\n  reducers: {\n    updateRolledGamesThunk: (\n      state,\n      { payload }: PayloadAction<RolledGame[]>,\n    ) => {\n      state.rolledGames = payload;\n    },\n    rollGameStart: (state) => {\n      state.isRolling = true;\n      state.gameIndex = null;\n    },\n    rollGameComplete: (state, { payload }: PayloadAction<number>) => {\n      state.isRolling = false;\n      state.gameIndex = payload;\n    },\n  },\n});\n\nexport const { rollGameStart, rollGameComplete } = rollGame.actions;\n\nconst { updateRolledGamesThunk } = rollGame.actions;\n\nexport default rollGame.reducer;\n\n// selectors\nexport const isRollingSelector = (state: RootState) => state.rollGame.isRolling;\n\nexport const rolledGamesSelector = (state: RootState) =>\n  state.rollGame.rolledGames;\n\nexport const rolledGameIndexSelector = (state: RootState) =>\n  state.rollGame.gameIndex;\n\nexport const rolledGameSelector = (state: RootState) => {\n  if (state.rollGame.gameIndex === null) return null;\n\n  return state.rollGame.rolledGames[state.rollGame.gameIndex];\n};\n\n// actions\nexport const updateRolledGames = () => (\n  dispatch: AppDispatch,\n  getState: () => RootState,\n) => {\n  const state = getState();\n\n  const numberOfGames = numberOfGamesSelector(state);\n  const selectedPlatformIds = selectedPlatformIdsSelector(state);\n\n  const rolledGames = getRandomGames(selectedPlatformIds, numberOfGames);\n\n  dispatch(updateRolledGamesThunk(rolledGames));\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Scrollbar from 'react-scrollbars-custom';\nimport { useWindowSize } from 'react-use';\nimport { Typography, List, Button, Box, ListItem } from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n\nimport analytics from 'utils/analytics';\nimport Platform from 'features/platforms/Platform';\nimport {\n  selectPlatform,\n  togglePlatform,\n  updateOption,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst PlatformsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\nconst PlatformsList = styled.div<{ isDisabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\nconst Platforms = () => {\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(true);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  const windowSize = useWindowSize();\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.platforms(!isVisible);\n  };\n\n  const handleNameClick = useCallback(\n    (id: string) => {\n      dispatch(selectPlatform(id));\n      analytics.event.platforms.platformNameClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleCheckboxClick = useCallback(\n    (id: string) => {\n      dispatch(togglePlatform(id));\n      analytics.event.platforms.platformCheckboxClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleSelectAll = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: platforms.map(({ id }) => id),\n      }),\n    );\n    analytics.event.platforms.selectAll();\n  };\n\n  const handleSelectNone = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: [],\n      }),\n    );\n    analytics.event.platforms.selectNone();\n  };\n\n  const renderPlatformsList = () => (\n    <PlatformsList isDisabled={isRolling}>\n      <Box component=\"span\" mb={1} style={{ marginLeft: 1 }}>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxIcon style={{ width: 24, height: 24 }} color=\"inherit\" />\n          }\n          onClick={handleSelectAll}\n        >\n          Select All\n        </Button>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxOutlineBlankIcon\n              style={{ width: 24, height: 24 }}\n              color=\"inherit\"\n            />\n          }\n          onClick={handleSelectNone}\n        >\n          Select None\n        </Button>\n      </Box>\n      <Scrollbar style={{ flexGrow: 1 }} native={windowSize.width < 1200}>\n        <List dense disablePadding>\n          {platforms.map(({ id, name, releaseDate, gamesCount }) => (\n            <Platform\n              key={id}\n              id={id}\n              name={name}\n              releaseDate={releaseDate}\n              gamesCount={gamesCount}\n              checked={selectedPlatformIds.includes(id)}\n              onNameClick={handleNameClick}\n              onCheckboxClick={handleCheckboxClick}\n            />\n          ))}\n        </List>\n      </Scrollbar>\n    </PlatformsList>\n  );\n\n  const renderCompactPlatformsList = () => (\n    <Scrollbar native={windowSize.width < 1200}>\n      <List>\n        {platforms\n          .filter(({ id }) => selectedPlatformIds.includes(id))\n          .map(({ id, name }) => (\n            <ListItem key={id} style={{ padding: 0, marginBottom: 8 }}>\n              {name}\n            </ListItem>\n          ))}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <PlatformsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Platforms</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Change'}\n        </Button>\n      </Box>\n\n      {isVisible ? renderPlatformsList() : renderCompactPlatformsList()}\n    </PlatformsRoot>\n  );\n};\n\nexport default Platforms;\n","import { Slider, withStyles } from '@material-ui/core';\nimport * as colors from '@material-ui/core/colors';\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: colors.grey[500],\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default PrettoSlider;\n","const secondsToSpinMarks = [...Array(6)].map((_, i) => ({\n  value: (i + 1) * 10,\n  label: (i + 1) * 10,\n}));\n\nconst speedMarks = [...Array(5)].map((_, i) => ({\n  value: i + 1,\n  label: i + 1,\n}));\n\nconst numberOfGamesMarks = [2, 4, 6, 8, 10, 12, 14, 16].map((n) => ({\n  value: n,\n  label: n,\n}));\n\nconst options = [\n  {\n    id: 'secondsToSpin',\n    title: 'Seconds to Spin',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 10,\n      max: 60,\n      marks: secondsToSpinMarks,\n    },\n  },\n  {\n    id: 'speed',\n    title: 'Speed',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 1,\n      max: 5,\n      marks: speedMarks,\n    },\n  },\n  {\n    id: 'numberOfGames',\n    title: 'Number of Games',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 2,\n      max: 16,\n      marks: numberOfGamesMarks,\n    },\n  },\n];\n\nexport default options;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport debounce from 'debounce';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box, Mark } from '@material-ui/core';\n\nimport analytics from 'utils/analytics';\nimport PrettoSlider from 'components/PrettoSlider';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n  numberOfGamesSelector,\n  updateOption,\n  OptionName,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/options.mock';\n\nconst OptionsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst OptionsList = styled.div<{ isDisabled: boolean }>`\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\ntype OptionSlider = {\n  type: 'slider';\n  step: number;\n  min: number;\n  max: number;\n  marks: Mark[];\n};\ntype Option = {\n  id: OptionName;\n  title: string;\n  component: OptionSlider; // and maybe something else in the future\n};\n\nconst Options = () => {\n  const dispatch = useDispatch();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const isRolling = useSelector(isRollingSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const speed = useSelector(speedSelector);\n  const numberOfGames = useSelector(numberOfGamesSelector);\n\n  const values: Record<string, number> = {\n    secondsToSpin,\n    speed,\n    numberOfGames,\n  };\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.options(!isVisible);\n  };\n\n  const handleOptionChange = (name: OptionName) =>\n    debounce((event: any, value: number | number[]) => {\n      dispatch(updateOption({ name, value }));\n      analytics.event.ui.changeOption(name, (value as unknown) as number);\n    }, 500);\n\n  const renderSlider = (\n    { step, min, max, marks }: OptionSlider,\n    value: number,\n    onChange: (event: any, value: number | number[]) => void,\n  ) => (\n    <PrettoSlider\n      defaultValue={value}\n      step={step}\n      min={min}\n      max={max}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      onChange={onChange}\n    />\n  );\n\n  const renderOption = ({ id, title, component }: Option) => (\n    <React.Fragment key={id}>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n      {renderSlider(component, values[id], handleOptionChange(id))}\n    </React.Fragment>\n  );\n\n  const renderOptions = () => (\n    <OptionsList isDisabled={isRolling}>\n      {(options as Option[]).map(renderOption)}\n    </OptionsList>\n  );\n\n  return (\n    <OptionsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Options</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Show'}\n        </Button>\n      </Box>\n\n      {isVisible && renderOptions()}\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nimport analytics from 'utils/analytics';\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\n\nconst GameLinksRoot = styled.div``;\nconst ServiceLink = styled(Button)<{ target?: string; rel?: string }>`\n  width: 100%;\n  text-transform: none !important;\n\n  .MuiButton-label {\n    justify-content: flex-start;\n  }\n`;\nconst Links = styled.div`\n  display: grid;\n  grid-gap: 16px 16px;\n`;\n\nconst getLinks = (name: string) => {\n  const searchQuery = encodeURI(name);\n\n  return [\n    {\n      id: 'youtube',\n      text: 'YouTube',\n      href: `//www.youtube.com/results?search_query=${searchQuery}`,\n      icon: <YouTubeIcon />,\n    },\n    {\n      id: 'gamefaqs',\n      text: 'GameFAQs',\n      href: `//gamefaqs.gamespot.com/search?game=${searchQuery}`,\n    },\n    {\n      id: 'metacritic',\n      text: 'Metacritic',\n      href: `//www.metacritic.com/search/all/${searchQuery}/results`,\n    },\n    {\n      id: 'hltb',\n      text: 'How Long To Beat',\n      href: `https://www.google.com/search?q=${searchQuery}%20site%3Ahowlongtobeat.com`,\n    },\n    {\n      id: 'emuparadise',\n      text: 'EmuParadise',\n      href: `//www.emuparadise.me/roms/search.php?query=${searchQuery}&section=all`,\n    },\n    {\n      id: 'coolrom',\n      text: 'CoolROM',\n      href: `//coolrom.com.au/search?q=${searchQuery}`,\n    },\n    {\n      id: 'romhustler',\n      text: 'RomHustler',\n      href: `//romhustler.org/roms/search/?q=${searchQuery}`,\n    },\n  ];\n};\n\nconst GameLinks = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  if (isRolling || !rolledGame) return null;\n\n  const links = getLinks(rolledGame.name);\n\n  return (\n    <GameLinksRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Links</Typography>\n      </Box>\n\n      <Links>\n        {links.map(({ id, text, href, icon }) => (\n          <ServiceLink\n            key={id}\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={icon || <SearchIcon />}\n            size=\"medium\"\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            onClick={() => analytics.event.searchLink(id)}\n          >\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n              Search on{' '}\n              <Typography variant=\"inherit\" color=\"textPrimary\">\n                {text}\n              </Typography>\n            </Typography>\n          </ServiceLink>\n        ))}\n      </Links>\n    </GameLinksRoot>\n  );\n};\n\nexport default GameLinks;\n","import { easeExpOut, easeExpInOut, easeCircleInOut } from 'd3-ease';\n\nconst f1 = easeExpOut;\nconst f2 = easeExpInOut;\nconst f3 = easeCircleInOut;\n\nconst breakpointX1 = 0.2;\nconst breakpointX2 = 0.4;\nconst breakpointY1 = 0.2;\n\nconst timingFunction = (n: number) => {\n  // f1: (x: [0, bx1)) => y: [0, 1);\n  if (n < breakpointX1) {\n    const x = n * (1 / breakpointX1);\n    return f1(x);\n  }\n\n  // f2: (x: [bx1, bx2)) => y: [1, by1);\n  if (n < breakpointX2) {\n    const x = (n - breakpointX1) * (1 / (breakpointX2 - breakpointX1));\n    const y = f2(1 - x) * (1 - breakpointY1) + breakpointY1;\n\n    return y;\n  }\n\n  // f3: (x: [bx2, 1)) => y: [by1, 0);\n  const x = (n - breakpointX2) * (1 / (1 - breakpointX2));\n  const y = f3(1 - x) * breakpointY1;\n\n  return y;\n};\n\nexport default timingFunction;\n","let canvas: HTMLCanvasElement | null = null;\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nconst getTextWidth = (text: string, font: string) => {\n  if (!canvas) canvas = document.createElement(\"canvas\");\n\n  const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  context.font = font;\n\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n};\n\nexport default getTextWidth;\n","import getTextWidth from 'features/circle/getTextWidth';\n\nconst sliceTextByMaxWidth = (text: string, font: string, maxWidth: number) => {\n  const width = getTextWidth(text, font);\n\n  if (width < maxWidth) return text;\n\n  let beginCursor = 0;\n  let endCursor = text.length;\n  let cursor = Math.floor(text.length / 2);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const textSlice = `${text.slice(0, cursor)}...`;\n\n    const w = getTextWidth(textSlice, font);\n\n    if (w > maxWidth) {\n      endCursor = cursor;\n    } else {\n      beginCursor = cursor;\n    }\n\n    // middle between the beginCursor and the endCursor\n    cursor = beginCursor + Math.floor((endCursor - beginCursor) / 2);\n\n    if (beginCursor === cursor) return textSlice;\n  }\n};\n\nexport default sliceTextByMaxWidth;\n","import { RolledGame } from 'features/rollGame/rollGameTypes';\n\nconst LINE_WIDTH = 4;\n\nconst meanAngleDeg = (angle1: number, angle2: number) => {\n  return Math.atan2(\n    (Math.sin(angle1) + Math.sin(angle2)) / 2,\n    (Math.cos(angle1) + Math.cos(angle2)) / 2,\n  );\n};\n\nconst getX = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.sin(angle);\n\nconst getY = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.cos(angle);\n\n/* eslint-disable no-param-reassign */\nconst drawCircle = (\n  segments: RolledGame[],\n  radius: number,\n  textFont: string,\n) => (context: CanvasRenderingContext2D, rotateAngle: number) => {\n  const size = radius * 2;\n  const coeff = (2 * Math.PI) / segments.length;\n  const textOffset = (20 / 200) * radius;\n\n  context.clearRect(0, 0, size, size);\n\n  context.translate(radius, radius);\n  context.rotate(rotateAngle);\n  context.translate(-radius, -radius);\n\n  context.arc(radius, radius, radius, 0, 2 * Math.PI);\n  context.fillStyle = '#121212';\n  context.fill();\n\n  segments.forEach((segment, i) => {\n    const from = i * coeff;\n    const to = (i + 1) * coeff;\n\n    context.beginPath();\n    context.arc(radius, radius, radius - LINE_WIDTH / 2, from, to);\n    context.lineTo(radius, radius);\n    context.strokeStyle = '#fff';\n    context.lineWidth = LINE_WIDTH;\n    context.stroke();\n\n    const meanAngle = meanAngleDeg(from, to);\n    const textAngleRotation = meanAngle + Math.PI;\n    const textAngle = -(meanAngle + 1.5 * Math.PI);\n    const textX = getX(radius, radius - textOffset, textAngle);\n    const textY = getY(radius, radius - textOffset, textAngle);\n\n    context.save();\n    context.translate(textX, textY);\n    context.rotate(textAngleRotation);\n    context.beginPath();\n    context.font = textFont;\n    context.fillStyle = '#fff';\n    context.fillText(segment.name, 0, 4);\n    context.restore();\n  });\n};\n/* eslint-disable no-param-reassign */\n\nexport default drawCircle;\n","import { useEffect, useRef, useCallback } from 'react';\n\nconst initializeIsActive = (count: number) =>\n  Array.from({ length: count }, () => false);\n\nconst useSoundsList = (elems: HTMLAudioElement[]) => {\n  const soundsRef = useRef(elems);\n  const isActiveRef = useRef<boolean[]>();\n\n  if (!isActiveRef.current) {\n    isActiveRef.current = initializeIsActive(elems.length);\n  }\n\n  const sounds = soundsRef.current;\n  const isActive = isActiveRef.current;\n\n  useEffect(() => {\n    const clearFunctions = sounds.map((audio, index) => {\n      const handleEnded = () => {\n        isActive[index] = false;\n      };\n\n      audio.addEventListener('ended', handleEnded);\n\n      return () => audio.removeEventListener('ended', handleEnded);\n    });\n\n    return () => clearFunctions.forEach((func) => func());\n  }, [sounds, isActive]);\n\n  const play = useCallback(() => {\n    for (let i = 0; i < sounds.length; i += 1) {\n      if (!isActive[i]) {\n        sounds[i].play();\n        isActive[i] = true;\n\n        return;\n      }\n    }\n  }, [sounds, isActive]);\n\n  return play;\n};\n\nexport default useSoundsList;\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport timingFunction from 'utils/timingFunction';\nimport { GLOBAL_FONT } from 'utils/constants';\nimport sliceTextByMaxWidth from 'features/circle/sliceTextByMaxWidth';\nimport drawCircle from 'features/circle/drawCircle';\nimport {\n  isRollingSelector,\n  rolledGamesSelector,\n} from 'features/rollGame/rollGameSlice';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n} from 'features/options/optionsSlice';\nimport useSoundsList from 'features/circle/useSoundsList';\n\nconst wheelSoundTicks = [\n  document.getElementById('wheel-sound-tick-1'),\n  document.getElementById('wheel-sound-tick-2'),\n  document.getElementById('wheel-sound-tick-3'),\n] as HTMLAudioElement[];\n\nconst wheelSoundComplete = document.getElementById(\n  'wheel-sound-complete',\n) as HTMLAudioElement;\n\nconst getGameIndexByAngle = (angle: number, segmentAngle: number) => {\n  const normalizedAngle =\n    Math.abs((angle % (Math.PI * 2)) - Math.PI * 2) + Math.PI;\n\n  return Math.floor((normalizedAngle % (Math.PI * 2)) / segmentAngle);\n};\n\nconst normalizeSegments = (\n  segments: RolledGame[],\n  textFont: string,\n  maxTextWidth: number,\n): RolledGame[] =>\n  segments.map(({ name, ...rest }) => ({\n    name: sliceTextByMaxWidth(name, textFont, maxTextWidth),\n    ...rest,\n  }));\n\nconst getSegmentAngle = (segmentsCount: number) =>\n  (2 * Math.PI) / segmentsCount;\n\ntype Options = {\n  radius: number;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  onRollComplete: (id: number) => void;\n};\n\ntype State = {\n  // requestAnimationFrame id\n  requestId: number | null;\n  // previous time in the animate function\n  prevTime: number | null;\n  // time from the start of the animation\n  fullTime: number;\n  // full canvas rotation angle\n  fullAngle: number;\n  currentIndex: number;\n  scale: number;\n};\n\nconst initialState = {\n  requestId: null,\n  prevTime: null,\n  fullTime: 0,\n  fullAngle: 0,\n  currentIndex: 0,\n  scale: -1,\n};\n\n// NOTE: in \"variableI\" letter \"I\" means UnitInterval - [0, 1)\n\nconst useDrawCircle = ({ radius, canvasRef, onRollComplete }: Options) => {\n  const stateRef = useRef<State>(initialState);\n\n  const isRolling = useSelector(isRollingSelector);\n  const speed = useSelector(speedSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const rolledGames = useSelector(rolledGamesSelector);\n\n  const playTick = useSoundsList(wheelSoundTicks);\n\n  const textFont = `${(12 / 200) * radius}px ${GLOBAL_FONT}`;\n  const textMaxWidth = (135 / 200) * radius;\n\n  const segments = normalizeSegments(rolledGames, textFont, textMaxWidth);\n  const drawFunc = useMemo(() => drawCircle(segments, radius, textFont), [\n    segments,\n    radius,\n    textFont,\n  ]);\n\n  const [segmentAngle, setSegmentAngle] = useState(() =>\n    getSegmentAngle(segments.length),\n  );\n\n  useEffect(() => setSegmentAngle(getSegmentAngle(segments.length)), [\n    segments.length,\n  ]);\n\n  // TODO: fix circle blinking on resize\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (!canvasRef.current) return;\n\n      const dpr = window.devicePixelRatio || 1;\n\n      const rect = canvasRef.current.getBoundingClientRect();\n      const context = canvasRef.current.getContext('2d');\n\n      if (!context) return;\n\n      // if animation not playing update scale and redraw\n      if (!stateRef.current.requestId) {\n        // eslint-disable-next-line no-param-reassign\n        canvasRef.current.width = rect.width * dpr;\n        // eslint-disable-next-line no-param-reassign\n        canvasRef.current.height = rect.height * dpr;\n        context.scale(dpr, dpr);\n\n        drawFunc(context, 0);\n      }\n\n      stateRef.current.scale = dpr;\n    };\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [canvasRef, stateRef, drawFunc]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const context = canvasRef.current.getContext('2d');\n    const state = stateRef.current;\n\n    if (!context) return;\n\n    // first initial draw\n    drawFunc(context, 0);\n\n    const stop = () => {\n      if (!state.requestId) return;\n\n      window.cancelAnimationFrame(state.requestId);\n\n      state.fullAngle = 0;\n      state.currentIndex = 0;\n      state.prevTime = null;\n      state.fullTime = 0;\n    };\n\n    const animate = (time: number) => {\n      if (state.prevTime === null) {\n        state.prevTime = time;\n      }\n\n      const deltaTime = time - state.prevTime;\n      state.prevTime = time;\n\n      state.fullTime += deltaTime;\n\n      if (state.fullTime > secondsToSpin * 1000) {\n        onRollComplete(state.currentIndex);\n        wheelSoundComplete.play();\n        stop();\n\n        return;\n      }\n\n      const currentIndex = getGameIndexByAngle(state.fullAngle, segmentAngle);\n\n      if (state.currentIndex !== currentIndex) {\n        playTick();\n        state.currentIndex = currentIndex;\n      }\n\n      const timeI = state.fullTime / (secondsToSpin * 1000);\n      const speedI = timingFunction(timeI);\n      const angle = ((2 * Math.PI) / 360) * speedI * speed;\n\n      drawFunc(context, angle);\n\n      state.fullAngle += angle;\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      const { scale } = stateRef.current;\n\n      state.currentIndex = getGameIndexByAngle(state.fullAngle, segmentAngle);\n\n      context.resetTransform();\n      context.scale(scale, scale);\n\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    if (isRolling) {\n      start();\n    }\n\n    // eslint-disable-next-line consistent-return\n    return () => stop();\n  }, [\n    canvasRef,\n    stateRef,\n    drawFunc,\n    secondsToSpin,\n    isRolling,\n    speed,\n    segmentAngle,\n    playTick,\n    onRollComplete,\n  ]);\n};\n\nexport default useDrawCircle;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#121212\",\n  stroke: \"#fff\",\n  strokeWidth: 4,\n  d: \"M2 3v26l26-13z\"\n});\n\nvar SvgArrowRight = function SvgArrowRight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowRight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-right.94c9ce06.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWindowSize } from 'react-use';\nimport * as colors from '@material-ui/core/colors';\n\nimport analytics from 'utils/analytics';\nimport {\n  rollGameComplete,\n  rollGameStart,\n  updateRolledGames,\n  isRollingSelector,\n} from 'features/rollGame/rollGameSlice';\nimport useDrawCircle from 'features/circle/useDrawCircle';\nimport { selectedPlatformIdsSelector } from 'features/options/optionsSlice';\n\nimport { ReactComponent as ArrowRightSvg } from 'icons/arrow-right.svg';\n\ntype CircleCanvasRootProps = {\n  width: number;\n  height: number;\n};\nconst CircleCanvasRoot = styled.div<CircleCanvasRootProps>`\n  position: relative;\n  align-self: center;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\nconst Canvas = styled.canvas`\n  display: block;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\nconst RollButton = styled.button<{ radius: number }>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0;\n  padding: 0;\n  width: ${(p) => (60 / 200) * p.radius}px;\n  height: ${(p) => (60 / 200) * p.radius}px;\n  color: #fff;\n  background-color: ${colors.grey[800]};\n  border: 4px solid #fff;\n  border-radius: 50%;\n  font-size: ${(p) => (14 / 200) * p.radius}px;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  transform: translate(-50%, -50%);\n  transition-property: color;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  &[disabled] {\n    color: ${colors.grey[800]};\n    pointer-events: none;\n  }\n`;\nconst ArrowRightIcon = styled(ArrowRightSvg)`\n  position: absolute;\n  top: 50%;\n  left: 1px;\n  width: 32px;\n  height: 32px;\n  transform: translateY(-50%);\n`;\n\nconst CircleCanvas = () => {\n  const dispatch = useDispatch();\n  const [radius, setRadius] = useState(300);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n  const windowSize = useWindowSize();\n\n  const size = radius * 2;\n\n  const isRollButtonDisabled = isRolling || !selectedPlatformIds.length;\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (windowSize.width < 450) {\n        setRadius(140);\n      } else if (windowSize.width < 1840) {\n        setRadius(200);\n      } else {\n        setRadius(300);\n      }\n    };\n\n    handleResize();\n  }, [setRadius, windowSize.width]);\n\n  const handleRollStart = () => {\n    dispatch(updateRolledGames());\n    dispatch(rollGameStart());\n    analytics.event.rollGame.start();\n  };\n\n  const handleRollComplete = (id: number) => {\n    dispatch(rollGameComplete(id));\n    analytics.event.rollGame.complete();\n  };\n\n  useDrawCircle({\n    canvasRef,\n    radius,\n    onRollComplete: handleRollComplete,\n  });\n\n  return (\n    <CircleCanvasRoot width={size} height={size}>\n      <Canvas width={size} height={size} ref={canvasRef} />\n      <RollButton\n        disabled={isRollButtonDisabled}\n        radius={radius}\n        onClick={handleRollStart}\n      >\n        Roll\n      </RollButton>\n      <ArrowRightIcon />\n    </CircleCanvasRoot>\n  );\n};\n\nexport default CircleCanvas;\n","const replaceSpacesWithNbsp = (text: string) => text.replace(/ /g, '&nbsp;');\n\nexport default replaceSpacesWithNbsp;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport { Typography } from '@material-ui/core';\n\nimport replaceSpacesWithNbsp from 'utils/replaceSpacesWithNbsp';\nimport { selectedPlatformIdsSelector } from 'features/options/optionsSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst SelectedPlatformsMessage = () => {\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  if (!selectedPlatformIds.length) {\n    return (\n      <Typography variant=\"h6\">Please choose one or more platfotms</Typography>\n    );\n  }\n\n  if (selectedPlatformIds.length === platforms.length) {\n    return (\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Selected&nbsp;platforms:{' '}\n        <Typography variant=\"inherit\" color=\"textPrimary\">\n          All\n        </Typography>\n      </Typography>\n    );\n  }\n\n  const selectedPlatforms = selectedPlatformIds\n    .slice(0, 3)\n    .map((id) => platforms.find(R.propEq('id', id)));\n\n  if (selectedPlatformIds.length === 1) {\n    return (\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Selected&nbsp;platform:{' '}\n        <Typography\n          variant=\"inherit\"\n          color=\"textPrimary\"\n          dangerouslySetInnerHTML={{\n            __html: replaceSpacesWithNbsp(selectedPlatforms[0]?.name || ''),\n          }}\n        />\n      </Typography>\n    );\n  }\n\n  return (\n    <Typography variant=\"h6\" color=\"textSecondary\">\n      Selected&nbsp;platforms:{' '}\n      {selectedPlatforms.map((platform, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <React.Fragment key={index}>\n          <Typography\n            variant=\"inherit\"\n            color=\"textPrimary\"\n            key={platform?.id}\n            dangerouslySetInnerHTML={{\n              __html: replaceSpacesWithNbsp(platform?.name || ''),\n            }}\n          />\n          {selectedPlatforms.length - 1 !== index && ', '}\n        </React.Fragment>\n      ))}\n      {selectedPlatformIds.length > 3 && (\n        <>\n          {' and'}&nbsp;\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {selectedPlatformIds.length - 3}\n          </Typography>\n          &nbsp;more\n        </>\n      )}\n    </Typography>\n  );\n};\n\nexport default SelectedPlatformsMessage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { Typography } from '@material-ui/core';\n\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\nimport SelectedPlatformsMessage from 'features/rollGame/SelectedPlatformsMessage';\n\nconst ResultRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n  text-align: center;\n`;\n\nconst Result = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  const renderRolledGame = () => {\n    if (!rolledGame) return null;\n\n    const { name, platform } = rolledGame;\n\n    return (\n      <>\n        <Typography\n          variant=\"h4\"\n          style={{ marginBottom: 8, textAlign: 'center' }}\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Platform:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {platform}\n          </Typography>\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <ResultRoot>\n      {isRolling || !rolledGame ? (\n        <SelectedPlatformsMessage />\n      ) : (\n        renderRolledGame()\n      )}\n    </ResultRoot>\n  );\n};\n\nexport default Result;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\nimport CircleCanvas from 'features/circle/CircleCanvas';\nimport Result from 'features/rollGame/Result';\nimport { updateRolledGames } from 'features/rollGame/rollGameSlice';\n\nconst RollGameRoot = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst RollGame = ({ className }: Props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateRolledGames());\n  }, [dispatch]);\n\n  return (\n    <RollGameRoot className={className}>\n      <CircleCanvas />\n      <Result />\n    </RollGameRoot>\n  );\n};\n\nexport default RollGame;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport GlobalStyles from 'styles';\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport Footer from 'components/Footer';\nimport Platforms from 'features/platforms/Platforms';\nimport Options from 'features/options/Options';\nimport GameLinks from 'features/rollGame/GameLinks';\nimport RollGame from 'features/rollGame/RollGame';\n\nconst theme = createMuiTheme({ palette: { type: 'dark' } });\n\nconst AppRoot = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-columns: 16px auto 16px;\n  grid-template-rows: 48px 24px auto 24px auto 24px auto 24px 200px;\n  grid-template-areas:\n    'header header     header'\n    '.      .          .     '\n    '.      roll-game  .     '\n    '.      .          .     '\n    '.      side-left  .     '\n    '.      .          .     '\n    '.      side-right .     '\n    '.      .          .     '\n    'footer footer     footer';\n\n  @media (min-width: 720px) {\n    grid-template-columns: 32px auto 32px;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: auto 340px 40px 400px 40px 340px auto;\n    grid-template-rows: 48px 40px auto 40px 48px;\n    grid-template-areas:\n      'header header    header header    header header     header'\n      '.      .         .      .         .      .          .     '\n      '.      side-left .      roll-game .      side-right .     '\n      '.      .         .      .         .      .          .     '\n      'footer footer    footer footer    footer footer     footer';\n  }\n\n  @media (min-width: 1840px) {\n    grid-template-columns: auto 360px 40px 840px 40px 360px auto;\n    grid-template-rows: 64px 40px auto 40px 64px;\n  }\n`;\nconst StyledHeader = styled(Header)`\n  grid-area: header;\n`;\nconst StyledSidebarLeft = styled(Sidebar)`\n  grid-area: side-left;\n`;\nconst StyledSidebarRight = styled(Sidebar)`\n  grid-area: side-right;\n`;\nconst StyledRollGame = styled(RollGame)`\n  grid-area: roll-game;\n`;\nconst StyledFooter = styled(Footer)`\n  grid-area: footer;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <AppRoot>\n        <StyledHeader />\n        <StyledSidebarLeft>\n          <Platforms />\n        </StyledSidebarLeft>\n        <StyledSidebarRight>\n          <Options />\n          <GameLinks />\n        </StyledSidebarRight>\n        <StyledRollGame />\n        <StyledFooter />\n      </AppRoot>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport rollGame from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  rollGame,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport analytics from 'utils/analytics';\nimport App from 'app/App';\nimport store from 'app/store';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  analytics.initialize();\n\n  const page =\n    window.location.pathname + window.location.search + window.location.hash;\n\n  analytics.pageview(page);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}