{"version":3,"sources":["utils/analytics.ts","utils/constants.ts","styles/common.ts","styles/index.ts","features/options/optionsUtils.ts","features/options/optionsSlice.ts","components/Header.tsx","components/Sidebar.tsx","utils/buildDate.ts","features/rollGame/rollGameUtils.ts","components/Footer.tsx","features/platforms/Platform.tsx","features/rollGame/rollGameSlice.ts","features/platforms/Platforms.tsx","components/PrettoSlider.tsx","features/options/options.mock.ts","features/options/Options.tsx","features/rollGame/GameLinks.tsx","utils/timingFunction.ts","features/wheel/getTextWidth.ts","features/wheel/sliceTextByMaxWidth.ts","features/wheel/drawWheel.ts","features/wheel/useSoundsList.ts","features/wheel/useDrawWheel.ts","icons/arrow-right.svg","features/wheel/WheelCanvas.tsx","utils/replaceSpacesWithNbsp.ts","features/rollGame/SelectedPlatformsMessage.tsx","features/rollGame/Result.tsx","features/rollGame/RollGame.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CATEGORIES","sendEvent","eventArgs","ReactGA","event","initialize","page","pageview","rollGame","start","category","action","complete","searchLink","serviceId","label","platforms","selectAll","selectNone","platformNameClick","platformId","platformCheckboxClick","ui","isVisible","options","changeOption","name","value","link","url","GLOBAL_FONT","BREAKPOINTS","css","createGlobalStyle","common","writeOptionsToLocalStorage","localStorage","setItem","JSON","stringify","initialState","selectedPlatformIds","secondsToSpin","speed","numberOfGames","currentTheme","getItem","parse","e","readOptionsFromLocalStorage","createSlice","reducers","updateOption","state","payload","selectPlatform","togglePlatform","index","indexOf","splice","push","actions","secondsToSpinSelector","speedSelector","numberOfGamesSelector","selectedPlatformIdsSelector","currentThemeSelector","HeaderRoot","styled","AppBar","p","theme","palette","background","default","text","primary","HeaderInner","div","ToggleThemeButton","IconButton","React","memo","className","dispatch","useDispatch","useTheme","windowSize","useWindowSize","useSelector","position","Typography","variant","width","Tooltip","title","color","onClick","analytics","LinksRoot","aside","buildDate","gamesCount","R","games","FooterRoot","footer","divider","FooterInner","FooterLink","Link","attrs","rel","target","buildDateString","format","Date","href","id","checked","onNameClick","onCheckboxClick","ListItem","key","button","selected","style","padding","alignItems","Checkbox","edge","onChange","ListItemText","primaryTypographyProps","fontWeight","margin","display","secondary","secondaryTypographyProps","marginLeft","colors","isRolling","gameIndex","rolledGames","updateRolledGamesThunk","rollGameStart","rollGameComplete","isRollingSelector","rolledGamesSelector","rolledGameSelector","updateRolledGames","getState","count","gamesBySelectedPlatforms","length","items","shuffle","map","rest","platform","find","getRandomGames","PlatformsRoot","PlatformsList","isDisabled","Platforms","useState","setIsVisible","handleNameClick","useCallback","handleCheckboxClick","handleSelectAll","handleSelectNone","Box","justifyContent","mb","Button","size","component","startIcon","height","flexGrow","native","List","dense","disablePadding","releaseDate","includes","filter","marginBottom","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","type","step","min","max","marks","Array","_","i","n","OptionsRoot","OptionsList","Options","values","renderOption","Fragment","gutterBottom","defaultValue","valueLabelDisplay","renderSlider","debounce","handleOptionChange","GameLinksRoot","ServiceLink","Links","GameLinks","rolledGame","links","searchQuery","encodeURI","icon","getLinks","f1","easeExpOut","f2","easeExpInOut","f3","easeCircleInOut","timingFunction","canvas","getTextWidth","font","document","createElement","context","getContext","measureText","sliceTextByMaxWidth","maxWidth","beginCursor","endCursor","cursor","Math","floor","textSlice","slice","drawCircle","segments","radius","rotationAngle","segmentAngle","textFont","wheelColors","scale","textOffset","setTransform","clearRect","translate","rotate","arc","PI","fillStyle","wheelBackground","fill","forEach","segment","from","to","beginPath","LINE_WIDTH","lineTo","strokeStyle","lineWidth","stroke","meanAngle","angle1","angle2","atan2","sin","cos","meanAngleDeg","textAngleRotation","textAngle","textX","offset","angle","getX","textY","getY","save","fillText","restore","useSoundsList","elems","soundsRef","useRef","isActiveRef","current","initializeIsActive","sounds","isActive","useEffect","clearFunctions","audio","handleEnded","addEventListener","removeEventListener","func","play","wheelSoundTicks","getElementById","wheelSoundComplete","getGameIndexByAngle","normalizedAngle","abs","getDevicePixelRatio","window","devicePixelRatio","getTextFont","getSegmentAngle","segmentsCount","useDrawCircle","canvasRef","onRollComplete","playTick","stateRef","drawStateRef","requestId","prevTime","fullTime","currentIndex","stop","getInitialState","getInitialDrawState","drawState","textMaxWidth","maxTextWidth","normalizeSegments","requestAnimationFrame","drawWheel","handleResize","cancelAnimationFrame","animate","time","deltaTime","timeI","speedI","deltaAngle","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","strokeWidth","d","SvgArrowRight","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","CircleCanvasRoot","Canvas","RollButton","textColor","bgColor","borderColor","ArrowRightIcon","wheelThemes","dark","buttonBackground","light","CircleCanvas","setRadius","setWheelColors","isRollButtonDisabled","useDrawWheel","disabled","replaceSpacesWithNbsp","replace","SelectedPlatformsMessage","selectedPlatformsText","selectedPlatforms","selectedPlatformsList","dangerouslySetInnerHTML","__html","renderSelectedPlatformsList","ResultRoot","Result","textAlign","renderRolledGame","RollGameRoot","main","RollGame","WheelCanvas","themes","paper","AppRoot","StyledHeader","Header","StyledSidebarLeft","Sidebar","StyledSidebarRight","StyledRollGame","StyledFooter","Footer","getTheme","createMuiTheme","App","setTheme","ThemeProvider","bgcolor","rootReducer","combineReducers","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","pathname","search","hash","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.425c01c2.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\nconst CATEGORIES = {\n  rollGame: 'Roll Game',\n  searchLinks: 'Search Links',\n  platforms: 'Platforms',\n  userInterface: 'User Interface',\n};\n\nconst initialize = () => ReactGA.initialize('UA-139550930-4');\n\nconst pageview = (page: string) => ReactGA.pageview(page);\n\nconst sendEvent = (eventArgs: ReactGA.EventArgs) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // console.log(eventArgs);\n  } else {\n    ReactGA.event(eventArgs);\n  }\n};\n\nconst event = {\n  rollGame: {\n    start: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Start',\n      }),\n    complete: () =>\n      sendEvent({\n        category: CATEGORIES.rollGame,\n        action: 'Complete',\n      }),\n  },\n\n  // search links\n  searchLink: (serviceId: string) =>\n    sendEvent({\n      category: CATEGORIES.searchLinks,\n      action: 'Search Link Click',\n      label: serviceId,\n    }),\n\n  // platforms\n  platforms: {\n    selectAll: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select All Click',\n      }),\n    selectNone: () =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Select None Click',\n      }),\n    platformNameClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Name Click',\n        label: platformId,\n      }),\n    platformCheckboxClick: (platformId: string) =>\n      sendEvent({\n        category: CATEGORIES.platforms,\n        action: 'Platform Checkbox Click',\n        label: platformId,\n      }),\n  },\n\n  // user interface\n  ui: {\n    platforms: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Platforms',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    options: (isVisible: boolean) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Options',\n        label: isVisible ? 'Show' : 'Hide',\n      }),\n    changeOption: (name: string, value: number) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Change Option',\n        label: name,\n        value,\n      }),\n    link: (url: string) =>\n      sendEvent({\n        category: CATEGORIES.userInterface,\n        action: 'Link',\n        label: url,\n      }),\n  },\n};\n\nexport default {\n  initialize,\n  pageview,\n  event,\n};\n","export const GLOBAL_FONT = 'Roboto, Helvetica, Arial, sans-serif';\n\nexport const LS_OPTIONS = 'rggOptions';\n\nexport const BREAKPOINTS = {\n  sm: 450,\n  md: 720,\n  lg: 1200,\n  xl: 1840,\n};\n","import { css } from 'styled-components';\n\nimport { GLOBAL_FONT } from 'utils/constants';\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${GLOBAL_FONT};\n    margin: 0;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport common from 'styles/common';\n\nexport default createGlobalStyle`\n  ${common}\n`;\n","import { LS_OPTIONS } from 'utils/constants';\n\nexport const writeOptionsToLocalStorage = (options: object) => {\n  localStorage.setItem(LS_OPTIONS, JSON.stringify(options));\n};\n\nexport const readOptionsFromLocalStorage = () => {\n  const options = localStorage.getItem(LS_OPTIONS);\n\n  try {\n    return JSON.parse(options || '{}');\n  } catch (e) {\n    return {};\n  }\n};\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport {\n  writeOptionsToLocalStorage,\n  readOptionsFromLocalStorage,\n} from 'features/options/optionsUtils';\nimport { AppTheme } from 'features/options/optionsTypes';\n\ntype OptionsState = {\n  selectedPlatformIds: string[];\n  secondsToSpin: number;\n  speed: number;\n  numberOfGames: number;\n  currentTheme: AppTheme;\n};\n\nexport type OptionName =\n  | 'secondsToSpin'\n  | 'speed'\n  | 'numberOfGames'\n  | 'selectedPlatformIds'\n  | 'currentTheme';\ntype UpdateOptionAction = {\n  name: OptionName;\n  value: any;\n};\n\nconst initialState: OptionsState = {\n  selectedPlatformIds: ['playstation', 'playstation-2'],\n  secondsToSpin: 30,\n  speed: 3,\n  numberOfGames: 16,\n  currentTheme: 'dark',\n  ...readOptionsFromLocalStorage(),\n};\n\n// TODO: remove side effect from reducers\nconst options = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    updateOption: (state, { payload }: PayloadAction<UpdateOptionAction>) => {\n      const { name, value } = payload;\n      (state as any)[name] = value;\n\n      writeOptionsToLocalStorage(state);\n    },\n    selectPlatform: (state, { payload }: PayloadAction<string>) => {\n      state.selectedPlatformIds = [payload];\n\n      writeOptionsToLocalStorage(state);\n    },\n    togglePlatform: (state, { payload }: PayloadAction<string>) => {\n      const index = state.selectedPlatformIds.indexOf(payload);\n\n      if (index > -1) {\n        state.selectedPlatformIds.splice(index, 1);\n      } else {\n        state.selectedPlatformIds.push(payload);\n      }\n\n      writeOptionsToLocalStorage(state);\n    },\n  },\n});\n\nexport const { updateOption, selectPlatform, togglePlatform } = options.actions;\n\nexport default options.reducer;\n\n// selectors\nexport const secondsToSpinSelector = (state: RootState) =>\n  state.options.secondsToSpin;\n\nexport const speedSelector = (state: RootState) => state.options.speed;\n\nexport const numberOfGamesSelector = (state: RootState) =>\n  state.options.numberOfGames;\n\nexport const selectedPlatformIdsSelector = (state: RootState) =>\n  state.options.selectedPlatformIds;\n\nexport const currentThemeSelector = (state: RootState) =>\n  state.options.currentTheme;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useWindowSize } from 'react-use';\nimport { useTheme, Theme } from '@material-ui/core/styles';\nimport { Typography, IconButton, Tooltip, AppBar } from '@material-ui/core';\nimport DarkThemeIcon from '@material-ui/icons/Brightness7';\nimport LightThemeIcon from '@material-ui/icons/Brightness4';\n\nimport analytics from 'utils/analytics';\nimport { BREAKPOINTS } from 'utils/constants';\nimport {\n  currentThemeSelector,\n  updateOption,\n} from 'features/options/optionsSlice';\n\nconst HeaderRoot = styled(AppBar)<{ theme: Theme }>`\n  background-color: ${(p) => p.theme.palette.background.default} !important;\n  color: ${(p) => p.theme.palette.text.primary} !important;\n`;\nconst HeaderInner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  @media (min-width: ${BREAKPOINTS.lg}px) {\n    width: ${BREAKPOINTS.lg}px;\n  }\n\n  @media (min-width: ${BREAKPOINTS.xl}px) {\n    width: 1640px;\n  }\n`;\nconst ToggleThemeButton = styled(IconButton)`\n  position: absolute !important;\n  right: 8px;\n\n  @media (min-width: ${BREAKPOINTS.lg}px) {\n    right: 0;\n  }\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst Header = ({ className }: Props) => {\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const windowSize = useWindowSize();\n  const currentTheme = useSelector(currentThemeSelector);\n\n  const handleToggleTheme = () => {\n    const name = 'currentTheme';\n    const value = currentTheme === 'dark' ? 'light' : 'dark';\n\n    analytics.event.ui.changeOption(name, value === 'dark' ? 1 : 0);\n    dispatch(updateOption({ name, value }));\n  };\n\n  return (\n    <HeaderRoot className={className} position=\"static\" theme={theme}>\n      <HeaderInner>\n        <Typography variant={windowSize.width < BREAKPOINTS.sm ? 'h5' : 'h4'}>\n          Retro Game Gauntlet\n        </Typography>\n        <Tooltip title=\"Toggle dark/light theme\">\n          <ToggleThemeButton color=\"inherit\" onClick={handleToggleTheme}>\n            {currentTheme === 'dark' ? <LightThemeIcon /> : <DarkThemeIcon />}\n          </ToggleThemeButton>\n        </Tooltip>\n      </HeaderInner>\n    </HeaderRoot>\n  );\n};\n\nexport default React.memo(Header);\n","import styled from 'styled-components';\n\nconst LinksRoot = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  & > :not(:last-child) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport default LinksRoot;\n","import preval from \"preval.macro\";\n\nconst buildDate = preval`module.exports = Date.now()` as number;\n\nexport default buildDate;\n","import * as R from 'ramda';\nimport { shuffle } from 'd3-array';\n\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\nimport games from 'data/games.json';\nimport platforms from 'data/platforms.json';\n\nexport const getRandomGames = (\n  selectedPlatformIds: string[],\n  count: number,\n): RolledGame[] => {\n  const gamesBySelectedPlatforms = selectedPlatformIds.length\n    ? R.pick(selectedPlatformIds, games)\n    : games;\n\n  const rolledGames = R.pipe<any, any, any, any, any, any>(\n    R.toPairs,\n    R.map<any, any>(([platformId, items]) =>\n      R.map((name) => ({ platformId, name }), items),\n    ),\n    R.flatten,\n    shuffle,\n    R.slice(0, count),\n  )(gamesBySelectedPlatforms);\n\n  return rolledGames.map(({ platformId, ...rest }: any) => {\n    const platform = platforms.find(R.propEq('id', platformId));\n\n    return {\n      platform: platform?.name || '',\n      ...rest,\n    };\n  });\n};\n\nexport const gamesCount = R.pipe<any, any, any, any>(\n  R.values,\n  R.flatten,\n  R.propOr(0, 'length'),\n)(games) as number;\n\n// longest game names\n// console.log(\n//   R.pipe<any, any, any, any, any>(\n//     R.values,\n//     R.flatten,\n//     R.sortWith([R.descend(R.prop(\"length\"))]),\n//     R.slice(0, 10)\n//   )(games)\n// );\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Typography, Link, useTheme, Theme } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nimport analytics from 'utils/analytics';\nimport { BREAKPOINTS } from 'utils/constants';\nimport buildDate from 'utils/buildDate';\nimport { gamesCount } from 'features/rollGame/rollGameUtils';\n\nconst FooterRoot = styled.footer<{ theme: Theme }>`\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid ${(p) => p.theme.palette.divider};\n`;\nconst FooterInner = styled(Typography)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  flex-grow: 1;\n  max-width: 1280px;\n  height: 100%;\n  font-size: 0.8rem !important;\n  text-align: center;\n  opacity: 0.6;\n\n  @media (min-width: ${BREAKPOINTS.md}px) {\n    flex-direction: row;\n    text-align: left;\n  }\n`;\nconst FooterLink = styled(Link).attrs({\n  rel: 'noreferrer noopener',\n  target: '_blank',\n  color: 'inherit',\n})``;\n\ntype Props = {\n  className?: string;\n};\n\n// TODO: add FAQ\n\nconst gamesListSourceUrl = '//nukecritic.com/rgg/';\nconst authorUrl = '//github.com/DmitryScaletta';\nconst reportBugUrl = '//github.com/honeykingdom/rgg/issues';\n\nconst buildDateString = format(new Date(buildDate), 'P p');\n\nconst Footer = ({ className }: Props) => {\n  const theme = useTheme();\n\n  return (\n    <FooterRoot className={className} theme={theme}>\n      <FooterInner>\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Games in database:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {gamesCount}\n          </Typography>\n          <br />\n          Games list from:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={gamesListSourceUrl}\n              onClick={() => analytics.event.ui.link(gamesListSourceUrl)}\n            >\n              nukecritic.com/rgg/\n            </FooterLink>\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          Author:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={authorUrl}\n              onClick={() => analytics.event.ui.link(authorUrl)}\n            >\n              DmitryScaletta\n            </FooterLink>\n          </Typography>\n          <br />\n          Last update:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {buildDateString}\n          </Typography>\n        </Typography>\n\n        <Typography variant=\"inherit\" color=\"textSecondary\">\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            <FooterLink\n              href={reportBugUrl}\n              onClick={() => analytics.event.ui.link(reportBugUrl)}\n            >\n              Report a bug\n            </FooterLink>\n          </Typography>\n        </Typography>\n      </FooterInner>\n    </FooterRoot>\n  );\n};\n\nexport default React.memo(Footer);\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as colors from '@material-ui/core/colors';\n\ntype Props = {\n  id: string;\n  name: string;\n  releaseDate: string;\n  gamesCount: number;\n  checked: boolean;\n  onNameClick: (id: string) => void;\n  onCheckboxClick: (id: string) => void;\n};\n\nconst Platform = ({\n  id,\n  name,\n  gamesCount,\n  checked,\n  onNameClick,\n  onCheckboxClick,\n}: Props) => (\n  <ListItem\n    key={id}\n    button\n    selected={checked}\n    style={{ padding: '0 12px', alignItems: 'stretch' }}\n  >\n    <Checkbox\n      edge=\"start\"\n      color=\"default\"\n      checked={checked}\n      style={{ padding: 4 }}\n      onChange={() => onCheckboxClick(id)}\n    />\n    <ListItemText\n      id={id}\n      primary={name}\n      primaryTypographyProps={{ style: { fontWeight: 'bold' } }}\n      style={{ margin: 0, display: 'flex', alignItems: 'center' }}\n      secondary={`(${gamesCount} games)`}\n      secondaryTypographyProps={{\n        style: { display: 'inline', marginLeft: 4, color: colors.grey[500] },\n      }}\n      onClick={() => onNameClick(id)}\n    />\n  </ListItem>\n);\n\nexport default React.memo(Platform);\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from 'app/rootReducer';\nimport { AppDispatch } from 'app/store';\nimport {\n  numberOfGamesSelector,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { getRandomGames } from 'features/rollGame/rollGameUtils';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\n\ninterface RollGameState {\n  isRolling: boolean;\n  gameIndex: number | null;\n  rolledGames: RolledGame[];\n}\n\nconst initialState: RollGameState = {\n  isRolling: false,\n  gameIndex: null,\n  rolledGames: [],\n};\n\nconst rollGame = createSlice({\n  name: 'rollGame',\n  initialState,\n  reducers: {\n    updateRolledGamesThunk: (\n      state,\n      { payload }: PayloadAction<RolledGame[]>,\n    ) => {\n      state.rolledGames = payload;\n    },\n    rollGameStart: (state) => {\n      state.isRolling = true;\n      state.gameIndex = null;\n    },\n    rollGameComplete: (state, { payload }: PayloadAction<number>) => {\n      state.isRolling = false;\n      state.gameIndex = payload;\n    },\n  },\n});\n\nexport const { rollGameStart, rollGameComplete } = rollGame.actions;\n\nconst { updateRolledGamesThunk } = rollGame.actions;\n\nexport default rollGame.reducer;\n\n// selectors\nexport const isRollingSelector = (state: RootState) => state.rollGame.isRolling;\n\nexport const rolledGamesSelector = (state: RootState) =>\n  state.rollGame.rolledGames;\n\nexport const rolledGameIndexSelector = (state: RootState) =>\n  state.rollGame.gameIndex;\n\nexport const rolledGameSelector = (state: RootState) => {\n  if (state.rollGame.gameIndex === null) return null;\n\n  return state.rollGame.rolledGames[state.rollGame.gameIndex];\n};\n\n// actions\nexport const updateRolledGames = () => (\n  dispatch: AppDispatch,\n  getState: () => RootState,\n) => {\n  const state = getState();\n\n  const numberOfGames = numberOfGamesSelector(state);\n  const selectedPlatformIds = selectedPlatformIdsSelector(state);\n\n  const rolledGames = getRandomGames(selectedPlatformIds, numberOfGames);\n\n  dispatch(updateRolledGamesThunk(rolledGames));\n};\n","import React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport Scrollbar from 'react-scrollbars-custom';\nimport { useWindowSize } from 'react-use';\nimport { Typography, List, Button, Box, ListItem } from '@material-ui/core';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n\nimport analytics from 'utils/analytics';\nimport { BREAKPOINTS } from 'utils/constants';\nimport Platform from 'features/platforms/Platform';\nimport {\n  selectPlatform,\n  togglePlatform,\n  updateOption,\n  selectedPlatformIdsSelector,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst PlatformsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\nconst PlatformsList = styled.div<{ isDisabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\nconst Platforms = () => {\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(true);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  const windowSize = useWindowSize();\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.platforms(!isVisible);\n  };\n\n  const handleNameClick = useCallback(\n    (id: string) => {\n      dispatch(selectPlatform(id));\n      analytics.event.platforms.platformNameClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleCheckboxClick = useCallback(\n    (id: string) => {\n      dispatch(togglePlatform(id));\n      analytics.event.platforms.platformCheckboxClick(id);\n    },\n    [dispatch],\n  );\n\n  const handleSelectAll = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: platforms.map(({ id }) => id),\n      }),\n    );\n    analytics.event.platforms.selectAll();\n  };\n\n  const handleSelectNone = () => {\n    dispatch(\n      updateOption({\n        name: 'selectedPlatformIds',\n        value: [],\n      }),\n    );\n    analytics.event.platforms.selectNone();\n  };\n\n  const renderPlatformsList = () => (\n    <PlatformsList isDisabled={isRolling}>\n      <Box component=\"span\" mb={1} style={{ marginLeft: 1 }}>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxIcon style={{ width: 24, height: 24 }} color=\"inherit\" />\n          }\n          onClick={handleSelectAll}\n        >\n          Select All\n        </Button>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxOutlineBlankIcon\n              style={{ width: 24, height: 24 }}\n              color=\"inherit\"\n            />\n          }\n          onClick={handleSelectNone}\n        >\n          Select None\n        </Button>\n      </Box>\n      <Scrollbar\n        style={{ flexGrow: 1 }}\n        native={windowSize.width < BREAKPOINTS.lg}\n      >\n        <List dense disablePadding>\n          {platforms.map(({ id, name, releaseDate, gamesCount }) => (\n            <Platform\n              key={id}\n              id={id}\n              name={name}\n              releaseDate={releaseDate}\n              gamesCount={gamesCount}\n              checked={selectedPlatformIds.includes(id)}\n              onNameClick={handleNameClick}\n              onCheckboxClick={handleCheckboxClick}\n            />\n          ))}\n        </List>\n      </Scrollbar>\n    </PlatformsList>\n  );\n\n  const renderCompactPlatformsList = () => (\n    <Scrollbar native={windowSize.width < BREAKPOINTS.lg}>\n      <List>\n        {platforms\n          .filter(({ id }) => selectedPlatformIds.includes(id))\n          .map(({ id, name }) => (\n            <ListItem key={id} style={{ padding: 0, marginBottom: 8 }}>\n              {name}\n            </ListItem>\n          ))}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <PlatformsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Platforms</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Change'}\n        </Button>\n      </Box>\n\n      {isVisible ? renderPlatformsList() : renderCompactPlatformsList()}\n    </PlatformsRoot>\n  );\n};\n\nexport default Platforms;\n","import { Slider, withStyles } from '@material-ui/core';\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nexport default PrettoSlider;\n","const secondsToSpinMarks = [...Array(6)].map((_, i) => ({\n  value: (i + 1) * 10,\n  label: (i + 1) * 10,\n}));\n\nconst speedMarks = [...Array(5)].map((_, i) => ({\n  value: i + 1,\n  label: i + 1,\n}));\n\nconst numberOfGamesMarks = [2, 4, 6, 8, 10, 12, 14, 16].map((n) => ({\n  value: n,\n  label: n,\n}));\n\nconst options = [\n  {\n    id: 'secondsToSpin',\n    title: 'Seconds to Spin',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 10,\n      max: 60,\n      marks: secondsToSpinMarks,\n    },\n  },\n  {\n    id: 'speed',\n    title: 'Speed',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 1,\n      max: 5,\n      marks: speedMarks,\n    },\n  },\n  {\n    id: 'numberOfGames',\n    title: 'Number of Games',\n    component: {\n      type: 'slider',\n      step: 1,\n      min: 2,\n      max: 16,\n      marks: numberOfGamesMarks,\n    },\n  },\n];\n\nexport default options;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport debounce from 'debounce';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box, Mark } from '@material-ui/core';\n\nimport analytics from 'utils/analytics';\nimport PrettoSlider from 'components/PrettoSlider';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n  numberOfGamesSelector,\n  updateOption,\n  OptionName,\n} from 'features/options/optionsSlice';\nimport { isRollingSelector } from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/options.mock';\n\nconst OptionsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst OptionsList = styled.div<{ isDisabled: boolean }>`\n  transition-property: opacity;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  ${(p) =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\ntype OptionSlider = {\n  type: 'slider';\n  step: number;\n  min: number;\n  max: number;\n  marks: Mark[];\n};\ntype Option = {\n  id: OptionName;\n  title: string;\n  component: OptionSlider; // and maybe something else in the future\n};\n\nconst Options = () => {\n  const dispatch = useDispatch();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const isRolling = useSelector(isRollingSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const speed = useSelector(speedSelector);\n  const numberOfGames = useSelector(numberOfGamesSelector);\n\n  const values: Record<string, number> = {\n    secondsToSpin,\n    speed,\n    numberOfGames,\n  };\n\n  const handleToggleIsVisible = () => {\n    setIsVisible(!isVisible);\n    analytics.event.ui.options(!isVisible);\n  };\n\n  const handleOptionChange = (name: OptionName) =>\n    debounce((event: any, value: number | number[]) => {\n      dispatch(updateOption({ name, value }));\n      analytics.event.ui.changeOption(name, (value as unknown) as number);\n    }, 500);\n\n  const renderSlider = (\n    { step, min, max, marks }: OptionSlider,\n    value: number,\n    onChange: (event: any, value: number | number[]) => void,\n  ) => (\n    <PrettoSlider\n      defaultValue={value}\n      step={step}\n      min={min}\n      max={max}\n      marks={marks}\n      valueLabelDisplay=\"auto\"\n      onChange={onChange}\n    />\n  );\n\n  const renderOption = ({ id, title, component }: Option) => (\n    <React.Fragment key={id}>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {title}\n      </Typography>\n      {renderSlider(component, values[id], handleOptionChange(id))}\n    </React.Fragment>\n  );\n\n  const renderOptions = () => (\n    <OptionsList isDisabled={isRolling}>\n      {(options as Option[]).map(renderOption)}\n    </OptionsList>\n  );\n\n  return (\n    <OptionsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Options</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={handleToggleIsVisible}\n        >\n          {isVisible ? 'Hide' : 'Show'}\n        </Button>\n      </Box>\n\n      {isVisible && renderOptions()}\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, Box } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nimport analytics from 'utils/analytics';\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\n\nconst GameLinksRoot = styled.div``;\nconst ServiceLink = styled(Button)<{ target?: string; rel?: string }>`\n  width: 100%;\n  text-transform: none !important;\n\n  .MuiButton-label {\n    justify-content: flex-start;\n  }\n`;\nconst Links = styled.div`\n  display: grid;\n  grid-gap: 16px 16px;\n`;\n\nconst getLinks = (name: string) => {\n  const searchQuery = encodeURI(name);\n\n  return [\n    {\n      id: 'youtube',\n      text: 'YouTube',\n      href: `//www.youtube.com/results?search_query=${searchQuery}`,\n      icon: <YouTubeIcon />,\n    },\n    {\n      id: 'gamefaqs',\n      text: 'GameFAQs',\n      href: `//gamefaqs.gamespot.com/search?game=${searchQuery}`,\n    },\n    {\n      id: 'metacritic',\n      text: 'Metacritic',\n      href: `//www.metacritic.com/search/all/${searchQuery}/results`,\n    },\n    {\n      id: 'hltb',\n      text: 'How Long To Beat',\n      href: `https://www.google.com/search?q=${searchQuery}%20site%3Ahowlongtobeat.com`,\n    },\n    {\n      id: 'gamerankings',\n      text: 'GameRankings',\n      href: `https://www.gamerankings.com/search.html?search=${searchQuery}&site=`,\n    },\n    {\n      id: 'emuparadise',\n      text: 'EmuParadise',\n      href: `//www.emuparadise.me/roms/search.php?query=${searchQuery}&section=all`,\n    },\n    {\n      id: 'coolrom',\n      text: 'CoolROM',\n      href: `//coolrom.com.au/search?q=${searchQuery}`,\n    },\n    {\n      id: 'romhustler',\n      text: 'RomHustler',\n      href: `//romhustler.org/roms/search/?q=${searchQuery}`,\n    },\n  ];\n};\n\nconst GameLinks = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  if (isRolling || !rolledGame) return null;\n\n  const links = getLinks(rolledGame.name);\n\n  return (\n    <GameLinksRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Links</Typography>\n      </Box>\n\n      <Links>\n        {links.map(({ id, text, href, icon }) => (\n          <ServiceLink\n            key={id}\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={icon || <SearchIcon />}\n            size=\"medium\"\n            href={href}\n            target=\"_blank\"\n            rel=\"noreferrer noopener\"\n            onClick={() => analytics.event.searchLink(id)}\n          >\n            <Typography variant=\"inherit\" color=\"textSecondary\">\n              Search on{' '}\n              <Typography variant=\"inherit\" color=\"textPrimary\">\n                {text}\n              </Typography>\n            </Typography>\n          </ServiceLink>\n        ))}\n      </Links>\n    </GameLinksRoot>\n  );\n};\n\nexport default GameLinks;\n","import { easeExpOut, easeExpInOut, easeCircleInOut } from 'd3-ease';\n\nconst f1 = easeExpOut;\nconst f2 = easeExpInOut;\nconst f3 = easeCircleInOut;\n\nconst breakpointX1 = 0.2;\nconst breakpointX2 = 0.4;\nconst breakpointY1 = 0.2;\n\nconst timingFunction = (n: number) => {\n  // f1: (x: [0, bx1)) => y: [0, 1);\n  if (n < breakpointX1) {\n    const x = n * (1 / breakpointX1);\n    return f1(x);\n  }\n\n  // f2: (x: [bx1, bx2)) => y: [1, by1);\n  if (n < breakpointX2) {\n    const x = (n - breakpointX1) * (1 / (breakpointX2 - breakpointX1));\n    const y = f2(1 - x) * (1 - breakpointY1) + breakpointY1;\n\n    return y;\n  }\n\n  // f3: (x: [bx2, 1)) => y: [by1, 0);\n  const x = (n - breakpointX2) * (1 / (1 - breakpointX2));\n  const y = f3(1 - x) * breakpointY1;\n\n  return y;\n};\n\nexport default timingFunction;\n","let canvas: HTMLCanvasElement | null = null;\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nconst getTextWidth = (text: string, font: string) => {\n  if (!canvas) canvas = document.createElement(\"canvas\");\n\n  const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  context.font = font;\n\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n};\n\nexport default getTextWidth;\n","import getTextWidth from 'features/wheel/getTextWidth';\n\nconst sliceTextByMaxWidth = (text: string, font: string, maxWidth: number) => {\n  const width = getTextWidth(text, font);\n\n  if (width < maxWidth) return text;\n\n  let beginCursor = 0;\n  let endCursor = text.length;\n  let cursor = Math.floor(text.length / 2);\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const textSlice = `${text.slice(0, cursor)}...`;\n\n    const w = getTextWidth(textSlice, font);\n\n    if (w > maxWidth) {\n      endCursor = cursor;\n    } else {\n      beginCursor = cursor;\n    }\n\n    // middle between the beginCursor and the endCursor\n    cursor = beginCursor + Math.floor((endCursor - beginCursor) / 2);\n\n    if (beginCursor === cursor) return textSlice;\n  }\n};\n\nexport default sliceTextByMaxWidth;\n","/* eslint-disable no-param-reassign */\nimport { DrawState } from 'features/wheel/useDrawWheel';\n\nconst LINE_WIDTH = 4;\n\nconst meanAngleDeg = (angle1: number, angle2: number) =>\n  Math.atan2(\n    (Math.sin(angle1) + Math.sin(angle2)) / 2,\n    (Math.cos(angle1) + Math.cos(angle2)) / 2,\n  );\n\nconst getX = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.sin(angle);\n\nconst getY = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.cos(angle);\n\nconst drawCircle = ({\n  context,\n  segments,\n  radius,\n  rotationAngle,\n  segmentAngle,\n  textFont,\n  wheelColors,\n  scale,\n}: DrawState) => {\n  if (!context) return;\n\n  const size = radius * 2;\n  const textOffset = (20 / 200) * radius;\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.scale(scale, scale);\n  context.clearRect(0, 0, size, size);\n\n  context.translate(radius, radius);\n  context.rotate(rotationAngle);\n  context.translate(-radius, -radius);\n\n  context.arc(radius, radius, radius, 0, 2 * Math.PI);\n  context.fillStyle = wheelColors.wheelBackground;\n  context.fill();\n\n  segments.forEach((segment, i) => {\n    const from = i * segmentAngle;\n    const to = (i + 1) * segmentAngle;\n\n    context.beginPath();\n    context.arc(radius, radius, radius - LINE_WIDTH / 2, from, to);\n    context.lineTo(radius, radius);\n    context.strokeStyle = wheelColors.border;\n    context.lineWidth = LINE_WIDTH;\n    context.stroke();\n\n    const meanAngle = meanAngleDeg(from, to);\n    const textAngleRotation = meanAngle + Math.PI;\n    const textAngle = -(meanAngle + 1.5 * Math.PI);\n    const textX = getX(radius, radius - textOffset, textAngle);\n    const textY = getY(radius, radius - textOffset, textAngle);\n\n    context.save();\n    context.translate(textX, textY);\n    context.rotate(textAngleRotation);\n    context.beginPath();\n    context.font = textFont;\n    context.fillStyle = wheelColors.text;\n    context.fillText(segment.name, 0, 4);\n    context.restore();\n  });\n\n  context.scale(scale, scale);\n};\n\nexport default drawCircle;\n","import { useEffect, useRef, useCallback } from 'react';\n\nconst initializeIsActive = (count: number) =>\n  Array.from({ length: count }, () => false);\n\nconst useSoundsList = (elems: HTMLAudioElement[]) => {\n  const soundsRef = useRef(elems);\n  const isActiveRef = useRef<boolean[]>();\n\n  if (!isActiveRef.current) {\n    isActiveRef.current = initializeIsActive(elems.length);\n  }\n\n  const sounds = soundsRef.current;\n  const isActive = isActiveRef.current;\n\n  useEffect(() => {\n    const clearFunctions = sounds.map((audio, index) => {\n      const handleEnded = () => {\n        isActive[index] = false;\n      };\n\n      audio.addEventListener('ended', handleEnded);\n\n      return () => audio.removeEventListener('ended', handleEnded);\n    });\n\n    return () => clearFunctions.forEach((func) => func());\n  }, [sounds, isActive]);\n\n  const play = useCallback(() => {\n    for (let i = 0; i < sounds.length; i += 1) {\n      if (!isActive[i]) {\n        sounds[i].play();\n        isActive[i] = true;\n\n        return;\n      }\n    }\n  }, [sounds, isActive]);\n\n  return play;\n};\n\nexport default useSoundsList;\n","import { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport timingFunction from 'utils/timingFunction';\nimport { GLOBAL_FONT } from 'utils/constants';\nimport sliceTextByMaxWidth from 'features/wheel/sliceTextByMaxWidth';\nimport drawWheel from 'features/wheel/drawWheel';\nimport {\n  isRollingSelector,\n  rolledGamesSelector,\n} from 'features/rollGame/rollGameSlice';\nimport { RolledGame } from 'features/rollGame/rollGameTypes';\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n} from 'features/options/optionsSlice';\nimport useSoundsList from 'features/wheel/useSoundsList';\nimport { WheelColors } from 'features/wheel/WheelCanvas';\n\nconst wheelSoundTicks = [\n  document.getElementById('wheel-sound-tick-1'),\n  document.getElementById('wheel-sound-tick-2'),\n  document.getElementById('wheel-sound-tick-3'),\n] as HTMLAudioElement[];\n\nconst wheelSoundComplete = document.getElementById(\n  'wheel-sound-complete',\n) as HTMLAudioElement;\n\ntype OnRollComplete = (id: number) => void;\n\ntype Options = {\n  radius: number;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  wheelColors: WheelColors;\n  onRollComplete: OnRollComplete;\n};\n\nexport type DrawState = {\n  context: CanvasRenderingContext2D | null | undefined;\n  segments: RolledGame[];\n  radius: number;\n  wheelColors: WheelColors;\n  textFont: string;\n  // full canvas rotation angle\n  rotationAngle: number;\n  segmentAngle: number;\n  scale: number;\n};\n\ntype State = {\n  // requestAnimationFrame id\n  requestId: number | null;\n  // previous time in the animate function\n  prevTime: number | null;\n  // time from the start of the animation\n  fullTime: number;\n  // current segment\n  currentIndex: number;\n  secondsToSpin: number;\n  speed: number;\n  start: Function;\n  stop: Function;\n  onRollComplete: OnRollComplete;\n};\n\nconst normalizeSegments = (\n  segments: RolledGame[],\n  textFont: string,\n  maxTextWidth: number,\n): RolledGame[] =>\n  segments.map(({ name, ...rest }) => ({\n    name: sliceTextByMaxWidth(name, textFont, maxTextWidth),\n    ...rest,\n  }));\n\nconst getGameIndexByAngle = ({ rotationAngle, segmentAngle }: DrawState) => {\n  const normalizedAngle =\n    Math.abs((rotationAngle % (Math.PI * 2)) - Math.PI * 2) + Math.PI;\n\n  return Math.floor((normalizedAngle % (Math.PI * 2)) / segmentAngle);\n};\n\nconst getDevicePixelRatio = () => window.devicePixelRatio || 1;\n\nconst getTextFont = (radius: number) =>\n  `${(12 / 200) * radius}px ${GLOBAL_FONT}`;\n\nconst getSegmentAngle = (segmentsCount: number) =>\n  (2 * Math.PI) / segmentsCount;\n\nconst getInitialState = (\n  secondsToSpin: number,\n  speed: number,\n  onRollComplete: OnRollComplete,\n): State => ({\n  requestId: null,\n  prevTime: null,\n  fullTime: 0,\n  currentIndex: 0,\n  secondsToSpin,\n  speed,\n  start: () => null,\n  stop: () => null,\n  onRollComplete,\n});\n\nconst getInitialDrawState = (\n  segments: RolledGame[],\n  wheelColors: WheelColors,\n  radius: number,\n): DrawState => ({\n  context: null,\n  segments,\n  radius,\n  wheelColors,\n  textFont: getTextFont(radius),\n  rotationAngle: 0,\n  segmentAngle: getSegmentAngle(segments.length),\n  scale: getDevicePixelRatio(),\n});\n\nconst useDrawCircle = ({\n  radius,\n  canvasRef,\n  wheelColors,\n  onRollComplete,\n}: Options) => {\n  const isRolling = useSelector(isRollingSelector);\n  const speed = useSelector(speedSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const rolledGames = useSelector(rolledGamesSelector);\n\n  const playTick = useSoundsList(wheelSoundTicks);\n\n  const stateRef = useRef<State>();\n  const drawStateRef = useRef<DrawState>();\n\n  // initialize state\n  if (!stateRef.current) {\n    stateRef.current = getInitialState(secondsToSpin, speed, onRollComplete);\n  }\n\n  // initialize draw state\n  if (!drawStateRef.current) {\n    drawStateRef.current = getInitialDrawState(\n      rolledGames,\n      wheelColors,\n      radius,\n    );\n  }\n\n  // this object links never changes\n  const state = stateRef.current;\n  const drawState = drawStateRef.current;\n\n  useEffect(() => {\n    drawState.context = canvasRef.current?.getContext('2d');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [drawState, canvasRef, canvasRef.current]);\n\n  useEffect(() => {\n    const textMaxWidth = (135 / 200) * drawState.radius;\n\n    drawState.segments = normalizeSegments(\n      rolledGames,\n      drawState.textFont,\n      textMaxWidth,\n    );\n    drawState.segmentAngle = getSegmentAngle(rolledGames.length);\n\n    if (state.requestId === null) {\n      window.requestAnimationFrame(() => drawWheel(drawState));\n    }\n  }, [state, drawState, rolledGames]);\n\n  useEffect(() => {\n    drawState.wheelColors = wheelColors;\n    drawState.radius = radius;\n    drawState.textFont = getTextFont(radius);\n\n    if (state.requestId === null) {\n      window.requestAnimationFrame(() => drawWheel(drawState));\n    }\n  }, [state, drawState, wheelColors, radius]);\n\n  useEffect(() => {\n    state.speed = speed;\n    state.secondsToSpin = secondsToSpin;\n    state.onRollComplete = onRollComplete;\n  }, [state, speed, secondsToSpin, onRollComplete]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      drawState.scale = getDevicePixelRatio();\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [drawState]);\n\n  // TODO: optimize this effect\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    /* eslint-disable no-param-reassign */\n    canvasRef.current.width = radius * 2 * drawState.scale;\n    canvasRef.current.height = radius * 2 * drawState.scale;\n    /* eslint-enable no-param-reassign */\n\n    if (state.requestId === null) {\n      window.requestAnimationFrame(() => drawWheel(drawState));\n    }\n  }, [canvasRef, state, drawState, drawState.scale, radius]);\n\n  useEffect(() => {\n    const stop = () => {\n      if (!state.requestId) return;\n\n      window.cancelAnimationFrame(state.requestId);\n      state.requestId = null;\n    };\n\n    const animate = (time: number) => {\n      // first draw\n      if (state.prevTime === null) {\n        state.currentIndex = getGameIndexByAngle(drawState);\n        state.prevTime = time;\n      }\n\n      const deltaTime = time - state.prevTime;\n\n      state.prevTime = time;\n      state.fullTime += deltaTime;\n\n      if (state.fullTime > state.secondsToSpin * 1000) {\n        state.onRollComplete(state.currentIndex);\n        wheelSoundComplete.play();\n        stop();\n\n        return;\n      }\n\n      const currentIndex = getGameIndexByAngle(drawState);\n\n      if (state.currentIndex !== currentIndex) {\n        playTick();\n        state.currentIndex = currentIndex;\n      }\n\n      // NOTE: in \"variableI\" letter \"I\" means UnitInterval - [0, 1)\n\n      const timeI = state.fullTime / (state.secondsToSpin * 1000);\n      const speedI = timingFunction(timeI);\n      const deltaAngle = ((2 * Math.PI) / 360) * speedI * state.speed;\n\n      drawState.rotationAngle += deltaAngle;\n\n      drawWheel(drawState);\n\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      if (drawState.context) {\n        // reset transform\n        drawState.context.setTransform(1, 0, 0, 1, 0, 0);\n      }\n\n      drawState.rotationAngle = 0;\n      state.currentIndex = 0;\n      state.prevTime = null;\n      state.fullTime = 0;\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    state.start = start;\n    state.stop = stop;\n\n    // eslint-disable-next-line consistent-return\n    return () => stop();\n  }, [state, drawState, playTick]);\n\n  useEffect(() => {\n    if (isRolling) {\n      state.start();\n    }\n  }, [state, isRolling]);\n};\n\nexport default useDrawCircle;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  strokeWidth: 4,\n  d: \"M2 3v26l26-13z\"\n});\n\nconst SvgArrowRight = (_ref) => {\n  let {\n    svgRef,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = React.forwardRef((props, ref) => React.createElement(SvgArrowRight, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/arrow-right.8823db83.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWindowSize } from 'react-use';\n\nimport analytics from 'utils/analytics';\nimport { BREAKPOINTS } from 'utils/constants';\nimport {\n  rollGameComplete,\n  rollGameStart,\n  updateRolledGames,\n  isRollingSelector,\n} from 'features/rollGame/rollGameSlice';\nimport useDrawWheel from 'features/wheel/useDrawWheel';\nimport {\n  selectedPlatformIdsSelector,\n  currentThemeSelector,\n} from 'features/options/optionsSlice';\nimport { AppTheme } from 'features/options/optionsTypes';\n\nimport { ReactComponent as ArrowRightSvg } from 'icons/arrow-right.svg';\n\ntype CircleCanvasRootProps = {\n  width: number;\n  height: number;\n};\nconst CircleCanvasRoot = styled.div<CircleCanvasRootProps>`\n  position: relative;\n  align-self: center;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\nconst Canvas = styled.canvas`\n  display: block;\n  width: ${(p) => p.width}px;\n  height: ${(p) => p.height}px;\n`;\ntype RollButtonProps = {\n  radius: number;\n  bgColor: string;\n  textColor: string;\n  borderColor: string;\n};\nconst RollButton = styled.button<RollButtonProps>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0;\n  padding: 0;\n  width: ${(p) => (60 / 200) * p.radius}px;\n  height: ${(p) => (60 / 200) * p.radius}px;\n  color: ${(p) => p.textColor};\n  background-color: ${(p) => p.bgColor};\n  border: 4px solid ${(p) => p.borderColor};\n  border-radius: 50%;\n  font-size: ${(p) => (14 / 200) * p.radius}px;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  transform: translate(-50%, -50%);\n  transition-property: color;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  &[disabled] {\n    color: transparent;\n    pointer-events: none;\n  }\n`;\ntype ArrowRightIconProps = {\n  bgColor: string;\n  borderColor: string;\n};\n// TODO: remove this after styled-components fix this\n/* eslint-disable react/jsx-props-no-spreading, @typescript-eslint/no-unused-vars */\nconst ArrowRightSvgFiltered = ({ bgColor, borderColor, ...rest }: any) => (\n  <ArrowRightSvg {...rest} />\n);\nconst ArrowRightIcon = styled(ArrowRightSvgFiltered)<ArrowRightIconProps>`\n  position: absolute;\n  top: 50%;\n  left: 1px;\n  width: 32px;\n  height: 32px;\n  transform: translateY(-50%);\n  fill: ${(p) => p.bgColor};\n  stroke: ${(p) => p.borderColor};\n`;\n\nexport type WheelColors = {\n  wheelBackground: string;\n  buttonBackground: string;\n  text: string;\n  border: string;\n};\n\nconst wheelThemes: Record<AppTheme, WheelColors> = {\n  dark: {\n    wheelBackground: '#212121',\n    buttonBackground: '#424242',\n    text: '#fff',\n    border: '#fff',\n  },\n  light: {\n    wheelBackground: '#fff',\n    buttonBackground: '#fff',\n    text: 'rgba(0, 0, 0, 0.87)',\n    border: '#424242',\n  },\n};\n\nconst CircleCanvas = () => {\n  const dispatch = useDispatch();\n  const [radius, setRadius] = useState(300);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n  const windowSize = useWindowSize();\n  const currentTheme = useSelector(currentThemeSelector);\n  const [wheelColors, setWheelColors] = useState(wheelThemes[currentTheme]);\n\n  useEffect(() => {\n    setWheelColors(wheelThemes[currentTheme]);\n  }, [currentTheme, setWheelColors]);\n\n  const size = radius * 2;\n\n  const isRollButtonDisabled = isRolling || !selectedPlatformIds.length;\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (windowSize.width < BREAKPOINTS.sm) {\n        setRadius(140);\n      } else if (windowSize.width < BREAKPOINTS.xl) {\n        setRadius(200);\n      } else {\n        setRadius(300);\n      }\n    };\n\n    handleResize();\n  }, [setRadius, windowSize.width]);\n\n  const handleRollStart = () => {\n    dispatch(updateRolledGames());\n    dispatch(rollGameStart());\n    analytics.event.rollGame.start();\n  };\n\n  const handleRollComplete = (id: number) => {\n    dispatch(rollGameComplete(id));\n    analytics.event.rollGame.complete();\n  };\n\n  useDrawWheel({\n    canvasRef,\n    radius,\n    wheelColors,\n    onRollComplete: handleRollComplete,\n  });\n\n  return (\n    <CircleCanvasRoot width={size} height={size}>\n      <Canvas width={size} height={size} ref={canvasRef} />\n      <RollButton\n        disabled={isRollButtonDisabled}\n        radius={radius}\n        bgColor={wheelColors.buttonBackground}\n        borderColor={wheelColors.border}\n        textColor={wheelColors.text}\n        onClick={handleRollStart}\n      >\n        Roll\n      </RollButton>\n      <ArrowRightIcon\n        bgColor={wheelColors.wheelBackground}\n        borderColor={wheelColors.border}\n      />\n    </CircleCanvasRoot>\n  );\n};\n\nexport default CircleCanvas;\n","const replaceSpacesWithNbsp = (text: string) => text.replace(/ /g, '&nbsp;');\n\nexport default replaceSpacesWithNbsp;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport * as R from 'ramda';\nimport { Typography } from '@material-ui/core';\n\nimport replaceSpacesWithNbsp from 'utils/replaceSpacesWithNbsp';\nimport { selectedPlatformIdsSelector } from 'features/options/optionsSlice';\n\nimport platforms from 'data/platforms.json';\n\nconst SelectedPlatformsMessage = () => {\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  if (!selectedPlatformIds.length) {\n    return (\n      <Typography variant=\"h6\">Please choose one or more platfotms</Typography>\n    );\n  }\n\n  const selectedPlatformsText = (\n    <>Selected&nbsp;platform{selectedPlatformIds.length === 1 ? '' : 's'}: </>\n  );\n\n  const renderSelectedPlatformsList = () => {\n    if (selectedPlatformIds.length === platforms.length) {\n      return (\n        <Typography variant=\"inherit\" color=\"textPrimary\">\n          All\n        </Typography>\n      );\n    }\n\n    const selectedPlatforms = selectedPlatformIds\n      .slice(0, 3)\n      .map((id) => platforms.find(R.propEq('id', id))) as typeof platforms;\n\n    const selectedPlatformsList = selectedPlatforms.map(\n      ({ id, name }, index) => (\n        <React.Fragment key={id}>\n          <Typography\n            variant=\"inherit\"\n            color=\"textPrimary\"\n            dangerouslySetInnerHTML={{\n              __html: replaceSpacesWithNbsp(name),\n            }}\n          />\n          {selectedPlatforms.length - 1 !== index && ', '}\n        </React.Fragment>\n      ),\n    );\n\n    const renderPlatformsMoreText = () => (\n      <>\n        {' and'}&nbsp;\n        <Typography variant=\"inherit\" color=\"textPrimary\">\n          {selectedPlatformIds.length - 3}\n        </Typography>\n        &nbsp;more\n      </>\n    );\n\n    return (\n      <>\n        {selectedPlatformsList}\n        {selectedPlatformIds.length > 3 && renderPlatformsMoreText()}\n      </>\n    );\n  };\n\n  return (\n    <Typography variant=\"h6\" color=\"textSecondary\">\n      {selectedPlatformsText}\n      {renderSelectedPlatformsList()}\n    </Typography>\n  );\n};\n\nexport default SelectedPlatformsMessage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { Typography } from '@material-ui/core';\n\nimport {\n  isRollingSelector,\n  rolledGameSelector,\n} from 'features/rollGame/rollGameSlice';\nimport SelectedPlatformsMessage from 'features/rollGame/SelectedPlatformsMessage';\n\nconst ResultRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n  text-align: center;\n`;\n\nconst Result = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  const renderRolledGame = () => {\n    if (!rolledGame) return null;\n\n    const { name, platform } = rolledGame;\n\n    return (\n      <>\n        <Typography\n          variant=\"h4\"\n          style={{ marginBottom: 8, textAlign: 'center' }}\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"h6\" color=\"textSecondary\">\n          Platform:{' '}\n          <Typography variant=\"inherit\" color=\"textPrimary\">\n            {platform}\n          </Typography>\n        </Typography>\n      </>\n    );\n  };\n\n  return (\n    <ResultRoot>\n      {isRolling || !rolledGame ? (\n        <SelectedPlatformsMessage />\n      ) : (\n        renderRolledGame()\n      )}\n    </ResultRoot>\n  );\n};\n\nexport default Result;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\n\nimport WheelCanvas from 'features/wheel/WheelCanvas';\nimport Result from 'features/rollGame/Result';\nimport { updateRolledGames } from 'features/rollGame/rollGameSlice';\n\nconst RollGameRoot = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst RollGame = ({ className }: Props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateRolledGames());\n  }, [dispatch]);\n\n  return (\n    <RollGameRoot className={className}>\n      <WheelCanvas />\n      <Result />\n    </RollGameRoot>\n  );\n};\n\nexport default RollGame;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider, Box } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeOptions } from '@material-ui/core/styles/createMuiTheme';\nimport * as colors from '@material-ui/core/colors';\n\nimport GlobalStyles from 'styles';\nimport { BREAKPOINTS } from 'utils/constants';\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport Footer from 'components/Footer';\nimport Platforms from 'features/platforms/Platforms';\nimport Options from 'features/options/Options';\nimport GameLinks from 'features/rollGame/GameLinks';\nimport RollGame from 'features/rollGame/RollGame';\nimport { currentThemeSelector } from 'features/options/optionsSlice';\nimport { AppTheme } from 'features/options/optionsTypes';\n\nconst themes: Record<string, ThemeOptions> = {\n  dark: {\n    palette: {\n      type: 'dark',\n      primary: colors.grey,\n      background: {\n        paper: colors.grey[900],\n        default: colors.grey[800],\n      },\n    },\n  },\n  light: {\n    palette: {\n      type: 'light',\n      primary: colors.grey,\n    },\n  },\n};\n\nconst AppRoot = styled(Box)`\n  display: grid;\n  min-height: 100vh;\n  grid-template-rows: 48px 24px auto 24px auto 24px auto 24px 200px;\n  grid-template-columns: 16px auto 16px;\n  grid-template-areas:\n    'header header header'\n    '.      .      .     '\n    '.      main   .     '\n    '.      .      .     '\n    '.      side-r .     '\n    '.      .      .     '\n    '.      side-l .     '\n    '.      .      .     '\n    'footer footer footer';\n\n  @media (min-width: ${BREAKPOINTS.md}px) {\n    grid-template-rows: 48px 24px auto 24px auto 24px 48px;\n    grid-template-columns: 32px 1fr 24px 1fr 32px;\n    grid-template-areas:\n      'header header header header header'\n      '.      .      .      .      .     '\n      '.      main   main   main   .     '\n      '.      .      .      .      .     '\n      '.      side-l .      side-r .     '\n      '.      .      .      .      .     '\n      'footer footer footer footer footer';\n  }\n\n  @media (min-width: ${BREAKPOINTS.lg}px) {\n    grid-template-rows: 48px 16px auto 16px 48px;\n    grid-template-columns: auto 340px 16px 488px 16px 340px auto;\n    grid-template-areas:\n      'header header header header header header header'\n      '.      .      .      .      .      .      .     '\n      '.      side-l .      main   .      side-r .     '\n      '.      .      .      .      .      .      .     '\n      'footer footer footer footer footer footer footer';\n  }\n\n  @media (min-width: ${BREAKPOINTS.xl}px) {\n    grid-template-rows: 64px 40px auto 40px 64px;\n    grid-template-columns: auto 360px 40px 840px 40px 360px auto;\n  }\n`;\nconst StyledHeader = styled(Header)`\n  grid-area: header;\n`;\nconst StyledSidebarLeft = styled(Sidebar)`\n  grid-area: side-l;\n`;\nconst StyledSidebarRight = styled(Sidebar)`\n  grid-area: side-r;\n`;\nconst StyledRollGame = styled(RollGame)`\n  grid-area: main;\n`;\nconst StyledFooter = styled(Footer)`\n  grid-area: footer;\n`;\n\nconst getTheme = (theme: AppTheme) => createMuiTheme(themes[theme]);\n\nconst App: React.FC = () => {\n  const currentTheme = useSelector(currentThemeSelector);\n  const [theme, setTheme] = useState(() => getTheme(currentTheme));\n\n  useEffect(() => {\n    setTheme(getTheme(currentTheme));\n  }, [currentTheme]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppRoot bgcolor=\"background.paper\" color=\"text.primary\">\n        <StyledHeader />\n        <StyledSidebarLeft>\n          <Platforms />\n        </StyledSidebarLeft>\n        <StyledSidebarRight>\n          <Options />\n          <GameLinks />\n        </StyledSidebarRight>\n        <StyledRollGame />\n        <StyledFooter />\n      </AppRoot>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport rollGame from 'features/rollGame/rollGameSlice';\nimport options from 'features/options/optionsSlice';\n\nconst rootReducer = combineReducers({\n  rollGame,\n  options,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from '@reduxjs/toolkit';\nimport { ThunkAction } from 'redux-thunk';\n\nimport rootReducer, { RootState } from 'app/rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport analytics from 'utils/analytics';\nimport App from 'app/App';\nimport store from 'app/store';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV === 'production') {\n  analytics.initialize();\n\n  const page =\n    window.location.pathname + window.location.search + window.location.hash;\n\n  analytics.pageview(page);\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}