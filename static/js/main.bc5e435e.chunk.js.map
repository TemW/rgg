{"version":3,"sources":["utils/constants.ts","styles/common.ts","styles/index.ts","components/Header.tsx","components/Sidebar.tsx","features/rollGame/rollGameUtils.ts","components/Footer.tsx","hooks/useDocumentWidth.ts","features/platforms/Platform.tsx","features/options/optionsUtils.ts","features/options/optionsSlice.ts","features/rollGame/rollGameSlice.ts","features/platforms/Platforms.tsx","features/options/Options.tsx","features/rollGame/GameLinks.tsx","utils/timingFunction.ts","utils/getTextWidth.ts","utils/sliceTextByMaxWidth.ts","features/rollGame/drawCircle.ts","features/rollGame/useDrawCircle.ts","icons/arrow-right.svg","features/rollGame/CircleCanvas.tsx","features/rollGame/SelectedPlatformsMessage.tsx","features/rollGame/Result.tsx","features/rollGame/RollGame.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["GLOBAL_FONT","css","colors","createGlobalStyle","common","HeaderRoot","styled","header","Header","className","Typography","variant","LinksRoot","aside","shuffleArray","arr","map","a","Math","random","sort","b","gamesCount","R","games","FooterRoot","footer","FooterInner","Strong","strong","Footer","Link","href","rel","target","color","useDocumentWidth","useState","window","innerWidth","width","setWidth","useEffect","handleResize","addEventListener","removeEventListener","React","memo","id","name","releaseDate","checked","onNameClick","onCheckboxClick","ListItem","key","button","selected","style","padding","alignItems","Checkbox","edge","onChange","ListItemText","primary","primaryTypographyProps","fontWeight","margin","display","secondary","secondaryTypographyProps","marginLeft","onClick","writeOptionsToLocalStorage","options","localStorage","setItem","JSON","stringify","initialState","selectedPlatformIds","secondsToSpin","speed","numberOfGames","getItem","parse","e","readOptionsFromLocalStorage","createSlice","reducers","updateOption","state","payload","value","selectPlatform","togglePlatform","index","indexOf","splice","push","actions","secondsToSpinSelector","speedSelector","numberOfGamesSelector","selectedPlatformIdsSelector","rollGame","isRolling","gameIndex","rolledGames","updateRolledGamesThunk","rollGameStart","rollGameComplete","isRollingSelector","rolledGamesSelector","rolledGameSelector","updateRolledGames","dispatch","getState","count","gamesByPlatforms","length","platformId","rest","platform","platforms","find","getRandomGames","PlatformsRoot","div","PlatformsList","p","isDisabled","Platforms","useDispatch","isVisible","setIsVisible","useSelector","documentWidth","handleNameClick","useCallback","handleCheckboxClick","handleSelectAll","handleSelectNone","Box","justifyContent","mb","Button","size","prev","component","startIcon","height","flexGrow","native","List","dense","disablePadding","includes","filter","marginBottom","OptionsRoot","OptionsList","PrettoSlider","withStyles","root","thumb","backgroundColor","border","marginTop","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","Options","handleOptionChange","debounce","gutterBottom","defaultValue","step","min","max","marks","Array","_","i","label","valueLabelDisplay","n","GameLinksRoot","ServiceLink","Span","span","GameLinks","rolledGame","links","text","icon","f1","easeExpOut","f2","easeExpInOut","f3","easeCircleInOut","timingFunction","canvas","getTextWidth","font","document","createElement","context","getContext","measureText","sliceTextByMaxWidth","maxWidth","beginCursor","endCursor","cursor","floor","textSlice","slice","drawCircle","segments","radius","textFont","rotateAngle","coeff","PI","textOffset","clearRect","translate","rotate","arc","fillStyle","fill","forEach","segment","from","to","beginPath","LINE_WIDTH","lineTo","strokeStyle","lineWidth","stroke","angle1","angle2","meanAngle","atan2","sin","cos","textAngleRotation","textAngle","textX","offset","angle","getX","textY","getY","save","fillText","restore","requestId","prevTime","incTime","incAngle","scale","useDrawCircle","canvasRef","onRollComplete","stateRef","useRef","maxTextWidth","normalizeSegments","drawFunc","useMemo","current","dpr","devicePixelRatio","console","log","rect","getBoundingClientRect","stop","cancelAnimationFrame","animate","time","deltaTime","segmentIndex","segmentsCount","abs","getGameIndexByAngle","timeI","speedI","requestAnimationFrame","resetTransform","start","_extends","Object","assign","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","strokeWidth","d","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","CircleCanvasRoot","styleWidth","styleHeight","Canvas","RollButton","ArrowRightIcon","ArrowRightSvg","CircleCanvas","setRadius","isRollButtonDisabled","disabled","SelectedPlatformsMessage","selectedPlatforms","Fragment","ResultRoot","Result","textAlign","renderRolledGame","RollGameRoot","main","RollGame","theme","createMuiTheme","palette","type","AppRoot","StyledHeader","StyledSidebarLeft","Sidebar","StyledSidebarRight","StyledRollGame","StyledFooter","App","ThemeProvider","rootReducer","combineReducers","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oxvrBAAaA,EAAc,uC,sNCKZC,kBAAf,IAMmBD,EAEKE,IAAY,M,8ECTrBC,kBAAf,IACIC,G,+LCCJ,IAAMC,EAAaC,IAAOC,OAAV,IAIML,IAAY,MAgBnBM,EARA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAChB,OACE,kBAACJ,EAAD,CAAYI,UAAWA,GACrB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,yB,gLCnBN,IASeC,EATGN,IAAOO,MAAV,K,iICKTC,EAAe,SAACC,GAAD,OACnBA,EACGC,KAAI,SAAAC,GAAC,MAAI,CAACC,KAAKC,SAAUF,MACzBG,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAE,GAAKI,EAAE,MACxBL,KAAI,SAAAC,GAAC,OAAIA,EAAE,OA8BHK,EAAaC,IACxBA,IACAA,IACAA,IAAS,EAAG,UAHYA,CAIxBC,G,ynBCtCF,IAAMC,EAAanB,IAAOoB,OAAV,IAGUxB,IAAY,KACTA,IAAY,MAEnCyB,EAAcrB,YAAOI,IAAPJ,CAAH,IAQNJ,IAAY,MAOjB0B,EAAStB,IAAOuB,OAAV,IAED3B,IAAY,MA8DR4B,EArDA,SAAC,GAA0B,IAAxBrB,EAAuB,EAAvBA,UAChB,OACE,kBAACgB,EAAD,CAAYhB,UAAWA,GACrB,kBAACkB,EAAD,KACE,oDACqB,kBAACC,EAAD,KAASN,IAG9B,wCACU,IACR,kBAACM,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,KAAK,8BACLC,IAAI,sBACJC,OAAO,SACPC,MAAM,WAJR,oBAWJ,iDACmB,IACjB,kBAACP,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,KAAK,wBACLC,IAAI,sBACJC,OAAO,SACPC,MAAM,WAJR,yBAWJ,8BACE,kBAACP,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,KAAK,uCACLC,IAAI,sBACJC,OAAO,SACPC,MAAM,WAJR,qB,kFC7DGC,GAdU,WAAO,IAAD,EACHC,mBAASC,OAAOC,YADb,mBACtBC,EADsB,KACfC,EADe,KAW7B,OARAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAASH,OAAOC,aAI3C,OAFAD,OAAOM,iBAAiB,SAAUD,GAE3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACjD,IAEIH,G,oBC0CMM,OAAMC,MAtCJ,SAAC,GAQJ,IAPZC,EAOW,EAPXA,GACAC,EAMW,EANXA,KAEA3B,GAIW,EALX4B,YAKW,EAJX5B,YACA6B,EAGW,EAHXA,QACAC,EAEW,EAFXA,YACAC,EACW,EADXA,gBAEA,OACE,kBAACC,EAAA,EAAD,CACEC,IAAKP,EACLQ,QAAM,EACNC,SAAUN,EACVO,MAAO,CAAEC,QAAS,SAAUC,WAAY,YAExC,kBAACC,GAAA,EAAD,CACEC,KAAK,QACL3B,MAAM,UACNgB,QAASA,EACTO,MAAO,CAAEC,QAAS,GAClBI,SAAU,kBAAMV,EAAgBL,MAElC,kBAACgB,GAAA,EAAD,CACEhB,GAAIA,EACJiB,QAAShB,EACTiB,uBAAwB,CAAER,MAAO,CAAES,WAAY,SAC/CT,MAAO,CAAEU,OAAQ,EAAGC,QAAS,OAAQT,WAAY,UACjDU,UAAS,WAAMhD,EAAN,WACTiD,yBAA0B,CACxBb,MAAO,CAAEW,QAAS,SAAUG,WAAY,EAAGrC,MAAOjC,IAAY,OAEhEuE,QAAS,kBAAMrB,EAAYJ,U,SC/CtB0B,GAA6B,SAACC,GACzCC,aAAaC,QTDW,aSCSC,KAAKC,UAAUJ,KCiB5CK,GAA0B,aAC9BC,oBAAqB,CAAC,cAAe,iBACrCC,cAAe,GACfC,MAAO,EACPC,cAAe,IDlB0B,WACzC,IAAMT,EAAUC,aAAaS,QTLL,cSOxB,IACE,OAAOP,KAAKQ,MAAMX,GAAW,MAC7B,MAAOY,GACP,MAAO,ICaNC,IAKCb,GAAUc,aAAY,CAC1BxC,KAAM,UACN+B,gBACAU,SAAU,CACRC,aAAc,SAACC,EAAD,GAA4D,IAAlDC,EAAiD,EAAjDA,QACd5C,EAAgB4C,EAAhB5C,KAAM6C,EAAUD,EAAVC,MACdF,EAAM3C,GAAQ6C,EAEdpB,GAA2BkB,IAE7BG,eAAgB,SAACH,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QACxBD,EAAMX,oBAAsB,CAACY,GAE7BnB,GAA2BkB,IAE7BI,eAAgB,SAACJ,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QAClBI,EAAQL,EAAMX,oBAAoBiB,QAAQL,GAE5CI,GAAS,EACXL,EAAMX,oBAAoBkB,OAAOF,EAAO,GAExCL,EAAMX,oBAAoBmB,KAAKP,GAGjCnB,GAA2BkB,O,GAK+BjB,GAAQ0B,QAAzDV,G,GAAAA,aAAcI,G,GAAAA,eAAgBC,G,GAAAA,eAE9BrB,MAAf,QAGa2B,GAAwB,SAACV,GAAD,OACnCA,EAAMjB,QAAQO,eAEHqB,GAAgB,SAACX,GAAD,OAAsBA,EAAMjB,QAAQQ,OAEpDqB,GAAwB,SAACZ,GAAD,OACnCA,EAAMjB,QAAQS,eAEHqB,GAA8B,SAACb,GAAD,OACzCA,EAAMjB,QAAQM,qBClDVyB,GAAWjB,aAAY,CAC3BxC,KAAM,WACN+B,aARkC,CAClC2B,WAAW,EACXC,UAAW,KACXC,YAAa,IAMbnB,SAAU,CACRoB,uBAAwB,SACtBlB,EADsB,GAGlB,IADFC,EACC,EADDA,QAEFD,EAAMiB,YAAchB,GAEtBkB,cAAe,SAAAnB,GACbA,EAAMe,WAAY,EAClBf,EAAMgB,UAAY,MAEpBI,iBAAkB,SAACpB,EAAD,GAAgD,IAAtCC,EAAqC,EAArCA,QAC1BD,EAAMe,WAAY,EAClBf,EAAMgB,UAAYf,M,GAK2Ba,GAASL,QAA7CU,G,GAAAA,cAAeC,G,GAAAA,iBAEtBF,GAA2BJ,GAASL,QAApCS,uBAEOJ,MAAf,QAGaO,GAAoB,SAACrB,GAAD,OAAsBA,EAAMc,SAASC,WAEzDO,GAAsB,SAACtB,GAAD,OACjCA,EAAMc,SAASG,aAKJM,GAAqB,SAACvB,GACjC,OAAKA,EAAMc,SAASE,UAEbhB,EAAMc,SAASG,YAAYjB,EAAMc,SAASE,WAFX,MAM3BQ,GAAoB,kBAAM,SACrCC,EACAC,GAEA,IAAM1B,EAAQ0B,IAERlC,EAAgBoB,GAAsBZ,GAGtCiB,EN9DsB,SAC5B5B,EACAsC,GAEA,IAAMC,EAAmBvC,EAAoBwC,OACzClG,IAAO0D,EAAqBzD,GAC5BA,EAYJ,OAVoBD,IAClBA,IACAA,KAAgB,mCAAEmG,EAAF,KAAclG,EAAd,YACdD,KAAM,SAAA0B,GAAI,MAAK,CAAEyE,aAAYzE,UAASzB,MAExCD,IACAT,EACAS,IAAQ,EAAGgG,GAPOhG,CAQlBiG,GAEiBxG,KAAI,YAAmC,IAAhC0G,EAA+B,EAA/BA,WAAeC,EAAgB,8BACjDC,EAAWC,EAAUC,KAAKvG,IAAS,KAAMmG,IAE/C,OAAO,aACLE,UAAkB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU3E,OAAQ,IACzB0E,MMuCaI,CAFQtB,GAA4Bb,GAEAR,GAExDiC,EAASP,GAAuBD,M,uZCzDlC,IAAMmB,GAAgB1H,IAAO2H,IAAV,MAKbC,GAAgB5H,IAAO2H,IAAV,MAKf,SAAAE,GAAC,OACDA,EAAEC,YACFnI,YADA,SAiIWoI,GA1HG,WAChB,IAAMhB,EAAWiB,cADK,EAEYjG,oBAAS,GAFrB,mBAEfkG,EAFe,KAEJC,EAFI,KAGhB7B,EAAY8B,YAAYxB,IACxBhC,EAAsBwD,YAAYhC,IAElCiC,EAAgBtG,KAEhBuG,EAAkBC,uBACtB,SAAC5F,GAAD,OAAgBqE,EAAStB,GAAe/C,MACxC,CAACqE,IAGGwB,EAAsBD,uBAC1B,SAAC5F,GAAD,OAAgBqE,EAASrB,GAAehD,MACxC,CAACqE,IAGGyB,EAAkB,kBACtBzB,EACE1B,GAAa,CACX1C,KAAM,sBACN6C,MAAO+B,EAAU7G,KAAI,qBAAGgC,UAIxB+F,EAAmB,kBACvB1B,EACE1B,GAAa,CACX1C,KAAM,sBACN6C,MAAO,OAyEb,OACE,kBAACkC,GAAD,KACE,kBAACgB,EAAA,EAAD,CAAK3E,QAAQ,OAAO4E,eAAe,gBAAgBC,GAAI,GACrD,kBAACxI,EAAA,EAAD,CAAYC,QAAQ,MAApB,aACA,kBAACwI,EAAA,EAAD,CACEhH,MAAM,UACNxB,QAAQ,YACRyI,KAAK,QACL3E,QAAS,kBAAM+D,GAAa,SAACa,GAAD,OAAoBA,OAE/Cd,EAAY,OAAS,WAIzBA,EAlFH,kBAACL,GAAD,CAAeE,WAAYzB,GACzB,kBAACqC,EAAA,EAAD,CAAKM,UAAU,OAAOJ,GAAI,EAAGxF,MAAO,CAAEc,WAAY,IAChD,kBAAC2E,EAAA,EAAD,CACEhH,MAAM,UACNiH,KAAK,QACLG,UACE,kBAAC,KAAD,CAAc7F,MAAO,CAAElB,MAAO,GAAIgH,OAAQ,IAAMrH,MAAM,YAExDsC,QAASqE,GANX,cAUA,kBAACK,EAAA,EAAD,CACEhH,MAAM,UACNiH,KAAK,QACLG,UACE,kBAAC,KAAD,CACE7F,MAAO,CAAElB,MAAO,GAAIgH,OAAQ,IAC5BrH,MAAM,YAGVsC,QAASsE,GATX,gBAcF,kBAAC,IAAD,CACErF,MAAO,CAAqC+F,SAAU,GACtDC,OAAQhB,EAAgB,MAExB,kBAACiB,EAAA,EAAD,CAAMC,OAAK,EAACC,gBAAc,GACvBhC,EAAU7G,KAAI,gBAAGgC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAa5B,EAA1B,EAA0BA,WAA1B,OACb,kBAAC,GAAD,CACEiC,IAAKP,EACLA,GAAIA,EACJC,KAAMA,EACNC,YAAaA,EACb5B,WAAYA,EACZ6B,QAAS8B,EAAoB6E,SAAS9G,GACtCI,YAAauF,EACbtF,gBAAiBwF,UAe3B,kBAAC,IAAD,CAAWa,OAAQhB,EAAgB,MACjC,kBAACiB,EAAA,EAAD,KACG9B,EACEkC,QAAO,gBAAG/G,EAAH,EAAGA,GAAH,OAAYiC,EAAoB6E,SAAS9G,MAChDhC,KAAI,gBAAGgC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACH,kBAACK,EAAA,EAAD,CAAUC,IAAKP,EAAIU,MAAO,CAAEC,QAAS,EAAGqG,aAAc,IACnD/G,U,qXCtHf,IAAMgH,GAAc3J,IAAO2H,IAAV,MAIXiC,GAAc5J,IAAO2H,IAAV,MACb,SAAAE,GAAC,OACDA,EAAEC,YACFnI,YADA,SAOEkK,GAAeC,aAAW,CAC9BC,KAAM,CACJlI,MAAOjC,IAAY,KACnBsJ,OAAQ,GAEVc,MAAO,CACLd,OAAQ,GACRhH,MAAO,GACP+H,gBAAiB,OACjBC,OAAQ,yBACRC,WAAY,EACZjG,YAAa,GACb,2BAA4B,CAC1BkG,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLtB,OAAQ,EACRuB,aAAc,GAEhBC,KAAM,CACJxB,OAAQ,EACRuB,aAAc,IA1BGX,CA4BlBa,MA0FYC,GAxFC,WACd,IAAM7D,EAAWiB,cADG,EAGcjG,oBAAS,GAHvB,mBAGbkG,EAHa,KAGFC,EAHE,KAKd7B,EAAY8B,YAAYxB,IACxB/B,EAAgBuD,YAAYnC,IAC5BnB,EAAQsD,YAAYlC,IACpBnB,EAAgBqD,YAAYjC,IAE5B2E,EAAqB,SACzBlI,GADyB,OAGzBmI,MAAS,SAAC7F,EAAQO,GAChBuB,EAAS1B,GAAa,CAAE1C,OAAM6C,MAAQA,OACrC,MAsDL,OACE,kBAACmE,GAAD,KACE,kBAACjB,EAAA,EAAD,CAAK3E,QAAQ,OAAO4E,eAAe,gBAAgBC,GAAI,GACrD,kBAACxI,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACA,kBAACwI,EAAA,EAAD,CACEhH,MAAM,UACNxB,QAAQ,YACRyI,KAAK,QACL3E,QAAS,kBAAM+D,GAAa,SAACa,GAAD,OAAoBA,OAE/Cd,EAAY,OAAS,SAIzBA,GAjEH,kBAAC2B,GAAD,CAAa9B,WAAYzB,GACvB,kBAACjG,EAAA,EAAD,CAAYC,QAAQ,KAAK0K,cAAY,GAArC,mBAGA,kBAAClB,GAAD,CACEmB,aAAcpG,EACdqG,KAAM,EACNC,IAAK,GACLC,IAAK,GACLC,MAAO,aAAIC,MAAM,IAAI3K,KAAI,SAAC4K,EAAGC,GAAJ,MAAW,CAClC/F,MAAiB,IAAT+F,EAAI,GACZC,MAAiB,IAATD,EAAI,OAEdE,kBAAkB,OAClBhI,SAAUoH,EAAmB,mBAG/B,kBAACzK,EAAA,EAAD,CAAYC,QAAQ,KAAK0K,cAAY,GAArC,SAGA,kBAAClB,GAAD,CACEmB,aAAcnG,EACdoG,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,MAAO,aAAIC,MAAM,IAAI3K,KAAI,SAAC4K,EAAGC,GAAJ,MAAW,CAClC/F,MAAO+F,EAAI,EACXC,MAAOD,EAAI,MAEbE,kBAAkB,OAClBhI,SAAUoH,EAAmB,WAG/B,kBAACzK,EAAA,EAAD,CAAYC,QAAQ,KAAK0K,cAAY,GAArC,mBAGA,kBAAClB,GAAD,CACEmB,aAAclG,EACdmG,KAAM,EACNC,IAAK,EACLC,IAAK,GACLC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAI1K,KAAI,SAAAgL,GAAC,MAAK,CAC5ClG,MAAOkG,EACPF,MAAOE,MAETD,kBAAkB,OAClBhI,SAAUoH,EAAmB,sB,6iBC7GrC,IAAMc,GAAgB3L,IAAO2H,IAAV,MACbiE,GAAc5L,YAAO6I,IAAP7I,CAAH,MAaX6L,GAAO7L,IAAO8L,KAAV,KACClM,IAAY,MAEjB0B,GAAStB,IAAOuB,OAAV,MAqFGwK,GAnCG,WAChB,IAAM1F,EAAY8B,YAAYxB,IACxBqF,EAAa7D,YAAYtB,IAE/B,GAAIR,IAAc2F,EAAY,OAAO,KAErC,IAnDgBrJ,EAmDVsJ,GAnDUtJ,EAmDOqJ,EAAWrJ,KAnDD,CACjC,CACED,GAAI,UACJwJ,KAAM,UACNxK,KAAK,0CAAD,OAA4CiB,GAChDwJ,KAAM,kBAAC,KAAD,OAER,CACEzJ,GAAI,WACJwJ,KAAM,WACNxK,KAAK,uCAAD,OAAyCiB,GAC7CwJ,KAAM,kBAAC,KAAD,OAER,CACEzJ,GAAI,aACJwJ,KAAM,aACNxK,KAAK,mCAAD,OAAqCiB,EAArC,YACJwJ,KAAM,kBAAC,KAAD,OAER,CACEzJ,GAAI,OACJwJ,KAAM,mBACNC,KAAM,kBAAC,KAAD,MACNzK,KAAK,mCAAD,OAAqCiB,EAArC,gCAEN,CACED,GAAI,cACJwJ,KAAM,cACNxK,KAAK,8CAAD,OAAgDiB,EAAhD,gBACJwJ,KAAM,kBAAC,KAAD,OAER,CACEzJ,GAAI,UACJwJ,KAAM,UACNxK,KAAK,6BAAD,OAA+BiB,GACnCwJ,KAAM,kBAAC,KAAD,OAER,CACEzJ,GAAI,aACJwJ,KAAM,aACNxK,KAAK,mCAAD,OAAqCiB,GACzCwJ,KAAM,kBAAC,KAAD,SAYR,OACE,kBAACR,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAK3E,QAAQ,OAAO4E,eAAe,gBAAgBC,GAAI,GACrD,kBAACxI,EAAA,EAAD,CAAYC,QAAQ,MAApB,UAGD4L,EAAMvL,KAAI,gBAAGgC,EAAH,EAAGA,GAAIwJ,EAAP,EAAOA,KAAMxK,EAAb,EAAaA,KAAMyK,EAAnB,EAAmBA,KAAnB,OACT,kBAACP,GAAD,CACE3I,IAAKP,EACLrC,QAAQ,WACRwB,MAAM,UACNoH,UAAWkD,EACXrD,KAAK,QACLpH,KAAMA,EAENE,OAAO,SACPD,IAAI,uBAEJ,kBAACkK,GAAD,kBACY,kBAAC,GAAD,KAASK,U,oBC1GzBE,GAAKC,KACLC,GAAKC,KACLC,GAAKC,KA4BIC,GAtBQ,SAAChB,GAEtB,OAAIA,EANe,GAQVU,GADGV,GAAK,EAPE,KAYfA,EAXe,GAaP,GAAAY,GAAG,EADH,GAACZ,EAbM,KAEA,MAmBTc,GAAG,EADH,GAACd,EAnBQ,MCPjBiB,GAAmC,KAsBxBC,GAZM,SAACV,EAAcW,GAC7BF,KAAQA,GAASG,SAASC,cAAc,WAE7C,IAAMC,EAAUL,GAAOM,WAAW,MAMlC,OAJAD,EAAQH,KAAOA,EAECG,EAAQE,YAAYhB,GAErBhK,OCUFiL,GA3Ba,SAACjB,EAAcW,EAAcO,GAGvD,GAFcR,GAAaV,EAAMW,GAErBO,EAAU,OAAOlB,EAM7B,IAJA,IAAImB,EAAc,EACdC,EAAYpB,EAAK/E,OACjBoG,EAAS3M,KAAK4M,MAAMtB,EAAK/E,OAAS,KAEzB,CACX,IAAMsG,EAAYvB,EAAKwB,MAAM,EAAGH,GAAU,MAa1C,GAXUX,GAAaa,EAAWZ,GAE1BO,EACNE,EAAYC,EAEZF,EAAcE,EAMZF,KAFJE,EAASF,EAAczM,KAAK4M,OAAOF,EAAYD,GAAe,IAElC,OAAOI,ICiExBE,GAzEI,SACjBC,EACAC,EACAC,GAHiB,OAId,SAACd,EAAmCe,GACvC,IAAMjF,EAAgB,EAAT+E,EACPG,EAAS,EAAIpN,KAAKqN,GAAML,EAASzG,OACjC+G,EAAc,GAAYL,EAIhCb,EAAQmB,UAAU,EAAG,EAAGrF,EAAMA,GAE9BkE,EAAQoB,UAAUP,EAAQA,GAC1Bb,EAAQqB,OAAON,GACff,EAAQoB,WAAWP,GAASA,GAE5Bb,EAAQsB,IAAIT,EAAQA,EAAQA,EAAQ,EAAG,EAAIjN,KAAKqN,IAChDjB,EAAQuB,UAAY,UACpBvB,EAAQwB,OAKRZ,EAASa,SAAQ,SAACC,EAASnD,GACzB,IAAMoD,EAAOpD,EAAIyC,EACXY,GAAMrD,EAAI,GAAKyC,EAOrBhB,EAAQ6B,YAIR7B,EAAQsB,IAAIT,EAAQA,EAAQA,EAASiB,EAAgBH,EAAMC,GAC3D5B,EAAQ+B,OAAOlB,EAAQA,GACvBb,EAAQgC,YAAc,OACtBhC,EAAQiC,UAvDO,EA0DfjC,EAAQkC,SAER,IA1DkBC,EAAgBC,EA0D5BC,GA1DYF,EA0DaR,EA1DGS,EA0DGR,EAzDhChO,KAAK0O,OACT1O,KAAK2O,IAAIJ,GAAUvO,KAAK2O,IAAIH,IAAW,GACvCxO,KAAK4O,IAAIL,GAAUvO,KAAK4O,IAAIJ,IAAW,IAwDlCK,EAAoBJ,EAAYzO,KAAKqN,GACrCyB,IAAcL,EAAY,IAAMzO,KAAKqN,IACrC0B,EAtDG,SAACC,EAAgB/B,EAAgBgC,GAAjC,OACXD,EAAS/B,EAASjN,KAAK2O,IAAIM,GAqDXC,CAAKjC,EAAQA,EAASK,EAAYwB,GAC1CK,EApDG,SAACH,EAAgB/B,EAAgBgC,GAAjC,OACXD,EAAS/B,EAASjN,KAAK4O,IAAIK,GAmDXG,CAAKnC,EAAQA,EAASK,EAAYwB,GAEhD1C,EAAQiD,OACRjD,EAAQoB,UAAUuB,EAAOI,GACzB/C,EAAQqB,OAAOoB,GACfzC,EAAQ6B,YACR7B,EAAQH,KAAOiB,EACfd,EAAQuB,UAAY,OAEpBvB,EAAQkD,SAASxB,EAAQ/L,KAAM,EAAG,GAGlCqK,EAAQmD,eC1BNzL,GAAe,CACnB0L,UAAW,KACXC,SAAU,KACVC,QAAS,EACTC,SAAU,EACVC,OAAQ,GAuIKC,GAlIO,SAAC,GAAoD,IAAlD5C,EAAiD,EAAjDA,OAAQ6C,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,eACpCC,EAAWC,iBAAcnM,IAEzB2B,EAAY8B,YAAYxB,IACxB9B,EAAQsD,YAAYlC,IACpBrB,EAAgBuD,YAAYnC,IAC5BO,EAAc4B,YAAYvB,IAE1BkH,EAAQ,UAAO,IAAYD,EAAnB,cAA+BnO,GAGvCkO,EAjDkB,SACxBA,EACAE,EACAgD,GAHwB,OAKxBlD,EAASlN,KAAI,WAAoB6K,GAApB,IAAG5I,EAAH,EAAGA,KAAS0E,EAAZ,4CACX1E,KAAMwK,GAAoBxK,EAAMmL,EAAUgD,IACvCzJ,MA0CY0J,CAAkBxK,EAAauH,EAF1B,KAAaD,GAG7BmD,EAAWC,mBAAQ,kBAAMtD,GAAWC,EAAUC,EAAQC,KAAW,CACrEF,EACAC,EACAC,IAKF1L,qBAAU,WACR,IAAMC,EAAe,WACnB,GAAKqO,EAAUQ,QAAf,CAEA,IAAMC,EAAMnP,OAAOoP,kBAAoB,EAEvCC,QAAQC,IAAIH,GAEZ,IAAMI,EAAOb,EAAUQ,QAAQM,wBACzBxE,EAAU0D,EAAUQ,QAAQjE,WAAW,MAExCD,IAGA4D,EAASM,QAAQd,YACpBM,EAAUQ,QAAQhP,MAAQqP,EAAKrP,MAAQiP,EACvCT,EAAUQ,QAAQhI,OAASqI,EAAKrI,OAASiI,EACzCnE,EAAQwD,MAAMW,EAAKA,GAEnBH,EAAShE,EAAS,IAGpB4D,EAASM,QAAQV,MAAQW,KAO3B,OAJA9O,IAEAL,OAAOM,iBAAiB,SAAUD,GAE3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACjD,CAACqO,EAAWE,EAAUI,IAEzB5O,qBAAU,WACR,GAAKsO,EAAUQ,QAAf,CAEA,IAAMlE,EAAU0D,EAAUQ,QAAQjE,WAAW,MACvC3H,EAAQsL,EAASM,QAEvB,GAAKlE,EAAL,CAGAgE,EAAShE,EAAS,GAElB,IAAMyE,EAAO,WACNnM,EAAM8K,YAEXpO,OAAO0P,qBAAqBpM,EAAM8K,WAElC9K,EAAMiL,SAAW,EACjBjL,EAAM+K,SAAW,KACjB/K,EAAMgL,QAAU,IAGZqB,EAAU,SAAVA,EAAWC,GACQ,OAAnBtM,EAAM+K,WACR/K,EAAM+K,SAAWuB,GAGnB,IAAMC,EAAYD,EAAOtM,EAAM+K,SAK/B,GAJA/K,EAAM+K,SAAWuB,EAEjBtM,EAAMgL,SAAWuB,EAEbvM,EAAMgL,QAA0B,IAAhB1L,EAAsB,CACxC,IAAMkN,EAjIc,SAACjC,EAAekC,GAC1C,IAAMpR,EAAIC,KAAKoR,IAAKnC,GAAmB,EAAVjP,KAAKqN,IAAqB,EAAVrN,KAAKqN,IAAUrN,KAAKqN,GAC3DD,EAAS,EAAIpN,KAAKqN,GAAM8D,EAE9B,OAAOnR,KAAK4M,MAAM7M,EAAIqN,GAAS+D,EA6HJE,CACnB3M,EAAMiL,SACN3C,EAASzG,QAKX,OAFAwJ,EAAemB,QACfL,IAIF,IAAMS,EAAQ5M,EAAMgL,SAA2B,IAAhB1L,GACzBuN,EAASzF,GAAewF,GACxBrC,EAAU,EAAIjP,KAAKqN,GAAM,IAAOkE,EAAStN,EAE/CmM,EAAShE,EAAS6C,GAElBvK,EAAMiL,UAAYV,EAClBvK,EAAM8K,UAAYpO,OAAOoQ,sBAAsBT,IAgBjD,OAJItL,GATU,WAAO,IACXmK,EAAUI,EAASM,QAAnBV,MAERxD,EAAQqF,iBACRrF,EAAQwD,MAAMA,EAAOA,GAErBlL,EAAM8K,UAAYpO,OAAOoQ,sBAAsBT,GAI/CW,GAGK,kBAAMb,SACZ,CACDf,EACAE,EACAI,EACApM,EACAyB,EACAxB,EACA+I,EAASzG,OACTwJ,KC5LJ,SAAS4B,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAU7Q,GAAU,IAAK,IAAI2J,EAAI,EAAGA,EAAImH,UAAUvL,OAAQoE,IAAK,CAAE,IAAIoH,EAASD,UAAUnH,GAAI,IAAK,IAAItI,KAAO0P,EAAcH,OAAOI,UAAUC,eAAeC,KAAKH,EAAQ1P,KAAQrB,EAAOqB,GAAO0P,EAAO1P,IAAY,OAAOrB,IAA2BmR,MAAMC,KAAMN,WAEhT,SAASO,GAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkE1P,EAAKsI,EAAnE3J,EAEzF,SAAuC+Q,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2D1P,EAAKsI,EAA5D3J,EAAS,GAAQuR,EAAaX,OAAOY,KAAKT,GAAqB,IAAKpH,EAAI,EAAGA,EAAI4H,EAAWhM,OAAQoE,IAAOtI,EAAMkQ,EAAW5H,GAAQ2H,EAAStN,QAAQ3C,IAAQ,IAAarB,EAAOqB,GAAO0P,EAAO1P,IAAQ,OAAOrB,EAFxMyR,CAA8BV,EAAQO,GAAuB,GAAIV,OAAOc,sBAAuB,CAAE,IAAIC,EAAmBf,OAAOc,sBAAsBX,GAAS,IAAKpH,EAAI,EAAGA,EAAIgI,EAAiBpM,OAAQoE,IAAOtI,EAAMsQ,EAAiBhI,GAAQ2H,EAAStN,QAAQ3C,IAAQ,GAAkBuP,OAAOI,UAAUY,qBAAqBV,KAAKH,EAAQ1P,KAAgBrB,EAAOqB,GAAO0P,EAAO1P,IAAU,OAAOrB,EAMne,IAAI,GAEJ,IAAMmL,cAAc,OAAQ,CAC1ByB,KAAM,UACNU,OAAQ,OACRuE,YAAa,EACbC,EAAG,mBAGD,GAAgB,SAAuBC,GACzC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQb,GAAyBU,EAAM,CAAC,SAAU,UAEtD,OAAO,IAAM5G,cAAc,MAAOwF,GAAS,CACzCwB,QAAS,YACTC,IAAKJ,GACJE,GAAQD,EAAQ,IAAM9G,cAAc,QAAS,KAAM8G,GAAS,KAAM,KAGnEI,GAAa,IAAMC,YAAW,SAAUJ,EAAOE,GACjD,OAAO,IAAMjH,cAAc,GAAewF,GAAS,CACjDqB,OAAQI,GACPF,OAEU,I,ghCCZf,IAAMK,GAAmBnU,IAAO2H,IAAV,MAGX,SAAAE,GAAC,OAAIA,EAAEuM,cACN,SAAAvM,GAAC,OAAIA,EAAEwM,eAEbC,GAAStU,IAAO2M,OAAV,MAED,SAAA9E,GAAC,OAAIA,EAAE3F,SACN,SAAA2F,GAAC,OAAIA,EAAEqB,UAEbqL,GAAavU,IAAOkD,OAAV,MAML,SAAA2E,GAAC,MAAK,GAAYA,EAAEgG,UACnB,SAAAhG,GAAC,MAAK,GAAYA,EAAEgG,SAEVjO,IAAY,MAGnB,SAAAiI,GAAC,MAAK,IAAYA,EAAEgG,SAUtBjO,IAAY,MAInB4U,GAAiBxU,YAAOyU,GAAPzU,CAAH,MA+DL0U,GAtDM,WACnB,IAAM3N,EAAWiB,cADQ,EAEGjG,mBAAS,KAFZ,mBAElB8L,EAFkB,KAEV8G,EAFU,KAGnBjE,EAAYG,iBAA0B,MACtCxK,EAAY8B,YAAYxB,IACxBhC,EAAsBwD,YAAYhC,IAClC2C,EAAgB,EAAT+E,EAEPzF,EAAgBtG,KAEhB8S,EAAuBvO,IAAc1B,EAAoBwC,OAE/D/E,qBAAU,WAGJuS,EADEvM,EAAgB,IACR,IACDA,EAAgB,KACf,IAEA,OAKb,CAACuM,EAAWvM,IAef,OANAqI,GAAc,CACZC,YACA7C,SACA8C,eALyB,SAACjO,GAAD,OAAgBqE,EAASL,GAAiBhE,OASnE,kBAACyR,GAAD,CAAkBC,WAAYtL,EAAMuL,YAAavL,GAC/C,kBAACwL,GAAD,CAAQpS,MAAO4G,EAAMI,OAAQJ,EAAMkL,IAAKtD,IACxC,kBAAC6D,GAAD,CACEM,SAAUD,EACV/G,OAAQA,EACR1J,QAnBkB,WACtB4C,EAASD,MACTC,EAASN,QAcP,QAOA,kBAAC+N,GAAD,Q,yMC1GN,IAAM3I,GAAO7L,IAAO8L,KAAV,KACClM,IAAY,MAEjB0B,GAAStB,IAAOuB,OAAV,MAoDGuT,GA/CkB,WAC/B,IAAMnQ,EAAsBwD,YAAYhC,IAExC,IAAKxB,EAAoBwC,OACvB,OAAO,kBAAC,GAAD,4CAGT,GAAIxC,EAAoBwC,SAAWI,EAAUJ,OAC3C,OACE,kBAAC,GAAD,4BACsB,kBAAC,GAAD,aAK1B,IAIsC,EAJhC4N,EAAoBpQ,EACvB+I,MAAM,EAAG,GACThN,KAAI,SAAAgC,GAAE,OAAI6E,EAAUC,KAAKvG,IAAS,KAAMyB,OAE3C,OAAmC,IAA/BiC,EAAoBwC,OAEpB,kBAAC,GAAD,2BACqB,kBAAC,GAAD,eAAS4N,EAAkB,UAA3B,aAAS,EAAsBpS,OAMtD,kBAAC,GAAD,2BACsB,IACnBoS,EAAkBrU,KAAI,SAAC4G,EAAU3B,GAAX,OACrB,kBAAC,IAAMqP,SAAP,CAAgB/R,IAAK0C,GACnB,kBAAC,GAAD,CAAQ1C,IAAG,OAAEqE,QAAF,IAAEA,OAAF,EAAEA,EAAU5E,IAAvB,OAA4B4E,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAU3E,MACrCoS,EAAkB5N,OAAS,IAAMxB,GAAS,SAG9ChB,EAAoBwC,OAAS,GAC5B,oCACG,QACD,kBAAC,GAAD,KAASxC,EAAoBwC,OAAS,GACrC,W,mYC9CX,IAAM8N,GAAajV,IAAO2H,IAAV,MAQVkE,GAAO7L,IAAO8L,KAAV,KACClM,IAAY,MAEjB0B,GAAStB,IAAOuB,OAAV,MAgDG2T,GAzCA,WACb,IAAM7O,EAAY8B,YAAYxB,IACxBqF,EAAa7D,YAAYtB,IA8B/B,OACE,kBAACoO,GAAD,KACG5O,IAAc2F,EAPjB,kBAAC5L,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,GAAD,OAxBqB,WACvB,IAAK2L,EAAY,OAAO,KADK,IAGrBrJ,EAAmBqJ,EAAnBrJ,KAAM2E,EAAa0E,EAAb1E,SAEd,OACE,oCACE,kBAAClH,EAAA,EAAD,CACEC,QAAQ,KACR+C,MAAO,CAAEsG,aAAc,EAAGyL,UAAW,WAEpCxS,GAEH,kBAACvC,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,GAAD,kBACY,kBAAC,GAAD,KAASiH,MAiBrB8N,K,sHC5DV,IAAMC,GAAerV,IAAOsV,KAAV,MAkBHC,GATE,SAAC,GAA0B,IAAxBpV,EAAuB,EAAvBA,UAClB,OACE,kBAACkV,GAAD,CAAclV,UAAWA,GACvB,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,o1DCHN,IAAMqV,GAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAM,UAIJC,GAAU5V,IAAO2H,IAAV,MAoCPkO,GAAe7V,YAAOE,EAAPF,CAAH,MAGZ8V,GAAoB9V,YAAO+V,EAAP/V,CAAH,MAQjBgW,GAAqBhW,YAAO+V,EAAP/V,CAAH,MAGlBiW,GAAiBjW,YAAOuV,GAAPvV,CAAH,MAGdkW,GAAelW,YAAOwB,EAAPxB,CAAH,MA8BHmW,GA1BO,WACpB,IAAMpP,EAAWiB,cAMjB,OAJA5F,qBAAU,WACR2E,EAASD,QACR,CAACC,IAGF,kBAACqP,EAAA,EAAD,CAAeZ,MAAOA,IACpB,kBAACI,GAAD,KACE,kBAACC,GAAD,MACA,kBAACC,GAAD,KACE,kBAAC,GAAD,OAEF,kBAACE,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,kBAACC,GAAD,MACA,kBAACC,GAAD,OAEF,kBAAC,EAAD,Q,SCxFSG,GAPKC,2BAAgB,CAClClQ,YACA/B,aCMakS,GARDC,aAAe,CAC3BC,QAASJ,KCMLK,GAAcC,QACW,cAA7B3U,OAAO4U,SAASC,UAEe,UAA7B7U,OAAO4U,SAASC,UAEhB7U,OAAO4U,SAASC,SAASC,MACvB,2DA8CN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlS,QACf4R,UAAUC,cAAcQ,YAI1BtG,QAAQC,IACN,iHAKE2F,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBjG,QAAQC,IAAI,sCAGR2F,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACL1G,QAAQ0G,MAAM,4CAA6CA,MChGjEC,IAASC,OACP,kBAAC,IAAD,CAAU1B,MAAOA,IACf,kBAAC,GAAD,OAEFzJ,SAASoL,eAAe,SDenB,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIiB,IACpBC,OACApW,OAAO4U,SAASlV,MAEJ2W,SAAWrW,OAAO4U,SAASyB,OAIvC,OAGFrW,OAAOM,iBAAiB,QAAQ,WAC9B,IAAM0U,EAAK,UAAMoB,OAAN,sBAEP1B,KAgEV,SAAiCM,EAAeC,GAE9CqB,MAAMtB,EAAO,CACXuB,QAAS,CAAE,iBAAkB,YAE5BlB,MAAK,SAAAmB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAY7S,QAAQ,cAG5CsR,UAAUC,cAAcyB,MAAMvB,MAAK,SAAAC,GACjCA,EAAauB,aAAaxB,MAAK,WAC7BrV,OAAO4U,SAASkC,eAKpB/B,GAAgBC,EAAOC,MAG1Ba,OAAM,WACLzG,QAAQC,IACN,oEAvFAyH,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMvB,MAAK,WACjChG,QAAQC,IACN,iHAMJyF,GAAgBC,EAAOC,OCxC/BE,K","file":"static/js/main.bc5e435e.chunk.js","sourcesContent":["export const GLOBAL_FONT = \"Roboto, Helvetica, Arial, sans-serif\";\n\nexport const LS_OPTIONS = \"rggOptions\";\n","import { css } from \"styled-components\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport { GLOBAL_FONT } from \"utils/constants\";\n\nexport default css`\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${GLOBAL_FONT};\n    margin: 0;\n    background-color: ${colors.grey[900]};\n    color: #fff;\n  }\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nimport common from \"styles/common\";\n\nexport default createGlobalStyle`\n  ${common}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport * as colors from \"@material-ui/core/colors\";\nimport { Typography } from \"@material-ui/core\";\n\nconst HeaderRoot = styled.header`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${colors.grey[800]};\n  color: #fff;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst Header = ({ className }: Props) => {\n  return (\n    <HeaderRoot className={className}>\n      <Typography variant=\"h4\">Retro Game Gauntlet</Typography>\n    </HeaderRoot>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nconst LinksRoot = styled.aside`\n  display: flex;\n  flex-direction: column;\n\n  & > :not(:last-child) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport default LinksRoot;\n","import * as R from \"ramda\";\n\nimport { RolledGame } from \"features/rollGame/rollGameTypes\";\n\nimport games from \"data/data.json\";\nimport platforms from \"data/platforms.json\";\n\nconst shuffleArray = (arr: any[]) =>\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]);\n\nexport const getRandomGames = (\n  selectedPlatformIds: string[],\n  count: number\n): RolledGame[] => {\n  const gamesByPlatforms = selectedPlatformIds.length\n    ? R.pick(selectedPlatformIds, games)\n    : games;\n\n  const rolledGames = R.pipe<any, any, any, any, any, any>(\n    R.toPairs,\n    R.map<any, any>(([platformId, games]) =>\n      R.map(name => ({ platformId, name }), games)\n    ),\n    R.flatten,\n    shuffleArray,\n    R.slice(0, count)\n  )(gamesByPlatforms);\n\n  return rolledGames.map(({ platformId, ...rest }: any) => {\n    const platform = platforms.find(R.propEq(\"id\", platformId));\n\n    return {\n      platform: platform?.name || \"\",\n      ...rest\n    };\n  });\n};\n\nexport const gamesCount = R.pipe<any, any, any, any>(\n  R.values,\n  R.flatten,\n  R.propOr(0, \"length\")\n)(games) as number;\n\n// console.log(\n//   R.pipe<any, any, any, any, any>(\n//     R.values,\n//     R.flatten,\n//     R.sortBy(s => s.length),\n//     R.last\n//   )(games)\n// );\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as colors from \"@material-ui/core/colors\";\nimport { Typography, Link } from \"@material-ui/core\";\n\nimport { gamesCount } from \"features/rollGame/rollGameUtils\";\n\nconst FooterRoot = styled.footer`\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid ${colors.grey[800]};\n  border-bottom: 1px solid ${colors.grey[800]};\n`;\nconst FooterInner = styled(Typography)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  flex-grow: 1;\n  max-width: 1280px;\n  height: 100%;\n  color: ${colors.grey[700]};\n  font-size: 0.8rem !important;\n\n  @media (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\nconst Strong = styled.strong`\n  font-weight: normal;\n  color: ${colors.grey[500]};\n`;\n\ntype Props = {\n  className?: string;\n};\n\n// TODO: add FAQ\n\nconst Footer = ({ className }: Props) => {\n  return (\n    <FooterRoot className={className}>\n      <FooterInner>\n        <span>\n          Games in database: <Strong>{gamesCount}</Strong>\n        </span>\n\n        <span>\n          Author:{\" \"}\n          <Strong>\n            <Link\n              href=\"//github.com/DmitryScaletta\"\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n              color=\"inherit\"\n            >\n              DmitryScaletta\n            </Link>\n          </Strong>\n        </span>\n\n        <span>\n          Games list from:{\" \"}\n          <Strong>\n            <Link\n              href=\"//nukecritic.com/rgg/\"\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n              color=\"inherit\"\n            >\n              nukecritic.com/rgg/\n            </Link>\n          </Strong>\n        </span>\n\n        <span>\n          <Strong>\n            <Link\n              href=\"//github.com/honeykingdom/rgg/issues\"\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n              color=\"inherit\"\n            >\n              Report a bug\n            </Link>\n          </Strong>\n        </span>\n      </FooterInner>\n    </FooterRoot>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\n\nconst useDocumentWidth = () => {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return width;\n};\n\nexport default useDocumentWidth;\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport * as colors from \"@material-ui/core/colors\";\n\ntype Props = {\n  id: string;\n  name: string;\n  releaseDate: string;\n  gamesCount: number;\n  checked: boolean;\n  onNameClick: (id: string) => void;\n  onCheckboxClick: (id: string) => void;\n};\n\nconst Platform = ({\n  id,\n  name,\n  releaseDate,\n  gamesCount,\n  checked,\n  onNameClick,\n  onCheckboxClick\n}: Props) => {\n  return (\n    <ListItem\n      key={id}\n      button\n      selected={checked}\n      style={{ padding: \"0 12px\", alignItems: \"stretch\" }}\n    >\n      <Checkbox\n        edge=\"start\"\n        color=\"default\"\n        checked={checked}\n        style={{ padding: 4 }}\n        onChange={() => onCheckboxClick(id)}\n      />\n      <ListItemText\n        id={id}\n        primary={name}\n        primaryTypographyProps={{ style: { fontWeight: \"bold\" } }}\n        style={{ margin: 0, display: \"flex\", alignItems: \"center\" }}\n        secondary={`(${gamesCount} games)`}\n        secondaryTypographyProps={{\n          style: { display: \"inline\", marginLeft: 4, color: colors.grey[500] }\n        }}\n        onClick={() => onNameClick(id)}\n      />\n    </ListItem>\n  );\n};\n\nexport default React.memo(Platform);\n","import { LS_OPTIONS } from \"utils/constants\";\n\nexport const writeOptionsToLocalStorage = (options: any) => {\n  localStorage.setItem(LS_OPTIONS, JSON.stringify(options));\n};\n\nexport const readOptionsFromLocalStorage = () => {\n  const options = localStorage.getItem(LS_OPTIONS);\n\n  try {\n    return JSON.parse(options || \"{}\");\n  } catch (e) {\n    return {};\n  }\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"app/rootReducer\";\nimport {\n  writeOptionsToLocalStorage,\n  readOptionsFromLocalStorage\n} from \"features/options/optionsUtils\";\n\ntype OptionsState = {\n  selectedPlatformIds: string[];\n  secondsToSpin: number;\n  speed: number;\n  numberOfGames: number;\n};\n\nexport type UpdateOptionAction = {\n  name: \"secondsToSpin\" | \"speed\" | \"numberOfGames\" | \"selectedPlatformIds\";\n  value: any;\n};\n\nconst initialState: OptionsState = {\n  selectedPlatformIds: [\"playstation\", \"playstation-2\"],\n  secondsToSpin: 30,\n  speed: 3,\n  numberOfGames: 16,\n  ...readOptionsFromLocalStorage()\n};\n\n// TODO: remove side effect from reducers\n\nconst options = createSlice({\n  name: \"options\",\n  initialState,\n  reducers: {\n    updateOption: (state, { payload }: PayloadAction<UpdateOptionAction>) => {\n      const { name, value } = payload;\n      state[name] = value;\n\n      writeOptionsToLocalStorage(state);\n    },\n    selectPlatform: (state, { payload }: PayloadAction<string>) => {\n      state.selectedPlatformIds = [payload];\n\n      writeOptionsToLocalStorage(state);\n    },\n    togglePlatform: (state, { payload }: PayloadAction<string>) => {\n      const index = state.selectedPlatformIds.indexOf(payload);\n\n      if (index > -1) {\n        state.selectedPlatformIds.splice(index, 1);\n      } else {\n        state.selectedPlatformIds.push(payload);\n      }\n\n      writeOptionsToLocalStorage(state);\n    }\n  }\n});\n\nexport const { updateOption, selectPlatform, togglePlatform } = options.actions;\n\nexport default options.reducer;\n\n// selectors\nexport const secondsToSpinSelector = (state: RootState) =>\n  state.options.secondsToSpin;\n\nexport const speedSelector = (state: RootState) => state.options.speed;\n\nexport const numberOfGamesSelector = (state: RootState) =>\n  state.options.numberOfGames;\n\nexport const selectedPlatformIdsSelector = (state: RootState) =>\n  state.options.selectedPlatformIds;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"app/rootReducer\";\nimport { AppDispatch } from \"app/store\";\nimport {\n  numberOfGamesSelector,\n  selectedPlatformIdsSelector\n} from \"features/options/optionsSlice\";\nimport { getRandomGames } from \"features/rollGame/rollGameUtils\";\nimport { RolledGame } from \"features/rollGame/rollGameTypes\";\n\ninterface RollGameState {\n  isRolling: boolean;\n  gameIndex: number | null;\n  rolledGames: RolledGame[];\n}\n\nconst initialState: RollGameState = {\n  isRolling: false,\n  gameIndex: null,\n  rolledGames: []\n};\n\nconst rollGame = createSlice({\n  name: \"rollGame\",\n  initialState,\n  reducers: {\n    updateRolledGamesThunk: (\n      state,\n      { payload }: PayloadAction<RolledGame[]>\n    ) => {\n      state.rolledGames = payload;\n    },\n    rollGameStart: state => {\n      state.isRolling = true;\n      state.gameIndex = null;\n    },\n    rollGameComplete: (state, { payload }: PayloadAction<number>) => {\n      state.isRolling = false;\n      state.gameIndex = payload;\n    }\n  }\n});\n\nexport const { rollGameStart, rollGameComplete } = rollGame.actions;\n\nconst { updateRolledGamesThunk } = rollGame.actions;\n\nexport default rollGame.reducer;\n\n// selectors\nexport const isRollingSelector = (state: RootState) => state.rollGame.isRolling;\n\nexport const rolledGamesSelector = (state: RootState) =>\n  state.rollGame.rolledGames;\n\nexport const rolledGameIndexSelector = (state: RootState) =>\n  state.rollGame.gameIndex;\n\nexport const rolledGameSelector = (state: RootState) => {\n  if (!state.rollGame.gameIndex) return null;\n\n  return state.rollGame.rolledGames[state.rollGame.gameIndex];\n};\n\n// actions\nexport const updateRolledGames = () => (\n  dispatch: AppDispatch,\n  getState: () => RootState\n) => {\n  const state = getState();\n\n  const numberOfGames = numberOfGamesSelector(state);\n  const selectedPlatformIds = selectedPlatformIdsSelector(state);\n\n  const rolledGames = getRandomGames(selectedPlatformIds, numberOfGames);\n\n  dispatch(updateRolledGamesThunk(rolledGames));\n};\n","import React, { useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled, { css } from \"styled-components\";\nimport Scrollbar from \"react-scrollbars-custom\";\nimport { Typography, List, Button, Box, ListItem } from \"@material-ui/core\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\n\nimport useDocumentWidth from \"hooks/useDocumentWidth\";\nimport Platform from \"features/platforms/Platform\";\nimport {\n  selectPlatform,\n  togglePlatform,\n  updateOption,\n  selectedPlatformIdsSelector\n} from \"features/options/optionsSlice\";\nimport { isRollingSelector } from \"features/rollGame/rollGameSlice\";\n\nimport platforms from \"data/platforms.json\";\n\nconst PlatformsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\nconst PlatformsList = styled.div<{ isDisabled: boolean }>`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  ${p =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\nconst Platforms = () => {\n  const dispatch = useDispatch();\n  const [isVisible, setIsVisible] = useState(true);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  const documentWidth = useDocumentWidth();\n\n  const handleNameClick = useCallback(\n    (id: string) => dispatch(selectPlatform(id)),\n    [dispatch]\n  );\n\n  const handleCheckboxClick = useCallback(\n    (id: string) => dispatch(togglePlatform(id)),\n    [dispatch]\n  );\n\n  const handleSelectAll = () =>\n    dispatch(\n      updateOption({\n        name: \"selectedPlatformIds\",\n        value: platforms.map(({ id }) => id)\n      })\n    );\n\n  const handleSelectNone = () =>\n    dispatch(\n      updateOption({\n        name: \"selectedPlatformIds\",\n        value: []\n      })\n    );\n\n  const renderPlatformsList = () => (\n    <PlatformsList isDisabled={isRolling}>\n      <Box component=\"span\" mb={1} style={{ marginLeft: 1 }}>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxIcon style={{ width: 24, height: 24 }} color=\"inherit\" />\n          }\n          onClick={handleSelectAll}\n        >\n          Select All\n        </Button>\n        <Button\n          color=\"inherit\"\n          size=\"small\"\n          startIcon={\n            <CheckBoxOutlineBlankIcon\n              style={{ width: 24, height: 24 }}\n              color=\"inherit\"\n            />\n          }\n          onClick={handleSelectNone}\n        >\n          Select None\n        </Button>\n      </Box>\n      <Scrollbar\n        style={{ /* height: \"calc(100% - 39px)\", */ flexGrow: 1 }}\n        native={documentWidth < 1200}\n      >\n        <List dense disablePadding>\n          {platforms.map(({ id, name, releaseDate, gamesCount }) => (\n            <Platform\n              key={id}\n              id={id}\n              name={name}\n              releaseDate={releaseDate}\n              gamesCount={gamesCount}\n              checked={selectedPlatformIds.includes(id)}\n              onNameClick={handleNameClick}\n              onCheckboxClick={handleCheckboxClick}\n            />\n          ))}\n        </List>\n      </Scrollbar>\n    </PlatformsList>\n  );\n\n  // const renderCompactPlatformsList = () =>\n  //   platforms\n  //     .filter(({ id }) => selectedPlatformIds.includes(id))\n  //     .map(({ name }) => name)\n  //     .join(\", \");\n\n  const renderCompactPlatformsList = () => (\n    <Scrollbar native={documentWidth < 1200}>\n      <List>\n        {platforms\n          .filter(({ id }) => selectedPlatformIds.includes(id))\n          .map(({ id, name }) => (\n            <ListItem key={id} style={{ padding: 0, marginBottom: 8 }}>\n              {name}\n            </ListItem>\n          ))}\n      </List>\n    </Scrollbar>\n  );\n\n  return (\n    <PlatformsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Platforms</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={() => setIsVisible((prev: boolean) => !prev)}\n        >\n          {isVisible ? \"Hide\" : \"Change\"}\n        </Button>\n      </Box>\n\n      {isVisible ? renderPlatformsList() : renderCompactPlatformsList()}\n    </PlatformsRoot>\n  );\n};\n\nexport default Platforms;\n","import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport debounce from \"debounce\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { Slider, withStyles, Button, Box } from \"@material-ui/core\";\nimport {\n  secondsToSpinSelector,\n  speedSelector,\n  numberOfGamesSelector,\n  updateOption\n} from \"features/options/optionsSlice\";\nimport * as colors from \"@material-ui/core/colors\";\nimport { isRollingSelector } from \"features/rollGame/rollGameSlice\";\n\nconst OptionsRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst OptionsList = styled.div<{ isDisabled: boolean }>`\n  ${p =>\n    p.isDisabled &&\n    css`\n      opacity: 0.5;\n      pointer-events: none;\n    `};\n`;\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: colors.grey[500],\n    height: 8\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: \"#fff\",\n    border: \"2px solid currentColor\",\n    marginTop: -8,\n    marginLeft: -12,\n    \"&:focus,&:hover,&$active\": {\n      boxShadow: \"inherit\"\n    }\n  },\n  active: {},\n  valueLabel: {\n    left: \"calc(-50% + 4px)\"\n  },\n  track: {\n    height: 8,\n    borderRadius: 4\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4\n  }\n})(Slider);\n\nconst Options = () => {\n  const dispatch = useDispatch();\n\n  const [isVisible, setIsVisible] = useState(false);\n\n  const isRolling = useSelector(isRollingSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const speed = useSelector(speedSelector);\n  const numberOfGames = useSelector(numberOfGamesSelector);\n\n  const handleOptionChange = (\n    name: \"secondsToSpin\" | \"speed\" | \"numberOfGames\"\n  ) =>\n    debounce((e: any, value: number | number[]) => {\n      dispatch(updateOption({ name, value: (value as unknown) as number }));\n    }, 500);\n\n  const renderOptions = () => (\n    <OptionsList isDisabled={isRolling}>\n      <Typography variant=\"h6\" gutterBottom>\n        Seconds to Spin\n      </Typography>\n      <PrettoSlider\n        defaultValue={secondsToSpin}\n        step={1}\n        min={10}\n        max={60}\n        marks={[...Array(6)].map((_, i) => ({\n          value: (i + 1) * 10,\n          label: (i + 1) * 10\n        }))}\n        valueLabelDisplay=\"auto\"\n        onChange={handleOptionChange(\"secondsToSpin\")}\n      />\n\n      <Typography variant=\"h6\" gutterBottom>\n        Speed\n      </Typography>\n      <PrettoSlider\n        defaultValue={speed}\n        step={1}\n        min={1}\n        max={8}\n        marks={[...Array(8)].map((_, i) => ({\n          value: i + 1,\n          label: i + 1\n        }))}\n        valueLabelDisplay=\"auto\"\n        onChange={handleOptionChange(\"speed\")}\n      />\n\n      <Typography variant=\"h6\" gutterBottom>\n        Number of Games\n      </Typography>\n      <PrettoSlider\n        defaultValue={numberOfGames}\n        step={1}\n        min={2}\n        max={16}\n        marks={[2, 4, 6, 8, 10, 12, 14, 16].map(n => ({\n          value: n,\n          label: n\n        }))}\n        valueLabelDisplay=\"auto\"\n        onChange={handleOptionChange(\"numberOfGames\")}\n      />\n    </OptionsList>\n  );\n\n  return (\n    <OptionsRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Options</Typography>\n        <Button\n          color=\"default\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={() => setIsVisible((prev: boolean) => !prev)}\n        >\n          {isVisible ? \"Hide\" : \"Show\"}\n        </Button>\n      </Box>\n\n      {isVisible && renderOptions()}\n    </OptionsRoot>\n  );\n};\n\nexport default Options;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Box } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport YouTubeIcon from \"@material-ui/icons/YouTube\";\nimport * as colors from \"@material-ui/core/colors\";\nimport {\n  isRollingSelector,\n  rolledGameSelector\n} from \"features/rollGame/rollGameSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst GameLinksRoot = styled.div``;\nconst ServiceLink = styled(Button)`\n  width: 100%;\n  text-transform: none !important;\n\n  .MuiButton-label {\n    justify-content: flex-start;\n  }\n\n  &:not(:last-child) {\n    margin-bottom: 16px;\n  }\n`;\n// TODO: organize this components\nconst Span = styled.span`\n  color: ${colors.grey[500]};\n`;\nconst Strong = styled.strong`\n  font-weight: normal;\n  color: #fff;\n`;\n\nconst getLinks = (name: string) => [\n  {\n    id: \"youtube\",\n    text: \"YouTube\",\n    href: `//www.youtube.com/results?search_query=${name}`,\n    icon: <YouTubeIcon />\n  },\n  {\n    id: \"gamefaqs\",\n    text: \"GameFAQs\",\n    href: `//gamefaqs.gamespot.com/search?game=${name}`,\n    icon: <SearchIcon />\n  },\n  {\n    id: \"metacritic\",\n    text: \"Metacritic\",\n    href: `//www.metacritic.com/search/all/${name}/results`,\n    icon: <SearchIcon />\n  },\n  {\n    id: \"hltb\",\n    text: \"How Long To Beat\",\n    icon: <SearchIcon />,\n    href: `https://www.google.com/search?q=${name}%20site%3Ahowlongtobeat.com`\n  },\n  {\n    id: \"emuparadise\",\n    text: \"EmuParadise\",\n    href: `//www.emuparadise.me/roms/search.php?query=${name}&section=all`,\n    icon: <SearchIcon />\n  },\n  {\n    id: \"coolrom\",\n    text: \"CoolROM\",\n    href: `//coolrom.com.au/search?q=${name}`,\n    icon: <SearchIcon />\n  },\n  {\n    id: \"romhustler\",\n    text: \"RomHustler\",\n    href: `//romhustler.org/roms/search/?q=${name}`,\n    icon: <SearchIcon />\n  }\n];\n\nconst GameLinks = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  if (isRolling || !rolledGame) return null;\n\n  const links = getLinks(rolledGame.name);\n\n  return (\n    <GameLinksRoot>\n      <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\n        <Typography variant=\"h5\">Links</Typography>\n      </Box>\n\n      {links.map(({ id, text, href, icon }) => (\n        <ServiceLink\n          key={id}\n          variant=\"outlined\"\n          color=\"inherit\"\n          startIcon={icon}\n          size=\"large\"\n          href={href}\n          // @ts-ignore\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <Span>\n            Search on <Strong>{text}</Strong>\n          </Span>\n        </ServiceLink>\n      ))}\n    </GameLinksRoot>\n  );\n};\n\nexport default GameLinks;\n","import { easeExpOut, easeExpInOut, easeCircleInOut } from \"d3-ease\";\n\nconst f1 = easeExpOut;\nconst f2 = easeExpInOut;\nconst f3 = easeCircleInOut;\n\nconst breakpointX1 = 0.3;\nconst breakpointX2 = 0.5;\nconst breakpointY1 = 0.3;\n\nconst timingFunction = (n: number) => {\n  // f1: (x: [0, bx1)) => y: [0, 1);\n  if (n < breakpointX1) {\n    const x = n * (1 / breakpointX1);\n    return f1(x);\n  }\n\n  // f2: (x: [bx1, bx2)) => y: [1, by1);\n  if (n < breakpointX2) {\n    const x = (n - breakpointX1) * (1 / (breakpointX2 - breakpointX1));\n    const y = f2(1 - x) * (1 - breakpointY1) + breakpointY1;\n\n    return y;\n  }\n\n  // f3: (x: [bx2, 1)) => y: [by1, 0);\n  const x = (n - breakpointX2) * (1 / (1 - breakpointX2));\n  const y = f3(1 - x) * breakpointY1;\n\n  return y;\n};\n\nexport default timingFunction;\n","let canvas: HTMLCanvasElement | null = null;\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nconst getTextWidth = (text: string, font: string) => {\n  if (!canvas) canvas = document.createElement(\"canvas\");\n\n  const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n  context.font = font;\n\n  const metrics = context.measureText(text);\n\n  return metrics.width;\n};\n\nexport default getTextWidth;\n","import getTextWidth from \"utils/getTextWidth\";\n\nconst sliceTextByMaxWidth = (text: string, font: string, maxWidth: number) => {\n  const width = getTextWidth(text, font);\n\n  if (width < maxWidth) return text;\n\n  let beginCursor = 0;\n  let endCursor = text.length;\n  let cursor = Math.floor(text.length / 2);\n\n  while (true) {\n    const textSlice = text.slice(0, cursor) + \"...\";\n\n    const w = getTextWidth(textSlice, font);\n\n    if (w > maxWidth) {\n      endCursor = cursor;\n    } else {\n      beginCursor = cursor;\n    }\n\n    // middle between the beginCursor and the endCursor\n    cursor = beginCursor + Math.floor((endCursor - beginCursor) / 2);\n\n    if (beginCursor === cursor) return textSlice;\n  }\n};\n\nexport default sliceTextByMaxWidth;\n","import { RolledGame } from \"features/rollGame/rollGameTypes\";\n\nconst LINE_WIDTH = 4;\n\nconst meanAngleDeg = (angle1: number, angle2: number) => {\n  return Math.atan2(\n    (Math.sin(angle1) + Math.sin(angle2)) / 2,\n    (Math.cos(angle1) + Math.cos(angle2)) / 2\n  );\n};\n\nconst getX = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.sin(angle);\n\nconst getY = (offset: number, radius: number, angle: number) =>\n  offset + radius * Math.cos(angle);\n\nconst drawCircle = (\n  segments: RolledGame[],\n  radius: number,\n  textFont: string\n) => (context: CanvasRenderingContext2D, rotateAngle: number) => {\n  const size = radius * 2;\n  const coeff = (2 * Math.PI) / segments.length;\n  const textOffset = (20 / 200) * radius;\n\n  // context.save();\n\n  context.clearRect(0, 0, size, size);\n\n  context.translate(radius, radius);\n  context.rotate(rotateAngle);\n  context.translate(-radius, -radius);\n\n  context.arc(radius, radius, radius, 0, 2 * Math.PI);\n  context.fillStyle = \"#121212\";\n  context.fill();\n\n  // context.stroke();\n  // context.closePath();\n\n  segments.forEach((segment, i) => {\n    const from = i * coeff;\n    const to = (i + 1) * coeff;\n\n    // console.log(i, radToDeg(from), radToDeg(to));\n\n    // const lineX = getX(radius, radius, from);\n    // const lineY = getX(radius, radius, from);\n\n    context.beginPath();\n    // context.moveTo(lineX, lineY);\n    // context.lineTo(radius, radius);\n    // context.closePath();\n    context.arc(radius, radius, radius - LINE_WIDTH / 2, from, to);\n    context.lineTo(radius, radius);\n    context.strokeStyle = \"#fff\";\n    context.lineWidth = LINE_WIDTH;\n    // context.fillStyle = \"#fff\";\n    // context.fill();\n    context.stroke();\n\n    const meanAngle = meanAngleDeg(from, to);\n    const textAngleRotation = meanAngle + Math.PI;\n    const textAngle = -(meanAngle + 1.5 * Math.PI);\n    const textX = getX(radius, radius - textOffset, textAngle);\n    const textY = getY(radius, radius - textOffset, textAngle);\n\n    context.save();\n    context.translate(textX, textY);\n    context.rotate(textAngleRotation);\n    context.beginPath();\n    context.font = textFont;\n    context.fillStyle = \"#fff\";\n    // TODO: 4 should depends on radius\n    context.fillText(segment.name, 0, 4);\n    // context.arc(0, 0, 2, 0, 2 * Math.PI);\n    // context.fill();\n    context.restore();\n  });\n\n  // context.beginPath();\n  // context.arc(radius, radius, 25, 0, 2 * Math.PI);\n  // context.fillStyle = \"#fff\";\n  // context.fill();\n  // context.stroke();\n\n  // context.restore();\n};\n\nexport default drawCircle;\n","import { useEffect, useMemo, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport timingFunction from \"utils/timingFunction\";\nimport { GLOBAL_FONT } from \"utils/constants\";\nimport sliceTextByMaxWidth from \"utils/sliceTextByMaxWidth\";\nimport drawCircle from \"features/rollGame/drawCircle\";\nimport {\n  isRollingSelector,\n  rolledGamesSelector\n} from \"features/rollGame/rollGameSlice\";\nimport { RolledGame } from \"features/rollGame/rollGameTypes\";\nimport {\n  secondsToSpinSelector,\n  speedSelector\n} from \"features/options/optionsSlice\";\n\nconst getGameIndexByAngle = (angle: number, segmentsCount: number) => {\n  const a = Math.abs((angle % (Math.PI * 2)) - Math.PI * 2) + Math.PI;\n  const coeff = (2 * Math.PI) / segmentsCount;\n\n  return Math.floor(a / coeff) % segmentsCount;\n};\n\nconst normalizeSegments = (\n  segments: RolledGame[],\n  textFont: string,\n  maxTextWidth: number\n): RolledGame[] =>\n  segments.map(({ name, ...rest }, i) => ({\n    name: sliceTextByMaxWidth(name, textFont, maxTextWidth),\n    ...rest\n  }));\n\ntype Options = {\n  radius: number;\n  canvasRef: React.RefObject<HTMLCanvasElement>;\n  onRollComplete: (id: number) => void;\n};\n\ntype State = {\n  // requestAnimationFrame id\n  requestId: number | null;\n  // previous time in the animate function\n  prevTime: number | null;\n  // time from the start of the animation\n  incTime: number;\n  // full canvas rotation angle\n  incAngle: number;\n  scale: number;\n};\n\nconst initialState = {\n  requestId: null,\n  prevTime: null,\n  incTime: 0,\n  incAngle: 0,\n  scale: -1\n};\n\n// NOTE: in \"variableI\" letter \"I\" means UnitInterval - [0, 1)\n\nconst useDrawCircle = ({ radius, canvasRef, onRollComplete }: Options) => {\n  const stateRef = useRef<State>(initialState);\n\n  const isRolling = useSelector(isRollingSelector);\n  const speed = useSelector(speedSelector);\n  const secondsToSpin = useSelector(secondsToSpinSelector);\n  const rolledGames = useSelector(rolledGamesSelector);\n\n  const textFont = `${(12 / 200) * radius}px ${GLOBAL_FONT}`;\n  const textMaxWidth = (135 / 200) * radius;\n\n  const segments = normalizeSegments(rolledGames, textFont, textMaxWidth);\n  const drawFunc = useMemo(() => drawCircle(segments, radius, textFont), [\n    segments,\n    radius,\n    textFont\n  ]);\n\n  // TODO: fix circle blinking on resize\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (!canvasRef.current) return;\n\n      const dpr = window.devicePixelRatio || 1;\n\n      console.log(dpr);\n\n      const rect = canvasRef.current.getBoundingClientRect();\n      const context = canvasRef.current.getContext(\"2d\");\n\n      if (!context) return;\n\n      // if animation not playing update scale and redraw\n      if (!stateRef.current.requestId) {\n        canvasRef.current.width = rect.width * dpr;\n        canvasRef.current.height = rect.height * dpr;\n        context.scale(dpr, dpr);\n\n        drawFunc(context, 0);\n      }\n\n      stateRef.current.scale = dpr;\n    };\n\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [canvasRef, stateRef, drawFunc]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const context = canvasRef.current.getContext(\"2d\");\n    const state = stateRef.current;\n\n    if (!context) return;\n\n    // first initial draw\n    drawFunc(context, 0);\n\n    const stop = () => {\n      if (!state.requestId) return;\n\n      window.cancelAnimationFrame(state.requestId);\n\n      state.incAngle = 0;\n      state.prevTime = null;\n      state.incTime = 0;\n    };\n\n    const animate = (time: number) => {\n      if (state.prevTime === null) {\n        state.prevTime = time;\n      }\n\n      const deltaTime = time - state.prevTime;\n      state.prevTime = time;\n\n      state.incTime += deltaTime;\n\n      if (state.incTime > secondsToSpin * 1000) {\n        const segmentIndex = getGameIndexByAngle(\n          state.incAngle,\n          segments.length\n        );\n\n        onRollComplete(segmentIndex);\n        stop();\n        return;\n      }\n\n      const timeI = state.incTime / (secondsToSpin * 1000);\n      const speedI = timingFunction(timeI);\n      const angle = ((2 * Math.PI) / 360) * speedI * speed;\n\n      drawFunc(context, angle);\n\n      state.incAngle += angle;\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    const start = () => {\n      const { scale } = stateRef.current;\n\n      context.resetTransform();\n      context.scale(scale, scale);\n\n      state.requestId = window.requestAnimationFrame(animate);\n    };\n\n    if (isRolling) {\n      start();\n    }\n\n    return () => stop();\n  }, [\n    canvasRef,\n    stateRef,\n    drawFunc,\n    secondsToSpin,\n    isRolling,\n    speed,\n    segments.length,\n    onRollComplete\n  ]);\n};\n\nexport default useDrawCircle;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"#121212\",\n  stroke: \"#fff\",\n  strokeWidth: 4,\n  d: \"M2 3v26l26-13z\"\n});\n\nvar SvgArrowRight = function SvgArrowRight(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 32 32\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArrowRight, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow-right.94c9ce06.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useRef, useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport * as colors from \"@material-ui/core/colors\";\nimport useDocumentWidth from \"hooks/useDocumentWidth\";\nimport {\n  rollGameComplete,\n  rollGameStart,\n  updateRolledGames,\n  isRollingSelector\n} from \"features/rollGame/rollGameSlice\";\nimport useDrawCircle from \"features/rollGame/useDrawCircle\";\n\nimport { ReactComponent as ArrowRightSvg } from \"icons/arrow-right.svg\";\nimport { selectedPlatformIdsSelector } from \"features/options/optionsSlice\";\n\ntype CircleCanvasRootProps = {\n  styleWidth: number;\n  styleHeight: number;\n};\nconst CircleCanvasRoot = styled.div<CircleCanvasRootProps>`\n  position: relative;\n  align-self: center;\n  width: ${p => p.styleWidth}px;\n  height: ${p => p.styleHeight}px;\n`;\nconst Canvas = styled.canvas`\n  display: block;\n  width: ${p => p.width}px;\n  height: ${p => p.height}px;\n`;\nconst RollButton = styled.button<{ radius: number }>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: 0;\n  padding: 0;\n  width: ${p => (60 / 200) * p.radius}px;\n  height: ${p => (60 / 200) * p.radius}px;\n  color: #fff;\n  background-color: ${colors.grey[800]};\n  border: 4px solid #fff;\n  border-radius: 50%;\n  font-size: ${p => (14 / 200) * p.radius}px;\n  text-transform: uppercase;\n  outline: none;\n  cursor: pointer;\n  transform: translate(-50%, -50%);\n  transition-property: color;\n  transition-duration: 0.2s;\n  transition-timing-function: ease;\n\n  &[disabled] {\n    color: ${colors.grey[800]};\n    pointer-events: none;\n  }\n`;\nconst ArrowRightIcon = styled(ArrowRightSvg)`\n  position: absolute;\n  top: 50%;\n  left: 1px;\n  width: 32px;\n  height: 32px;\n  transform: translateY(-50%);\n`;\n\nconst CircleCanvas = () => {\n  const dispatch = useDispatch();\n  const [radius, setRadius] = useState(300);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isRolling = useSelector(isRollingSelector);\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n  const size = radius * 2;\n\n  const documentWidth = useDocumentWidth();\n\n  const isRollButtonDisabled = isRolling || !selectedPlatformIds.length;\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (documentWidth < 450) {\n        setRadius(140);\n      } else if (documentWidth < 1840) {\n        setRadius(200);\n      } else {\n        setRadius(300);\n      }\n    };\n\n    handleResize();\n  }, [setRadius, documentWidth]);\n\n  const handleRollStart = () => {\n    dispatch(updateRolledGames());\n    dispatch(rollGameStart());\n  };\n\n  const handleRollComplete = (id: number) => dispatch(rollGameComplete(id));\n\n  useDrawCircle({\n    canvasRef,\n    radius,\n    onRollComplete: handleRollComplete\n  });\n\n  return (\n    <CircleCanvasRoot styleWidth={size} styleHeight={size}>\n      <Canvas width={size} height={size} ref={canvasRef} />\n      <RollButton\n        disabled={isRollButtonDisabled}\n        radius={radius}\n        onClick={handleRollStart}\n      >\n        Roll\n      </RollButton>\n      <ArrowRightIcon />\n    </CircleCanvasRoot>\n  );\n};\n\nexport default CircleCanvas;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport * as R from \"ramda\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport { selectedPlatformIdsSelector } from \"features/options/optionsSlice\";\n\nimport platforms from \"data/platforms.json\";\n\nconst Span = styled.span`\n  color: ${colors.grey[500]};\n`;\nconst Strong = styled.strong`\n  font-weight: normal;\n  color: #fff;\n`;\n\nconst SelectedPlatformsMessage = () => {\n  const selectedPlatformIds = useSelector(selectedPlatformIdsSelector);\n\n  if (!selectedPlatformIds.length) {\n    return <Strong>Please choose one or more platfotms</Strong>;\n  }\n\n  if (selectedPlatformIds.length === platforms.length) {\n    return (\n      <Span>\n        Selected platforms: <Strong>all</Strong>\n      </Span>\n    );\n  }\n\n  const selectedPlatforms = selectedPlatformIds\n    .slice(0, 3)\n    .map(id => platforms.find(R.propEq(\"id\", id)));\n\n  if (selectedPlatformIds.length === 1) {\n    return (\n      <Span>\n        Selected platform: <Strong>{selectedPlatforms[0]?.name}</Strong>\n      </Span>\n    );\n  }\n\n  return (\n    <Span>\n      Selected platforms:{\" \"}\n      {selectedPlatforms.map((platform, index) => (\n        <React.Fragment key={index}>\n          <Strong key={platform?.id}>{platform?.name}</Strong>\n          {selectedPlatforms.length - 1 !== index && \", \"}\n        </React.Fragment>\n      ))}\n      {selectedPlatformIds.length > 3 && (\n        <>\n          {\" and \"}\n          <Strong>{selectedPlatformIds.length - 3}</Strong>\n          {\" more\"}\n        </>\n      )}\n    </Span>\n  );\n};\n\nexport default SelectedPlatformsMessage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { Typography } from \"@material-ui/core\";\n\nimport * as colors from \"@material-ui/core/colors\";\nimport {\n  isRollingSelector,\n  rolledGameSelector\n} from \"features/rollGame/rollGameSlice\";\nimport SelectedPlatformsMessage from \"features/rollGame/SelectedPlatformsMessage\";\n\nconst ResultRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n  text-align: center;\n`;\n// TODO: organize this components\nconst Span = styled.span`\n  color: ${colors.grey[500]};\n`;\nconst Strong = styled.strong`\n  font-weight: normal;\n  color: #fff;\n`;\n\n// TODO: show platforms for the first load\n\nconst Result = () => {\n  const isRolling = useSelector(isRollingSelector);\n  const rolledGame = useSelector(rolledGameSelector);\n\n  const renderRolledGame = () => {\n    if (!rolledGame) return null;\n\n    const { name, platform } = rolledGame;\n\n    return (\n      <>\n        <Typography\n          variant=\"h4\"\n          style={{ marginBottom: 8, textAlign: \"center\" }}\n        >\n          {name}\n        </Typography>\n        <Typography variant=\"h6\">\n          <Span>\n            Platform: <Strong>{platform}</Strong>\n          </Span>\n        </Typography>\n      </>\n    );\n  };\n\n  const renderSelectedPlatforms = () => (\n    <Typography variant=\"h6\">\n      <SelectedPlatformsMessage />\n    </Typography>\n  );\n\n  return (\n    <ResultRoot>\n      {isRolling || !rolledGame\n        ? renderSelectedPlatforms()\n        : renderRolledGame()}\n    </ResultRoot>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport CircleCanvas from \"features/rollGame/CircleCanvas\";\nimport Result from \"features/rollGame/Result\";\n\nconst RollGameRoot = styled.main`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype Props = {\n  className?: string;\n};\n\nconst RollGame = ({ className }: Props) => {\n  return (\n    <RollGameRoot className={className}>\n      <CircleCanvas />\n      <Result />\n    </RollGameRoot>\n  );\n};\n\nexport default RollGame;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport GlobalStyles from \"styles\";\nimport Header from \"components/Header\";\nimport Sidebar from \"components/Sidebar\";\nimport Footer from \"components/Footer\";\nimport Platforms from \"features/platforms/Platforms\";\nimport Options from \"features/options/Options\";\nimport GameLinks from \"features/rollGame/GameLinks\";\nimport RollGame from \"features/rollGame/RollGame\";\nimport { updateRolledGames } from \"features/rollGame/rollGameSlice\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst AppRoot = styled.div`\n  display: grid;\n  min-height: 100vh;\n  grid-template-columns: 16px auto 16px;\n  grid-template-rows: 48px 24px auto 24px auto 24px auto 24px 200px;\n  grid-template-areas:\n    \"header header     header\"\n    \".      .          .     \"\n    \".      roll-game  .     \"\n    \".      .          .     \"\n    \".      side-left  .     \"\n    \".      .          .     \"\n    \".      side-right .     \"\n    \".      .          .     \"\n    \"footer footer     footer\";\n\n  @media (min-width: 720px) {\n    grid-template-columns: 32px auto 32px;\n  }\n\n  @media (min-width: 1200px) {\n    grid-template-columns: auto 340px 40px 400px 40px 340px auto;\n    grid-template-rows: 48px 40px auto 40px 48px;\n    grid-template-areas:\n      \"header header    header header    header header     header\"\n      \".      .         .      .         .      .          .     \"\n      \".      side-left .      roll-game .      side-right .     \"\n      \".      .         .      .         .      .          .     \"\n      \"footer footer    footer footer    footer footer     footer\";\n  }\n\n  @media (min-width: 1840px) {\n    grid-template-columns: auto 360px 40px 840px 40px 360px auto;\n    grid-template-rows: 64px 40px auto 40px 64px;\n  }\n`;\nconst StyledHeader = styled(Header)`\n  grid-area: header;\n`;\nconst StyledSidebarLeft = styled(Sidebar)`\n  grid-area: side-left;\n  /* min-height: 980px; */\n\n  @media (min-width: 1200px) {\n    min-height: none;\n  }\n`;\nconst StyledSidebarRight = styled(Sidebar)`\n  grid-area: side-right;\n`;\nconst StyledRollGame = styled(RollGame)`\n  grid-area: roll-game;\n`;\nconst StyledFooter = styled(Footer)`\n  grid-area: footer;\n`;\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(updateRolledGames());\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <AppRoot>\n        <StyledHeader />\n        <StyledSidebarLeft>\n          <Platforms />\n        </StyledSidebarLeft>\n        <StyledSidebarRight>\n          <Options />\n          <GameLinks />\n        </StyledSidebarRight>\n        <StyledRollGame />\n        <StyledFooter />\n      </AppRoot>\n      <GlobalStyles />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport rollGame from \"features/rollGame/rollGameSlice\";\nimport options from \"features/options/optionsSlice\";\n\nconst rootReducer = combineReducers({\n  rollGame,\n  options\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport rootReducer, { RootState } from \"app/rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"app/App\";\nimport store from \"app/store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}